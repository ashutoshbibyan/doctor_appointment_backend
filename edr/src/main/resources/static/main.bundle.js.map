{"version":3,"sources":["/home/ashu/Documents/edr_webapp/src/$_lazy_route_resource lazy","/home/ashu/Documents/edr_webapp/src/app/app.component.css","/home/ashu/Documents/edr_webapp/src/app/app.component.html","/home/ashu/Documents/edr_webapp/src/app/app.component.ts","/home/ashu/Documents/edr_webapp/src/app/app.module.ts","/home/ashu/Documents/edr_webapp/src/app/app_routes_config.ts","/home/ashu/Documents/edr_webapp/src/app/common/address_form.ts","/home/ashu/Documents/edr_webapp/src/app/common/common_module.ts","/home/ashu/Documents/edr_webapp/src/app/common/common_service.ts","/home/ashu/Documents/edr_webapp/src/app/common/confirmation_dialog.ts","/home/ashu/Documents/edr_webapp/src/app/common/css/user_choose_profile_image.css","/home/ashu/Documents/edr_webapp/src/app/common/css/user_image_gallery.css","/home/ashu/Documents/edr_webapp/src/app/common/css/user_image_upload.css","/home/ashu/Documents/edr_webapp/src/app/common/html/address_form.html","/home/ashu/Documents/edr_webapp/src/app/common/html/confirmation_dialog.html","/home/ashu/Documents/edr_webapp/src/app/common/html/user_choose_profile_image.html","/home/ashu/Documents/edr_webapp/src/app/common/html/user_image_gallery.html","/home/ashu/Documents/edr_webapp/src/app/common/html/user_image_upload.html","/home/ashu/Documents/edr_webapp/src/app/common/user_choose_profile_image.ts","/home/ashu/Documents/edr_webapp/src/app/common/user_image_gallery.ts","/home/ashu/Documents/edr_webapp/src/app/common/user_image_upload.ts","/home/ashu/Documents/edr_webapp/src/app/dr/css/add_hours.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_appointment_show.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_holiday_show.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_home.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_make_appointment.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_panel.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_profile_edit.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_public_profile.css","/home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_signup.css","/home/ashu/Documents/edr_webapp/src/app/dr/doctor.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_add_working_hours.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_appointment_setup.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_appointment_show.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_holiday.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_holiday_show.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_home.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_make_appointment.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_module.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_panel.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_profile_edit.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_public_profile.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_routing_config.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_routing_module.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_service.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_signup.ts","/home/ashu/Documents/edr_webapp/src/app/dr/doctor_write_prescription.ts","/home/ashu/Documents/edr_webapp/src/app/dr/html/add_hours.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_appointment_setup.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_appointment_show.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_holiday.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_holiday_show.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_home.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_make_appointment.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_panel.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_profile_edit.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_public_profile.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_signup.html","/home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_write_prescription.html","/home/ashu/Documents/edr_webapp/src/app/error.ts","/home/ashu/Documents/edr_webapp/src/app/home.html","/home/ashu/Documents/edr_webapp/src/app/home.ts","/home/ashu/Documents/edr_webapp/src/app/layout/site_main_footer.html","/home/ashu/Documents/edr_webapp/src/app/layout/site_main_footer.ts","/home/ashu/Documents/edr_webapp/src/app/layout/site_main_header.html","/home/ashu/Documents/edr_webapp/src/app/layout/site_main_header.ts","/home/ashu/Documents/edr_webapp/src/app/material/material.module.ts","/home/ashu/Documents/edr_webapp/src/app/model/address.ts","/home/ashu/Documents/edr_webapp/src/app/model/appointment.ts","/home/ashu/Documents/edr_webapp/src/app/model/city.ts","/home/ashu/Documents/edr_webapp/src/app/model/day.ts","/home/ashu/Documents/edr_webapp/src/app/model/degree.ts","/home/ashu/Documents/edr_webapp/src/app/model/disease.ts","/home/ashu/Documents/edr_webapp/src/app/model/doctorInPatient.ts","/home/ashu/Documents/edr_webapp/src/app/model/formresult.ts","/home/ashu/Documents/edr_webapp/src/app/model/hourListOptions.ts","/home/ashu/Documents/edr_webapp/src/app/model/hours.ts","/home/ashu/Documents/edr_webapp/src/app/model/prescription.ts","/home/ashu/Documents/edr_webapp/src/app/model/speciality.ts","/home/ashu/Documents/edr_webapp/src/app/model/state.ts","/home/ashu/Documents/edr_webapp/src/app/model/userfile.ts","/home/ashu/Documents/edr_webapp/src/app/patient/add_doctor.ts","/home/ashu/Documents/edr_webapp/src/app/patient/appointment_with_added_doctor.ts","/home/ashu/Documents/edr_webapp/src/app/patient/css/patient_home.css","/home/ashu/Documents/edr_webapp/src/app/patient/css/patient_signup.css","/home/ashu/Documents/edr_webapp/src/app/patient/css/search_doc_using_city_speciality.css","/home/ashu/Documents/edr_webapp/src/app/patient/html/add_doctor.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/appointment_with_added_doctor.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/make_appointment.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/patient_add_address.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/patient_home.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/patient_make_appointment.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/patient_make_appointment_without_login.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/patient_profile.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/patient_signup.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/search_doc_using_docid.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/search_doc_using_docname.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/search_doc_using_speciality.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/search_using_city_speciality.html","/home/ashu/Documents/edr_webapp/src/app/patient/html/show_doctor_added.html","/home/ashu/Documents/edr_webapp/src/app/patient/make_appointment.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_add_address.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_home.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_make_appointment.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_make_appointment_without_login.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_module.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_profile.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_routing_config.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_routing_module.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_search_doc_using_city_speciality.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_service.ts","/home/ashu/Documents/edr_webapp/src/app/patient/patient_signup.ts","/home/ashu/Documents/edr_webapp/src/app/patient/search_doc_using_docid.ts","/home/ashu/Documents/edr_webapp/src/app/patient/search_doc_using_docname.ts","/home/ashu/Documents/edr_webapp/src/app/patient/search_doc_using_speciality.ts","/home/ashu/Documents/edr_webapp/src/app/patient/show_doctors_added.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/css/admin_home.css","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_city.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_degree.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_disease.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_speciality.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_state.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/admin_home.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_city.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_degree.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_disease.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_specialities.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_state.html","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_city.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_degree.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_disease.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_speciality.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_state.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_home.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_city.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_degree.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_disease.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_specialities.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_state.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_module.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_routing_config.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_routing_module.ts","/home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_service.ts","/home/ashu/Documents/edr_webapp/src/app/user/css/login.css","/home/ashu/Documents/edr_webapp/src/app/user/html/login.html","/home/ashu/Documents/edr_webapp/src/app/user/html/user_phone_varification.html","/home/ashu/Documents/edr_webapp/src/app/user/html/user_signup.html","/home/ashu/Documents/edr_webapp/src/app/user/login.ts","/home/ashu/Documents/edr_webapp/src/app/user/user.module.ts","/home/ashu/Documents/edr_webapp/src/app/user/user.ts","/home/ashu/Documents/edr_webapp/src/app/user/user_phone_varification.ts","/home/ashu/Documents/edr_webapp/src/app/user/user_routing_config.ts","/home/ashu/Documents/edr_webapp/src/app/user/user_routing_module.ts","/home/ashu/Documents/edr_webapp/src/app/user/user_service.ts","/home/ashu/Documents/edr_webapp/src/app/user/user_signup.ts","/home/ashu/Documents/edr_webapp/src/environments/environment.ts","/home/ashu/Documents/edr_webapp/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mH;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAMI,UAAK,GAAG,KAAK,CAAC;IAElB,CAAC;IAHY,YAAY;QALxB,wEAAS,CAAE;YACR,QAAQ,EAAE,UAAU;;;SAGvB,CAAE;OACU,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACqB;AAClC;AACe;AACnB;AACM;AACC;AACS;AACT;AAClB;AACmC;AACH;AACJ;AAIX;AAe/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,uEAAQ,CAAE;YACP,YAAY,EAAE;gBACV,qEAAY,EAAE,mDAAI;aACrB;YACD,OAAO,EAAE;gBACL,qEAAY,CAAC,OAAO,CAAE,qEAAS,CAAE;gBACjC,qFAAmB,CAAC,QAAQ,CAAE,iBAAiB,EAAE,EAAE,OAAO,EAAE,+EAAW,CAAC,UAAU,EAAE,CAAE;gBACtF,gFAAa,EAAE,qGAAuB,EAAE,qEAAU,EAAE,mEAAW,EAAE,iFAAc;gBAC/E,8EAAa,EAAE,uFAAe;aACjC;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,qEAAY,CAAC;SAC5B,CAAE;OACU,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;AC9BQ;AAE9B,IAAM,IAAI,GAAU,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAI,EAAE,CAAC;AAE3C,IAAM,SAAS,GAAW,CAAC,IAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACLxC;;;4BAG4B;AACoC;AACiB;AAEhC;AASjD;IAgCI,qBAAqB,WAAwB,EAAU,aAA4B;QAA9D,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QA3BnF,yBAAyB;QACf,YAAO,GAA4B,IAAI,mEAAY,EAAa,CAAC;QAM3E,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAC/C,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAExD,UAAK,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACtC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,SAAI,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACrC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,YAAO,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACxC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;IAMJ,CAAC;IAED,8BAAQ,GAAR;QAEI,IAAI,CAAC,WAAW,EAAE,CAAC;QAGnB,mCAAmC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAEvC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAE,CAAC;IAER,CAAC;IAED,oCAAoC;IAEpC,iCAAW,GAAX;QAAA,iBAQC;QAPG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC7C,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,MAAM,CAAE,CAAC;YAE/B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAED,yDAAyD;IACzD,kCAAY,GAAZ;QAAA,iBASC;QAPG,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,aAAa,CAAC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC5E,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBAEtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAED,wEAAwE;IACxE,4BAAM,GAAN;QAGI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAI1C,CAAC;IA/ES;QAAT,qEAAM,EAAE;kCAAU,mEAAY;gDAA4C;IANlE,WAAW;QALvB,wEAAS,CAAE;YACR,QAAQ,EAAE,cAAc;;SAE3B,CAAE;yCAkCmC,mEAAW,EAAyB,sEAAa;OAhC1E,WAAW,CAwFvB;IAAD,kBAAC;CAAA;AAxFuB;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiB;AACY;AACR;AACI;AACY;AACd;AACO;AACE;AACa;AACZ;AAWzD;IAAA;IAEA,CAAC;IAFY,eAAe;QAR3B,uEAAQ,CAAE;YACP,OAAO,EAAE,CAAC,iFAAc,EAAE,qEAAY,EAAE,2EAAmB,CAAC;YAC5D,YAAY,EAAE,CAAC,kEAAW,EAAE,2EAAe,EAAE,6EAAgB,EAAE,0FAAsB;gBACpF,gFAAkB,CAAC;YACpB,OAAO,EAAE,CAAC,kEAAW,EAAE,0FAAsB,CAAC;YAC9C,SAAS,EAAE,CAAC,sEAAa,CAAC;SAC7B,CAAE;OAEU,eAAe,CAE3B;IAAD,sBAAC;CAAA;AAF2B;;;;;;;;;;;;;;;;;;;;;;ACpBe;AACoC;AACrB;AAK1D;IAQI,uBAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAN/B,mBAAc,GAAG,8EAAc,CAAC;QAEhC,YAAO,GAAY,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAE,CAAC;QACzE,gBAAW,GAAmB,IAAI,qEAAc,CAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAE,CAAC;IAK9E,CAAC;IAED,oEAAoE;IAE7D,mCAAW,GAAlB;QACI,IAAI,GAAG,GAAG,0BAA0B,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED,oEAAoE;IAE7D,oCAAY,GAAnB,UAAqB,OAAe;QAChC,IAAI,GAAG,GAAG,yBAAyB,CAAC;QACpC,IAAI,KAAK,GAAG,IAAI,sEAAe,EAAE,CAAC;QAClC,KAAK,CAAC,GAAG,CAAE,SAAS,EAAE,OAAO,CAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED,sFAAsF;IACtF,oCAAY,GAAZ,UAAc,KAAa;QACvB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;YAEpD,EAAE,CAAC,CAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAM,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACxC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAGM,oCAAY,GAAnB;QACI,IAAI,GAAG,GAAG,2BAA2B,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAGM,wCAAgB,GAAvB;QACI,IAAI,GAAG,GAAG,+BAA+B,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED,oDAAoD;IAC7C,mCAAW,GAAlB,UAAoB,QAAQ;QAExB,IAAI,GAAG,GAAW,2BAA2B,CAAC;QAE9C,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAExB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,QAAQ,CAAE,CAAC;IAE3C,CAAC;IAED,sEAAsE;IAC/D,qCAAa,GAApB,UAAsB,MAAc,EAAE,QAAgB;QAClD,IAAI,GAAG,GAAG,8BAA8B,CAAC;QAEzC,IAAI,KAAK,GAAoB,IAAI,sEAAe,EAAE,CAAC;QAEnD,KAAK,CAAC,GAAG,CAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAE,CAAC;QACzC,KAAK,CAAC,GAAG,CAAE,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAE,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAGhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IA7EQ,aAAa;QADzB,yEAAU,EAAE;yCASkB,2DAAI;OARtB,aAAa,CAkFzB;IAAD,oBAAC;CAAA;AAlFyB;;;;;;;;;;;;;;;;;;;;;ACPc;AACO;AAQ/C;IAGI,4BAAoB,YAA6C;QAA7C,iBAAY,GAAZ,YAAY,CAAiC;IAEjE,CAAC;IAED,oCAAO,GAAP;QAEI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,mCAAM,GAAN;QACI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAdQ,kBAAkB;QAL9B,wEAAS,CAAC;YACP,QAAQ,EAAC,qBAAqB;;SAEjC,CAAC;yCAKmC,uEAAY;OAHpC,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA;AAhB8B;;;;;;;;ACT/B;AACA;;;AAGA;AACA,6CAA8C,yBAAyB,0BAA0B,qCAAqC,GAAG;;AAEzI;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,6BAA8B,iBAAiB,GAAG,mBAAmB,wBAAwB,wBAAwB,iBAAiB,kCAAkC,iCAAiC,+BAA+B,+BAA+B,uBAAuB,uBAAuB,kCAAkC,mCAAmC,yCAAyC,GAAG,YAAY,wBAAwB,wBAAwB,iBAAiB,4BAA4B,6BAA6B,mCAAmC,GAAG,cAAc,oDAAoD,6HAA6H,yDAAyD,aAAa,oBAAoB,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,0BAA0B,2BAA2B,iCAAiC,6BAA6B,qCAAqC,GAAG;;AAE5sC;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,qCAAsC,sBAAsB,kBAAkB,gBAAgB,cAAc,GAAG,kBAAkB,gBAAgB,sBAAsB,6BAA6B,gBAAgB,iBAAiB,wBAAwB,wBAAwB,iBAAiB,6BAA6B,8BAA8B,+BAA+B,4BAA4B,6BAA6B,mCAAmC,OAAO,wBAAwB,sBAAsB,+BAA+B,0BAA0B,GAAG,UAAU,gBAAgB,GAAG;;AAE1mB;;;AAGA;AACA,2C;;;;;;;ACXA,q6BAAq6B,iBAAiB,uaAAua,eAAe,0rB;;;;;;;ACA52C,4O;;;;;;;ACAA,8wB;;;;;;;ACAA,oKAAoK,8CAA8C,SAAS,YAAY,+V;;;;;;;ACAvO,gP;;;;;;;;;;;;;;;;;;;;;ACA0C;AAEW;AAEc;AAUnE;IAYI,gCAAqB,aAA4B,EAAU,WAAwB;QAA9D,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QARnF,kBAAa,GAAY,KAAK,CAAC;QAE/B,eAAU,GAAY,IAAI,CAAC;IAQ3B,CAAC;IAGD;;2EAEuE;IAEvE,yCAAQ,GAAR,UAAU,KAAK;QACX,EAAE,CAAC,CAAE,KAAM,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC;IAEL,CAAC;IAID;;mDAE+C;IAC/C,6CAAY,GAAZ,UAAc,KAAK;QACf,EAAE,CAAC,CAAE,KAAK,IAAI,SAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC;IAGL,CAAC;IAGD,iGAAiG;IACjG,uCAAM,GAAN;QAAA,iBAaC;QAXG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC3E,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,IAAI,UAAU,GAAe,IAAI,CAAC,IAAI,EAAE,CAAC;gBACzC,EAAE,CAAC,CAAE,UAAU,CAAC,MAAO,CAAC,CAAC,CAAC;oBAEtB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,EAAE,eAAe,EAAE;wBACxD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,oDAAoD;IAEpD,2CAAU,GAAV,UAAY,KAAwB;QAChC,EAAE,CAAC,CAAE,KAAK,CAAC,KAAK,IAAI,CAAE,CAAC,CAAC,CAAC;YAGrB;;mCAEuB;YACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAE3B,6BAA6B;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;IACL,CAAC;IA3EQ,sBAAsB;QANlC,wEAAS,CAAE;YACR,QAAQ,EAAE,2BAA2B;;;SAGxC,CAAE;yCAcqC,yEAAa,EAAuB,sEAAW;OAZ1E,sBAAsB,CAwFlC;IAAD,6BAAC;CAAA;AAxFkC;;;;;;;;;;;;;;;;;;;;;;;ACdoC;AACtB;AACU;AACd;AAS7C;IAqBI,0BAAqB,aAA4B,EAAU,WAAwB;QAA9D,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAlBnF,aAAQ,GAA2B,IAAI,mEAAY,EAAE,CAAC;QAMtD,WAAM,GAAa,IAAI,KAAK,EAAE,CAAC;QAE/B,WAAM,GAAW,CAAC,CAAC;QAEnB,aAAQ,GAAW,EAAE,CAAC;QAItB,iBAAY,GAAa,IAAI,iEAAQ,EAAE,CAAC;IAMxC,CAAC;IAGD,mCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;IAIpD,CAAC;IAGD,sCAAW,GAAX;QAEI,EAAE,CAAC,CAAE,IAAI,CAAC,MAAO,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAEpD,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAc,MAAc,EAAE,QAAgB;QAA9C,iBAQC;QANG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,MAAM,EAAE,QAAQ,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACjE,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;YACjD,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,sCAAW,GAAX,UAAa,KAAe;QAExB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;IAEhC,CAAC;IAID,kCAAO,GAAP,UAAS,KAAgB;QACrB,IAAI,CAAC,YAAY,CAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,CAAE,CAAC;IACzD,CAAC;IA7DD;QADC,qEAAM,EAAE;kCACC,mEAAY;sDAAgC;IAGtD;QADC,oEAAK,EAAE;;oDACQ;IANP,gBAAgB;QAN5B,wEAAS,CAAE;YACR,QAAQ,EAAE,cAAc;;;SAG3B,CAAE;yCAuBqC,sEAAa,EAAuB,sEAAW;OArB1E,gBAAgB,CAmE5B;IAAD,uBAAC;CAAA;AAnE4B;;;;;;;;;;;;;;;;;;;;;;ACZmC;AACf;AAED;AAUhD;IAQI,yBAAqB,aAA4B,EAAU,WAAwB;QAA9D,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QANnF,aAAQ,GAAY,KAAK,CAAC;QAG1B,aAAQ,GAA0B,IAAI,mEAAY,EAAE,CAAC;IAKrD,CAAC;IAKD,gCAAM,GAAN,UAAQ,KAAK;QAAb,iBAuCC;QAnCG,IAAI,QAAQ,GAAa,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC5C,EAAE,CAAC,CAAE,QAAQ,CAAC,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,IAAI,GAAS,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE7B,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;YACxC,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;YAE1C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;gBAEvD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;oBACtB,IAAI,MAAM,GAAe,IAAI,CAAC,IAAI,EAAE,CAAC;oBAErC,EAAE,CAAC,CAAE,MAAM,CAAC,MAAO,CAAC,CAAC,CAAC;wBAElB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACtB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;wBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;4BAC5C,QAAQ,EAAE,IAAI;yBACjB,CAAE,CAAC;oBACR,CAAC;oBAED,IAAI,CAAC,CAAC;wBACF,EAAE,CAAC,CAAE,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC;4BACjB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;4BACtB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;gCAC5C,QAAQ,EAAE,IAAI;6BACjB,CAAE,CAAC;wBACR,CAAC;oBACL,CAAC;gBACL,CAAC;YAEL,CAAC,CAAE,CAAC;QACR,CAAC;IAEL,CAAC;IAjDD;QADC,qEAAM,EAAE;kCACC,mEAAY;qDAA+B;IAL5C,eAAe;QAP3B,wEAAS,CAAE;YACR,QAAQ,EAAE,iBAAiB;;;SAI9B,CAAE;yCAUqC,sEAAa,EAAuB,sEAAW;OAR1E,eAAe,CA4D3B;IAAD,sBAAC;CAAA;AA5D2B;;;;;;;;ACb5B;AACA;;;AAGA;AACA,+BAAgC,uBAAuB,GAAG,2BAA2B,uCAAuC,qBAAqB,eAAe,wBAAwB,wBAAwB,iBAAiB,6BAA6B,8BAA8B,+BAA+B,sBAAsB,SAAS,mBAAmB,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,sBAAsB,GAAG,oBAAoB,gBAAgB,GAAG,0FAA0F,mBAAmB,kCAAkC,mCAAmC,oCAAoC,oCAAoC,KAAK,OAAO,iGAAiG,SAAS,mCAAmC,gCAAgC,2BAA2B,GAAG,6BAA6B,wBAAwB,wBAAwB,iBAAiB,kCAAkC,iCAAiC,+BAA+B,+BAA+B,6BAA6B,8BAA8B,+BAA+B,2BAA2B,4BAA4B,kCAAkC,GAAG,sBAAsB,cAAc,GAAG,mBAAmB,wBAAwB,wBAAwB,iBAAiB,kCAAkC,iCAAiC,+BAA+B,+BAA+B,qBAAqB,+BAA+B,gCAAgC,iCAAiC,6BAA6B,8BAA8B,0CAA0C,GAAG,8BAA8B;;AAEh9D;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,yCAA0C,cAAc,qBAAqB,sBAAsB,yBAAyB,yBAAyB,kBAAkB,wBAAwB,wBAAwB,6BAA6B,qCAAqC,GAAG;;AAE5R;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,mFAAoF,cAAc,gBAAgB,iBAAiB,GAAG,gBAAgB,eAAe,WAAW,MAAM,eAAe,gBAAgB,mBAAmB,GAAG;;AAE3O;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,+CAAgD,oBAAoB,sBAAsB,uBAAuB,GAAG;;AAEpH;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,yCAA0C,yBAAyB,yBAAyB,kBAAkB,wBAAwB,wBAAwB,6BAA6B,qCAAqC,GAAG,eAAe,gBAAgB,GAAG;;AAErQ;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,oCAAqC,eAAe,sBAAsB,uBAAuB,wBAAwB,wBAAwB,iBAAiB,kCAAkC,mCAAmC,yCAAyC,yBAAyB,GAAG,kBAAkB,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,6BAA6B,8BAA8B,+BAA+B,GAAG,mBAAmB,qBAAqB,GAAG,0BAA0B,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,OAAO,gBAAgB,wBAAwB,wBAAwB,iBAAiB,+BAA+B,gCAAgC,iCAAiC,kCAAkC,mCAAmC,yCAAyC,GAAG,UAAU,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,WAAW,MAAM,eAAe,GAAG,OAAO,gCAAgC,gCAAgC,yBAAyB,qBAAqB,OAAO,UAAU,gBAAgB,GAAG,6CAA6C,eAAe,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,KAAK,uBAAuB,cAAc,GAAG,cAAc,cAAc,GAAG,uBAAuB,eAAe,GAAG,UAAU,eAAe,GAAG,2BAA2B,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,6BAA6B,8BAA8B,+BAA+B,4BAA4B,6BAA6B,mCAAmC,GAAG,oBAAoB,eAAe,sBAAsB,GAAG,+BAA+B,oBAAoB,gBAAgB,gBAAgB,OAAO;;AAEp+E;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,oCAAqC,oBAAoB,eAAe,sBAAsB,uBAAuB,wBAAwB,wBAAwB,iBAAiB,kCAAkC,mCAAmC,yCAAyC,GAAG,kBAAkB,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,6BAA6B,8BAA8B,+BAA+B,GAAG,mBAAmB,qBAAqB,GAAG,mBAAmB,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,6BAA6B,8BAA8B,+BAA+B,GAAG,uBAAuB,gBAAgB,GAAG,2BAA2B,eAAe,GAAG,0BAA0B,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,OAAO,gBAAgB,wBAAwB,wBAAwB,iBAAiB,+BAA+B,gCAAgC,iCAAiC,kCAAkC,mCAAmC,yCAAyC,GAAG,UAAU,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,WAAW,MAAM,eAAe,GAAG,OAAO,gCAAgC,gCAAgC,yBAAyB,qBAAqB,OAAO,UAAU,gBAAgB,GAAG,6CAA6C,eAAe,wBAAwB,wBAAwB,iBAAiB,gCAAgC,iCAAiC,kCAAkC,kCAAkC,KAAK,uBAAuB,cAAc,GAAG,cAAc,cAAc,GAAG;;AAEvvE;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,yCAA0C,cAAc,sBAAsB,uBAAuB,GAAG;;AAExG;;;AAGA;AACA,2C;;;;;;;;;;ACL6C;AAG7C;IAAA;QAQW,gBAAW,GAAU,IAAI,KAAK,EAAE,CAAC;QAOjC,cAAS,GAAY,IAAI,KAAK,EAAE,CAAC;QAEjC,iBAAY,GAAa,IAAI,iEAAQ,EAAE,CAAC;IAKnD,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/ByC;AAEO;AACA;AACV;AACJ;AAEuB;AACxB;AACK;AAC0C;AAC/D;AAE8B;AAOhD;IAoFI,+BAAqB,WAAwB,EAAU,aAA4B,EACrE,WAAwB,EAAS,MAAa;QADvC,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QACrE,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAnF5D,aAAQ,GAAY,IAAI,CAAC;QAEzB,cAAS,GAAW,QAAQ,CAAC;QAE7B,gBAAW,GAAU,IAAI,KAAK,EAAE,CAAC;QAEjC,eAAU,GAAe,IAAI,qEAAU,EAAE,CAAC;QAE1C,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAK9B,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,wBAAmB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE7D,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAExD,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAExD,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAExD,yBAAoB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE9D,qBAAgB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE1D,qBAAgB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE1D,qBAAgB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE1D,2BAAsB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEhE,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEzD,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEzD,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEzD,0BAAqB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE/D,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,wBAAmB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE7D,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEzD,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEzD,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEzD,0BAAqB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE/D,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,kBAAa,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEvD,wBAAmB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAG7D,eAAU,GAAW,CAAC,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;QACxB,kBAAa,GAAW,CAAC,CAAC;QAC1B,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QACvB,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAGvB,mBAAc,GAAG,8EAAc,CAAC;IAMhC,CAAC;IAGD,wCAAQ,GAAR;QAEI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC5C,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,qBAAqB,EAAE,IAAI,CAAC,mBAAmB;YAC/C,gBAAgB,EAAE,IAAI,CAAC,cAAc;YACrC,gBAAgB,EAAE,IAAI,CAAC,cAAc;YACrC,gBAAgB,EAAE,IAAI,CAAC,cAAc;YACrC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB;YACjD,kBAAkB,EAAE,IAAI,CAAC,gBAAgB;YACzC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB;YACzC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB;YACzC,wBAAwB,EAAE,IAAI,CAAC,sBAAsB;YACrD,iBAAiB,EAAE,IAAI,CAAC,eAAe;YACvC,iBAAiB,EAAE,IAAI,CAAC,eAAe;YACvC,iBAAiB,EAAE,IAAI,CAAC,eAAe;YACvC,uBAAuB,EAAE,IAAI,CAAC,qBAAqB;YACnD,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,qBAAqB,EAAE,IAAI,CAAC,mBAAmB;YAC/C,iBAAiB,EAAE,IAAI,CAAC,eAAe;YACvC,iBAAiB,EAAE,IAAI,CAAC,eAAe;YACvC,iBAAiB,EAAE,IAAI,CAAC,eAAe;YACvC,uBAAuB,EAAE,IAAI,CAAC,qBAAqB;YACnD,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,qBAAqB,EAAE,IAAI,CAAC,mBAAmB;SAIlD,CAAE,CAAC;QAGJ,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAOhC,CAAC;IAQD,kCAAkC;IAElC,oDAAoB,GAApB;QAAA,iBAuCC;QArCG,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACrD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBAEtB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAElB,IAAI,GAAG,GAAE,IAAI,CAAC,IAAI,EAAE,CAAC;oBAErB,EAAE,CAAC,CAAE,GAAG,CAAC,WAAW,IAAI,IAAK,CAAC,CAAC,CAAC;wBAE5B,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;wBAEnC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAG1B,CAAC;oBAED,IAAI,CAAC,CAAC;wBACF,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAC1B,CAAC;gBAGL,CAAC;gBAED,IAAI,EAAC;oBAED,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YAOL,CAAC;QACL,CAAC,CAAE,CAAC;IAGR,CAAC;IAKD,uCAAO,GAAP,UAAS,KAA2B;QAIhC,EAAE,CAAC,CAAE,KAAK,CAAC,OAAQ,CAAC,CAAC,CAAC;YAElB,IAAI,GAAG,GAAQ,IAAI,uDAAG,EAAE,CAAC;YAEzB,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAE,KAAK,CAAC,MAAM,CAAC,EAAE,CAAE,CAAC;YACxC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;YACvB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAE,GAAG,CAAE,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QAGjC,CAAC;QACD,IAAI,CAAC,CAAC;YAEF,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;gBACjD,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAE,QAAQ,CAAE,KAAK,CAAC,MAAM,CAAC,EAAE,CAAE,CAAG,CAAC,CAAC,CAAC;oBAEjE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACpC,CAAC;YACL,CAAC;QAEL,CAAC;IAEL,CAAC;IAID,sCAAM,GAAN;QAAA,iBAkCC;QAhCG,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QACvH,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAC3H,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QACnI,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAC/H,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QACvH,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAC/H,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAIvH,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACnE,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC9B,EAAE,CAAC,CAAE,KAAI,CAAC,UAAU,CAAC,MAAO,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE;wBACpD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,EAAE,CAAC,CAAE,KAAI,CAAC,UAAU,CAAC,KAAM,CAAC,CAAC,CAAC;wBAC1B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;4BACrD,QAAQ,EAAE,IAAI;yBACjB,CAAE,CAAC;oBACR,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IAKR,CAAC;IAED;kGAC8F;IAE9F,0CAAU,GAAV,UAAY,OAAe,EAAE,OAAe,EAAE,YAAoB,EAAE,KAAa;QAE7E,EAAE,CAAC,CAAE,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,EAAG,CAAC,CAAC,CAAC;YAEnC,EAAE,CAAC,CAAE,YAAY,IAAI,CAAE,CAAC,CAAC,CAAC;gBAItB,IAAI,KAAK,GAAU,IAAI,2DAAK,EAAE,CAAC;gBAG/B,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBACxB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBAGxB,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;gBAIlC,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;oBAEjD,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAM,CAAC,CAAC,CAAC;wBAEvC,IAAI,QAAQ,GAAY,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBAElD,EAAE,CAAC,CAAE,QAAQ,CAAC,MAAM,IAAI,CAAE,CAAC,CAAC,CAAC;4BAEzB,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;wBAE3B,CAAC;wBACD,IAAI,CAAC,CAAC;4BAEF,IAAI,OAAO,GAAY,KAAK,CAAC;4BAE7B,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;gCAGzC,EAAE,CAAC,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,OAAQ,CAAC,CAAC,CAAC;oCAGjF,OAAO,GAAG,IAAI,CAAC;gCACnB,CAAC;4BAIL,CAAC;4BAED,EAAE,CAAC,CAAE,CAAC,OAAQ,CAAC,CAAC,CAAC;gCACb,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;4BAC3B,CAAC;wBACL,CAAC;wBAGD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC;oBACzC,CAAC;gBACL,CAAC;YACL,CAAC;QAGL,CAAC;QAED,IAAI,CAAC,CAAC;YAGF,EAAE,CAAC,CAAE,YAAY,IAAI,CAAE,CAAC,CAAC,CAAC;gBACtB,IAAI,KAAK,GAAU,IAAI,2DAAK,EAAE,CAAC;gBAE/B,EAAE,CAAC,CAAE,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAK,CAAC,CAAC,CAAC;oBACvC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;oBACxB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;oBACxB,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;oBAClC,IAAI,OAAO,GAAY,IAAI,KAAK,EAAE,CAAC;oBACnC,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;oBAEtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC;gBAGjE,CAAC;YACL,CAAC;QACL,CAAC;IAGL,CAAC;IAID;sCACkC;IAE3B,4CAAY,GAAnB,UAAqB,KAAa;QAE9B,IAAI,QAAgB,CAAC;QAGrB,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;YAEhC,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;gBAEjD,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAM,CAAC,CAAC,CAAC;oBACvC,QAAQ,GAAG,CAAC,CAAC;gBACjB,CAAC;YACL,CAAC;QAEL,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAEpB,CAAC;IAED,4EAA4E;IAC5E,uCAAO,GAAP,UAAS,KAAa;QAClB,IAAI,GAAG,GAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,CAAC;QAE5D,EAAE,CAAC,CAAE,GAAG,IAAI,SAAU,CAAC,CAAC,CAAC;YACrB,GAAG,GAAG,IAAI,uDAAG,EAAE,CAAC;QACpB,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAED,sFAAsF;IACtF,4CAAY,GAAZ,UAAc,KAAa;QACvB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;YAEpD,EAAE,CAAC,CAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAM,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACxC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAED;4DACwD;IACxD,0CAAU,GAAV,UAAY,KAAa,EAAE,SAAiB;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAE,SAAS,EAAE,CAAC,CAAE,CAAC;IAC9E,CAAC;IAGD;;iCAE6B;IAE7B,4CAAY,GAAZ,UAAc,KAAa,EAAE,KAAa;QAEtC,IAAI,IAAI,GAAU,IAAI,2DAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAIvB,EAAE,CAAC,CAAE,KAAK,IAAI,IAAK,CAAC,CAAC,CAAC;YAElB,IAAI,QAAQ,GAAY,IAAI,KAAK,EAAE,CAAC;YACpC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC,KAAK,CAAC;YAEvC,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;gBAEzC,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC;oBAE9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAEtE,CAAC;YACL,CAAC;QACL,CAAC;IAIL,CAAC;IA1aQ,qBAAqB;QALjC,wEAAS,CAAE;YACR,QAAQ,EAAE,WAAW;;;SAGxB,CAAE;yCAqFmC,mEAAW,EAAyB,sEAAa;YACxD,uEAAW,EAAgB,+DAAM;OArFnD,qBAAqB,CA+ajC;IAAD,4BAAC;CAAA;AA/aiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBQ;AACuC;AAE/C;AACe;AACA;AACV;AACS;AAOhD;IAaI,gCAAqB,WAAwB,EAAU,aAA4B,EACvE,WAAwB,EAAW,MAAa;QADvC,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QACvE,gBAAW,GAAX,WAAW,CAAa;QAAW,WAAM,GAAN,MAAM,CAAO;QAV5D,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAC9B,WAAM,GAAe,IAAI,qEAAU,EAAE,CAAC;QAGtC,cAAS,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QACnD,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;IAOzD,CAAC;IAED,yCAAQ,GAAR;QAEI,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC3C,SAAS,EAAE,IAAI,CAAC,SAAS;SAE5B,CAAE,CAAC;IACR,CAAC;IAED,0CAAS,GAAT;QAAA,iBAkBC;QAjBG,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACrD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBAEtB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAElB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;oBAC1B,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAE,KAAI,CAAC,MAAM,CAAC,cAAc,CAAE,CAAC;gBAE1D,CAAC;gBAED,IAAI,EAAC;oBACD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YAGL,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,uCAAM,GAAN;QAAA,iBAsBC;QApBG,IAAI,MAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAClC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;QAE7D,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAE,MAAM,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC7D,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC1B,EAAE,CAAC,CAAE,KAAI,CAAC,MAAM,CAAC,MAAO,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;wBACjD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAE,KAAI,CAAC,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;wBACjD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;YAEL,CAAC;QACL,CAAC,CAAE,CAAC;IAER,CAAC;IAvEQ,sBAAsB;QALlC,wEAAS,CAAE;YACR,QAAQ,EAAE,mBAAmB;;SAEhC,CAAE;yCAemC,mEAAW,EAAyB,sEAAa;YAC1D,sEAAW,EAAkB,+DAAM;OAdnD,sBAAsB,CA2ElC;IAAD,6BAAC;CAAA;AA3EkC;;;;;;;;;;;;;;;;;;;;;;;;ACdO;AACO;AAEgC;AAExB;AAChB;AASzC;IAyBI,+BAAqB,aAA4B,EAAU,aAA4B,EAC1E,WAAwB,EAAW,MAAa;QADxC,kBAAa,GAAb,aAAa,CAAe;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC1E,gBAAW,GAAX,WAAW,CAAa;QAAW,WAAM,GAAN,MAAM,CAAO;QAtB7D,aAAQ,GAAY,KAAK,CAAC;QAE1B,SAAI,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACrC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,OAAE,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACnC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAKJ,aAAQ,GAAW,EAAE,CAAC;QAEtB,kBAAa,GAAW,CAAC,CAAC;IAS1B,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAiBC;QAfG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YACpC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAE,IAAI,CAAC,EAAE;SACd,CAAE,CAAC;QAEJ,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACpD,EAAE,EAAC,IAAI,IAAE,SAAS,CAAC,EAAC;gBAEhB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IAGP,CAAC;IAID,2DAA2D;IAE3D,+CAAe,GAAf,UAAiB,MAAc;QAA/B,iBAkBC;QAhBG,0BAA0B;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,GAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1C,IAAI,EAAE,GAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;QAEtC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACzF,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,CAAE,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBACxC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;gBAC/C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAE,0BAA0B;YAItD,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAQD,sCAAM,GAAN;QAGI,IAAI,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;IAE9B,CAAC;IAGD,wCAAQ,GAAR,UAAU,KAAgB;QACtB,OAAO,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACrB,IAAI,CAAC,eAAe,CAAE,KAAK,CAAC,SAAS,CAAE,CAAC;IAE5C,CAAC;IA3FQ,qBAAqB;QAPjC,wEAAS,CAAE;YACR,QAAQ,EAAE,sBAAsB;;;SAInC,CAAE;yCA2BqC,sEAAa,EAAyB,6EAAa;YAC7D,mEAAW,EAAkB,+DAAM;OA1BpD,qBAAqB,CA+FjC;IAAD,4BAAC;CAAA;AA/FiC;;;;;;;;;;;;;;;;;;;;;;;;;ACfQ;AACuC;AAChC;AACf;AACe;AACR;AAOzC;IAgBI,uBAAqB,WAAwB,EAAU,aAA4B,EAC3E,MAAa;QADA,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC3E,WAAM,GAAN,MAAM,CAAO;QAZrB,gBAAW,GAAS,IAAI,IAAI,EAAE,CAAC;QAE/B,WAAM,GAAe,IAAI,qEAAU,EAAE,CAAC;QAEtC,gBAAW,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAE/C,CAAE,CAAC;QAEJ,qDAAqD;QACrD,iBAAY,GAAW,IAAI,KAAK,EAAE,CAAC;IAMnC,CAAC;IAGD,gCAAQ,GAAR;QAAA,iBAeC;QAbG,uBAAuB;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACrC;YACI,WAAW,EAAE,IAAI,CAAC,WAAW;SAChC,CAAE,CAAC;QAER,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACpD,EAAE,EAAC,IAAI,IAAE,SAAS,CAAC,EAAC;gBAChB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,kCAAU,GAAV;QACI,IAAI,KAAK,GAAY,KAAK,CAAC;QAE3B;uEAC+D;QAE/D,IAAI,YAAY,GAAS,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC;QAI5D,gFAAgF;QAChF,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAE,kBAAkB,CAAG,CAAC,CAAC,CAAC;YACpD,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC;QAED,0DAA0D;QAC1D,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;YAClD,EAAE,CAAC,CAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,YAAa,CAAC,CAAC,CAAC;gBACzC,KAAK,GAAG,IAAI,CAAC;YACjB,CAAC;QACL,CAAC;QAED,6EAA6E;QAC7E,EAAE,CAAC,CAAE,CAAC,KAAM,CAAC,CAAC,CAAC;YACX,IAAI,IAAI,GAAS,IAAI,IAAI,CAAE,YAAY,CAAC,WAAW,EAAE,CAAE,CAAC;YAExD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAEnC,CAAC;IAEL,CAAC;IAGD,8BAAM,GAAN;QAAA,iBAWC;QAVG,IAAI,MAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAElC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAE,MAAM,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACrD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAKD,iDAAiD;IACjD,kCAAU,GAAV,UAAY,CAAS;QACjB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;IACrC,CAAC;IA7FQ,aAAa;QALzB,wEAAS,CAAE;YACR,QAAQ,EAAE,aAAa;;SAE1B,CAAE;yCAkBmC,mEAAW,EAAyB,sEAAa;YACpE,+DAAM;OAjBZ,aAAa,CA8FzB;IAAD,oBAAC;CAAA;AA9FyB;;;;;;;;;;;;;;;;;;;;;;;ACZgB;AACO;AACgC;AAC1C;AAQvC;IAeI,2BAAqB,aAA4B,EAAU,WAAwB,EAC3E,MAAa;QADA,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC3E,WAAM,GAAN,MAAM,CAAO;QAdrB,gBAAW,GAAW,IAAI,KAAK,EAAE,CAAC;QAIlC,SAAI,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACrC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,OAAE,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACnC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;IAMJ,CAAC;IAED,oCAAQ,GAAR;QACI,uBAAuB;QAD3B,iBAiBC;QAdG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YACpC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAE,IAAI,CAAC,EAAE;SAEd,CAAE,CAAC;QAEJ,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACpD,EAAE,EAAC,IAAI,IAAE,SAAS,CAAC,EAAC;gBAChB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,yCAAa,GAAb;QAAA,iBAOC;QALG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC/C,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACnC,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAED,kCAAM,GAAN;QACI,IAAI,IAAI,GAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1C,IAAI,EAAE,GAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;IAExC,CAAC;IAGD;uDACmD;IAEnD,8CAAkB,GAAlB,UAAoB,IAAU,EAAE,EAAQ;QAAxC,iBAQC;QAPG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC9D,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,CAAE,CAAC;YAE/B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAED,yCAAa,GAAb,UAAe,IAAU;QAAzB,iBAWC;QAVG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACrD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,CAAE,CAAC;gBAC3B,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,MAAO,CAAC,CAAC,CAAC;oBACvB,IAAI,IAAI,GAAS,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC1C,IAAI,EAAE,GAAS,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;oBACtC,KAAI,CAAC,kBAAkB,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBACxC,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAhFQ,iBAAiB;QAL7B,wEAAS,CAAE;YACR,QAAQ,EAAE,kBAAkB;;;SAG/B,CAAE;yCAgBqC,sEAAa,EAAuB,mEAAW;YACpE,+DAAM;OAhBZ,iBAAiB,CAiF7B;IAAD,wBAAC;CAAA;AAjF6B;;;;;;;;;;;;;;;;;;;;;;;ACXY;AACO;AACV;AACQ;AAW/C;IAII,oBAAoB,WAAuB,EAAW,MAAa,EAC3D,aAA2B;QADf,gBAAW,GAAX,WAAW,CAAY;QAAW,WAAM,GAAN,MAAM,CAAO;QAC3D,kBAAa,GAAb,aAAa,CAAc;IAEnC,CAAC;IAED,6BAAQ,GAAR;QAAA,iBAWC;QARG,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAEhD,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;gBACnB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;YACnD,CAAC;QAET,CAAC,CAAC,CAAC;IAEP,CAAC;IAMD,4BAAO,GAAP;QAAA,iBAWC;QATG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACzC,EAAE,EAAC,IAAI,IAAE,SAAS,CAAC,EAAC;gBAChB,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,GAAG,CAAC,EAAC;oBACjB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACnC,CAAC;YAEL,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IArCQ,UAAU;QARtB,wEAAS,CAAE;YACR,QAAQ,EAAE,aAAa;;;SAI1B,CAAE;yCAOiC,uEAAW,EAAkB,+DAAM;YAC7C,sEAAa;OAL1B,UAAU,CAuCtB;IAAD,iBAAC;CAAA;AAvCsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdmB;AACR;AAC+C;AAChC;AAGE;AAEM;AACR;AACV;AACqD;AAQ5F;IA8EI,+BAAqB,WAAwB,EAAU,aAA4B,EACrE,aAA4B,EAAU,WAAwB,EACpE,MAAa;QAFA,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QACrE,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QACpE,WAAM,GAAN,MAAM,CAAO;QA9ErB,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAC9B,aAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;QAE/B,WAAM,GAAe,IAAI,qEAAU,EAAE,CAAC;QAEtC,UAAK,GAAY,IAAI,KAAK,EAAE,CAAC;QAE7B,UAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAOzB,cAAS,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAC1C,kEAAU,CAAC,QAAQ;YACjB,kEAAU,CAAC,KAAK;SACrB,CAAE,CAAC;QAEJ,SAAI,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACrC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,aAAQ,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACzC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAIJ,gBAAW,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAC5C,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAC/C,kEAAU,CAAC,QAAQ;YACnB,kEAAU,CAAC,SAAS,CAAE,EAAE,CAAE;SAC7B,CAAE,CAAC;QAEJ,oBAAe,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAChD,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QAEJ,wBAAmB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACpD,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;IAoCJ,CAAC;IA3DG,CAAC;IA6BL,wCAAQ,GAAR;QAKI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC3C,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAE,CAAC;QAGJ,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YACvD,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;SAChD,CAAE,CAAC;QAEJ,IAAI,CAAC,SAAS,EAAE,CAAC;IAGrB,CAAC;IAUD;iCAC6B;IAE7B,4CAAY,GAAZ,UAAc,KAAoC;QAE9C,IAAI,IAAI,GAAS,KAAK,CAAC,KAAK,CAAC;QAG7B,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;YACxD,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAG,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAClD,CAAC;QACL,CAAC;IAGL,CAAC;IAID;2CACuC;IAChC,yCAAS,GAAhB;QAAA,iBA0DC;QAxDG,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACrD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;gBACtB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAEpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;oBAE1B;wCACoB;oBAEpB,KAAI,CAAC,gBAAgB,GAAG,UAAE,CAAO;wBAC7B,IAAM,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;wBACvB,IAAI,WAAW,GAAG,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC;wBAC1C,IAAI,QAAQ,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;wBACpC,IAAI,MAAM,GAAY,KAAK,CAAC;wBAE5B,EAAE,CAAC,CAAE,WAAW,IAAI,IAAK,CAAC,CAAC,CAAC;4BAExB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;gCAC5C,EAAE,CAAC,CAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,KAAM,CAAC,CAAC,CAAC;oCAChC,MAAM,GAAG,IAAI,CAAC;gCAClB,CAAC;4BAGL,CAAC;wBACL,CAAC;wBAID,EAAE,CAAC,CAAE,QAAQ,IAAI,IAAK,CAAC,CAAC,CAAC;4BAErB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG,CAAC;gCACzC,IAAI,OAAO,GAAS,QAAQ,CAAC,CAAC,CAAC,CAAC;gCAEhC,EAAE,CAAC,CAAE,CAAC,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAE,OAAO,CAAC,QAAQ,EAAE,CAAE,GAAG,IAAK,CAAC,CAAC,CAAC;oCACzD,MAAM,GAAG,KAAK,CAAC;gCACnB,CAAC;4BACL,CAAC;wBACL,CAAC;wBAID,MAAM,CAAC,MAAM,CAAC;oBAElB,CAAC;gBAGH,CAAC;gBAED,IAAI,EAAC;oBACA,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACrD,CAAC;YAGH,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,uFAAuF;IAEvF,4CAAY,GAAZ,UAAc,OAAe,EAAE,MAAc;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,OAAO,EAAE,MAAM,EAAE;YACpC,QAAQ,EAAE,IAAI;SACjB,CAAE,CAAC;IACR,CAAC;IAGD,yDAAyD;IACzD,sCAAM,GAAN;QAAA,iBAsBC;QArBG,IAAI,WAAW,GAAgB,IAAI,uEAAW,EAAE,CAAC;QACjD,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC;QAC7D,WAAW,CAAC,IAAI,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAE,CAAC;QAC/D,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QAC9C,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxD,OAAO,CAAC,GAAG,CAAE,WAAW,CAAE,CAAC;QAE3B,IAAI,CAAC,aAAa,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC9D,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC1B,EAAE,CAAC,CAAE,KAAI,CAAC,MAAM,CAAC,MAAO,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,YAAY,CAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAE;gBACpD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,EAAE,CAAC,CAAE,KAAI,CAAC,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC;wBACtB,KAAI,CAAC,YAAY,CAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAE,CAAC;oBACtD,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IAER,CAAC;IAGD,2DAA2D;IAC3D,+CAAe,GAAf;QAAA,iBAqBC;QApBG,IAAI,WAAW,GAAgB,IAAI,uEAAW,EAAE,CAAC;QACjD,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,WAAW,CAAC;QAC7E,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,cAAc,CAAC;QACnF,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,eAAe,CAAC;QAC1E,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QAC9C,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,mBAAmB,CAAC;QAE/E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC9D,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC1B,EAAE,CAAC,CAAE,KAAI,CAAC,MAAM,CAAC,MAAO,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,YAAY,CAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAE;gBACpD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,EAAE,CAAC,CAAE,KAAI,CAAC,MAAM,CAAC,KAAM,CAAC,CAAC,CAAC;wBACtB,KAAI,CAAC,YAAY,CAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAE,CAAC;oBACtD,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;+CAC2C;IAC3C,0CAAU,GAAV,UAAY,KAAwB;QAEhC,EAAE,CAAC,CAAE,KAAK,CAAC,KAAK,IAAI,CAAE,CAAC,CAAC,CAAC;YAErB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAEjC,CAAC;QACD,IAAI,CAAC,EAAE,CACP,CAAE,KAAK,CAAC,KAAK,IAAI,CAAE,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,CAAC;QAC7C,CAAC;IAEL,CAAC;IAED;+BAC2B;IAE3B,8CAAc,GAAd;QAAA,iBAOC;QALG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACpE,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,KAAM,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAE,CAAC;YACtD,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IA5PQ,qBAAqB;QANjC,wEAAS,CAAE;YACR,QAAQ,EAAE,sBAAsB;;;SAGnC,CAAE;yCAgFmC,mEAAW,EAAyB,sEAAa;YACtD,6EAAa,EAAuB,sEAAW;YAC7D,+DAAM;OAhFZ,qBAAqB,CA+PjC;IAAD,4BAAC;CAAA;AA/PiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBO;AACM;AACmB;AACnB;AACc;AACC;AACnB;AACyB;AACnB;AACJ;AACqB;AACA;AACR;AACT;AACa;AACJ;AACA;AACS;AACU;AACP;AAmBtE;IAAA;IAEA,CAAC;IAFY,YAAY;QAdxB,uEAAQ,CAAE;YACP,OAAO,EAAE,CAAC,iFAAc,EAAE,mEAAW,EAAE,mFAAmB,EAAE,2EAAmB,EAAE,qEAAY;gBACvF,+EAAe;aAEpB;YACD,YAAY,EAAE,CAAC,oEAAY,EAAE,gEAAU,EAAE,yFAAsB,EAAE,sEAAa,EAAE,kEAAW;gBACrF,wFAAqB,EAAE,wFAAqB,EAAE,gFAAiB,EAAE,yFAAqB;gBACtF,oFAAmB,EAAE,gFAAiB,EAAE,4FAAuB,CAAC;YACtE,SAAS,EAAE,CAAC,uEAAa,CAAC;YAC1B,OAAO,EAAE,CAAC,oEAAY,CAAC;YACvB,eAAe,EAAE,CAAC,kGAAsB,EAAE,4FAAuB,CAAC;SAErE,CAAE;OAEU,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACtCiB;AACO;AAEsB;AACd;AACa;AAC7B;AAUzC;IAgBI,qBAAqB,aAA4B,EAAU,aAA4B,EAC3E,SAAoB,EAAW,MAAa;QADnC,kBAAa,GAAb,aAAa,CAAe;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC3E,cAAS,GAAT,SAAS,CAAW;QAAW,WAAM,GAAN,MAAM,CAAO;QAZxD,aAAQ,GAAY,IAAI,CAAC;QAIzB,aAAQ,GAAW,EAAE,CAAC;QAItB,oBAAe,GAAY,KAAK,CAAC;IAMjC,CAAC;IAGD,8BAAQ,GAAR;QAAA,iBAgBC;QAdG,IAAI,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;QAG1B,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC;YACpC,KAAI,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;QAC9B,CAAC,CAAE,CAAC;QAEJ,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACpD,EAAE,EAAC,IAAI,IAAE,SAAS,CAAC,EAAC;gBAChB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAKD,uCAAiB,GAAjB,UAAmB,aAAqB;QACpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,2FAAuB,EAAE;YAE1C,IAAI,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE;YACtC,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,OAAO;SAEjB,CAAE,CAAC;IACR,CAAC;IAGD,qCAAe,GAAf,UAAiB,IAAY;QAA7B,iBAuBC;QAtBG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAEjF,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAE,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBACxC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,YAAY,CAAE,CAAC;gBACjC,EAAE,CAAC,CAAE,KAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAE,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC1B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC1B,CAAC;YAIL,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAED,8BAAQ,GAAR,UAAU,KAAgB;QAEtB,IAAI,CAAC,eAAe,CAAE,KAAK,CAAC,SAAS,CAAE,CAAC;IAE5C,CAAC;IAnFQ,WAAW;QANvB,wEAAS,CAAE;YACR,QAAQ,EAAE,WAAW;;;SAGxB,CAAE;yCAkBqC,sEAAa,EAAyB,6EAAa;YAChE,oEAAS,EAAkB,+DAAM;OAjB/C,WAAW,CAsFvB;IAAD,kBAAC;CAAA;AAtFuB;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBkB;AACR;AACuB;AACR;AAKwB;AACN;AAEU;AACpC;AAUzC;IAgDI,2BAAqB,aAA4B,EAAU,WAAwB,EACrE,aAA4B,EAAU,MAAiB,EAC7D,MAAa;QAFA,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QACrE,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAW;QAC7D,WAAM,GAAN,MAAM,CAAO;QAhDrB,aAAQ,GAAY,IAAI,CAAC;QACzB,gBAAW,GAAY,IAAI,CAAC;QAC5B,oBAAe,GAAY,KAAK,CAAC;QACjC,YAAO,GAAY,IAAI,CAAC;QACxB,gBAAW,GAAY,KAAK,CAAC;QAC7B,YAAO,GAAY,IAAI,CAAC;QACxB,gBAAW,GAAY,KAAK,CAAC;QAC7B,SAAI,GAAY,IAAI,CAAC;QACrB,aAAQ,GAAY,KAAK,CAAC;QAC1B,UAAK,GAAY,IAAI,CAAC;QACtB,cAAS,GAAY,KAAK,CAAC;QAC3B,kBAAa,GAAY,IAAI,CAAC;QAC9B,sBAAiB,GAAY,KAAK,CAAC;QACnC,eAAU,GAAY,IAAI,CAAC;QAC3B,mBAAc,GAAY,KAAK,CAAC;QA4BhC,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;IAQ9B,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAiBC;QAfG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAIxB,sDAAsD;QAEtD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;YACjC,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAE,CAAC;IACR,CAAC;IAED,qCAAS,GAAT;QAAA,iBAqBC;QAnBG,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACrD,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,IAAI,GAAI,CAAC,CAAC,CAAC;gBAEvB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;oBAElB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;oBAE1B,wBAAwB;oBACxB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC1B,CAAC;gBAED,IAAI,EAAC;oBACD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACpD,CAAC;YAGL,CAAC;QACL,CAAC,CAAE,CAAC;IAER,CAAC;IAGD;0BACsB;IAEtB,oCAAQ,GAAR;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC7C,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;8CAC0C;IAC1C,sCAAU,GAAV,UAAY,OAAe;QAA3B,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACvD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;mEAC+D;IAC/D,yCAAa,GAAb;QACI,IAAI,OAAO,GAAW,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;IAC/B,CAAC;IAED;+BAC2B;IAC3B,wCAAY,GAAZ;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC9C,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC5C,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;+BAC2B;IAE3B,4CAAgB,GAAhB;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAClD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACpC,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,sCAAU,GAAV;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,wFAAqB,EAAE;YACrD,KAAK,EAAE,QAAQ;YACf,MAAM,EAAE,OAAO;SAClB,CAAE,CAAC;IACR,CAAC;IAGD,gCAAI,GAAJ;QAAA,iBAqBC;QApBG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC/D,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBAEtB,IAAI,UAAU,GAAe,IAAI,CAAC,IAAI,EAAE,CAAC;gBACzC,EAAE,CAAC,CAAE,UAAU,CAAC,MAAO,CAAC,CAAC,CAAC;oBACtB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;wBAChD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;gBAED,IAAI,CAAC,CAAC;oBACF,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;wBAChD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD,mCAAO,GAAP;QAEI,IAAI,CAAC,SAAS,EAAE,CAAC;IAErB,CAAC;IAGD,kCAAM,GAAN;QAEI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,iGAAsB,EAAE;YACtC,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;SAElB,CAAE,CAAC;IAGR,CAAC;IAtMQ,iBAAiB;QAN7B,wEAAS,CAAE;YACR,QAAQ,EAAE,qBAAqB;;;SAGlC,CAAE;yCAkDqC,sEAAa,EAAuB,sEAAW;YACtD,6EAAa,EAAkB,oEAAS;YACtD,+DAAM;OAlDZ,iBAAiB,CA4M7B;IAAD,wBAAC;CAAA;AA5M6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBoB;AACO;AACR;AACf;AACkB;AACK;AAQzD;IAMI,6BAAqB,OAAuB,EAAU,aAA4B,EACpE,aAA4B,EAAoC,IAAS,EAC3E,MAAc;QAFL,YAAO,GAAP,OAAO,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QACpE,kBAAa,GAAb,aAAa,CAAe;QAAoC,SAAI,GAAJ,IAAI,CAAK;QAC3E,WAAM,GAAN,MAAM,CAAQ;QAJ1B,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;IAM9B,CAAC;IAED,sCAAQ,GAAR;QAEI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE7B,IAAI,CAAC,SAAS,EAAE,CAAC;IAErB,CAAC;IAED,uCAAS,GAAT;QAAA,iBAUC;QARG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC3D,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,IAAI,GAAI,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YAEtD,CAAC;QACL,CAAC,CAAE,CAAC;IAER,CAAC;IA9BQ,mBAAmB;QAN/B,wEAAS,CAAE;YACR,QAAQ,EAAE,oBAAoB;;;SAGjC,CAAE;QAS8C,gFAAM,CAAE,0EAAe,CAAE;yCADxC,uEAAc,EAAyB,sEAAa;YACrD,6EAAa,UACtB,+DAAM;OARjB,mBAAmB,CAmC/B;IAAD,0BAAC;CAAA;AAnC+B;;;;;;;;;;;;;;;;;;;;;ACZe;AACE;AACN;AACyB;AACvB;AACqB;AACA;AACR;AACS;AACL;AACJ;AAE1D,IAAM,iBAAiB,GAAU,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yFAAsB,EAAE,CAAC;AAC/F,IAAM,iBAAiB,GAAU,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gFAAiB,EAAE,CAAC;AACxF,IAAM,aAAa,GAAU,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sEAAa,EAAE,CAAC;AAC9E,IAAM,YAAY,GAAU,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oEAAY,EAAE,CAAC;AAC3E,IAAM,WAAW,GAAU,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kEAAW,EAAE,CAAC;AACxE,IAAM,qBAAqB,GAAU,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,uFAAqB,EAAE,CAAC;AACvG,IAAM,qBAAqB,GAAU,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,uFAAqB,EAAE,CAAC;AACvG,IAAM,iBAAiB,GAAU,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,+EAAiB,EAAE,CAAC;AAC3F,IAAM,qBAAqB,GAAU,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,wFAAqB,EAAE,CAAC;AAChG,IAAM,mBAAmB,GAAU,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,mFAAmB,EAAE;AAGvG,IAAM,UAAU,GAAU;IACtB,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,gEAAU,EAAE,QAAQ,EAAE;QAC9C,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAW,EAAE;QACpC,YAAY;QACZ,iBAAiB;QACjB,aAAa;QACb,WAAW;QACX,qBAAqB;QACrB,qBAAqB;QACrB,iBAAiB;QACjB,qBAAqB;QACrB,iBAAiB;KAEpB;CACJ,CAAC;AAGK,IAAM,YAAY,GAAW,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AC1C7B;AACM;AACQ;AAUvD;IAAA;IAEA,CAAC;IAFY,mBAAmB;QAP/B,uEAAQ,CAAE;YACP,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAE,4EAAY,CAAE,CAAC;YAChD,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,CAAC,qEAAY,CAAC;SAE1B,CAAE;OAEU,mBAAmB,CAE/B;IAAD,0BAAC;CAAA;AAF+B;;;;;;;;;;;;;;;;;;;;;;;ACZW;AACoC;AAC7C;AAKsB;AAQxD;IAMI,uBAAqB,IAAU,EAAU,aAA4B;QAAhD,SAAI,GAAJ,IAAI,CAAM;QAAU,kBAAa,GAAb,aAAa,CAAe;QAJrE,YAAO,GAAY,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAE,CAAC;QACzE,gBAAW,GAAmB,IAAI,qEAAc,CAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAE,CAAC;IAK9E,CAAC;IAED;wBACoB;IAEb,kCAAU,GAAjB,UAAmB,MAAc;QAC7B,IAAI,GAAG,GAAG,wBAAwB,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAC3D,CAAC;IAGD,4EAA4E;IAErE,wCAAgB,GAAvB,UAAyB,MAAc;QACnC,IAAI,GAAG,GAAG,sBAAsB,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAC3D,CAAC;IAKM,2CAAmB,GAA1B,UAA4B,MAAc;QACtC,IAAI,GAAG,GAAG,mCAAmC,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAC3D,CAAC;IAEM,mCAAW,GAAlB;QACI,IAAI,GAAG,GAAG,0BAA0B,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAEM,mCAAW,GAAlB,UAAoB,MAAc;QAC9B,IAAI,GAAG,GAAG,6BAA6B,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAC3D,CAAC;IAGM,oCAAY,GAAnB,UAAqB,OAAe;QAChC,IAAI,GAAG,GAAG,yBAAyB,CAAC;QACpC,IAAI,KAAK,GAAG,IAAI,sEAAe,EAAE,CAAC;QAClC,KAAK,CAAC,GAAG,CAAE,SAAS,EAAE,OAAO,CAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAGM,oCAAY,GAAnB;QACI,IAAI,GAAG,GAAG,2BAA2B,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAGM,wCAAgB,GAAvB;QACI,IAAI,GAAG,GAAG,+BAA+B,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAGM,qCAAa,GAApB;QACI,IAAI,GAAG,GAAG,4BAA4B,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAGM,2CAAmB,GAA1B;QACI,IAAI,GAAG,GAAG,2BAA2B,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAEM,uCAAe,GAAtB,UAAwB,WAAwB;QAC5C,IAAI,GAAG,GAAG,kCAAkC,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAChE,CAAC;IAEM,yCAAiB,GAAxB;QACI,IAAI,GAAG,GAAG,iCAAiC,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED;yDACqD;IAE9C,8CAAsB,GAA7B,UAA+B,IAAU,EAAE,EAAQ,EAAE,MAAc,EAAE,QAAgB;QACjF,IAAI,GAAG,GAAG,wCAAwC,CAAC;QACnD,IAAI,KAAK,GAAG,IAAI,sEAAe,EAAE,CAAC;QAClC,KAAK,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAE,CAAC;QAC/C,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAE,CAAC;QAC3C,KAAK,CAAC,GAAG,CAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAE,CAAC;QACzC,KAAK,CAAC,GAAG,CAAE,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAE,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAGlD,CAAC;IAGD,+EAA+E;IAExE,0CAAkB,GAAzB,UAA2B,IAAU,EAAE,EAAQ;QAC3C,IAAI,GAAG,GAAG,oCAAoC,CAAC;QAC/C,IAAI,KAAK,GAAG,IAAI,sEAAe,EAAE,CAAC;QAClC,KAAK,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAE,CAAC;QAC/C,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAE,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAElD,CAAC;IAED;yDACqD;IAE9C,2CAAmB,GAA1B,UAA4B,MAAc,EAAE,QAAgB;QACxD,IAAI,GAAG,GAAG,uCAAuC,CAAC;QAElD,IAAI,KAAK,GAAG,IAAI,sEAAe,EAAE,CAAC;QAClC,KAAK,CAAC,GAAG,CAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAE,CAAC;QACzC,KAAK,CAAC,GAAG,CAAE,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAE,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED,oFAAoF;IAE7E,uCAAe,GAAtB,UAAwB,WAAkB;QACtC,IAAI,GAAG,GAAG,kCAAkC,CAAC;QAC7C,IAAI,MAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAElC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAC3D,CAAC;IAID,4GAA4G;IAC5G,4GAA4G;IAC5G,0BAA0B;IAC1B,+CAA+C;IAC/C,EAAE;IACF,6BAA6B;IAC7B,EAAE;IACF,wEAAwE;IACxE,2CAA2C;IAC3C,EAAE;IACF,EAAE;IACF,EAAE;IACF,+CAA+C;IAC/C,+DAA+D;IAC/D,EAAE;IACF,eAAe;IACf,oBAAoB;IACpB,yDAAyD;IACzD,EAAE;IACF,eAAe;IACf,EAAE;IACF,WAAW;IACX,gBAAgB;IAChB,wEAAwE;IACxE,+CAA+C;IAC/C,yDAAyD;IACzD,eAAe;IACf,EAAE;IACF,oBAAoB;IACpB,mDAAmD;IACnD,eAAe;IACf,EAAE;IACF,WAAW;IACX,EAAE;IACF,wBAAwB;IACxB,OAAO;IAGP;uDACmD;IAEnD,sCAAsC;IACtC,uFAAuF;IACvF,OAAO;IAGP;0BACsB;IACtB,oCAAY,GAAZ,UAAc,SAAiB;QAC3B,IAAI,GAAG,GAAW,+BAA+B,CAAC;QAClD,IAAI,KAAK,GAAoB,IAAI,sEAAe,EAAE,CAAC;QACnD,KAAK,CAAC,GAAG,CAAE,WAAW,EAAE,SAAS,CAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED;sBACkB;IAElB,sCAAc,GAAd,UAAgB,SAAiB;QAC7B,IAAI,GAAG,GAAW,yBAAyB,CAAC;QAC5C,IAAI,KAAK,GAAoB,IAAI,sEAAe,EAAE,CAAC;QACnD,KAAK,CAAC,GAAG,CAAE,WAAW,EAAE,SAAS,CAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED,6FAA6F;IAE7F,qCAAa,GAAb,UAAe,KAAa;QAExB,IAAI,GAAG,GAAW,4BAA4B,CAAC;QAC/C,IAAI,KAAK,GAAoB,IAAI,sEAAe,EAAE,CAAC;QACnD,KAAK,CAAC,GAAG,CAAE,OAAO,EAAE,KAAK,CAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAGlD,CAAC;IAED;wCACoC;IACpC,qCAAa,GAAb,UAAe,IAAU;QACrB,IAAI,GAAG,GAAG,gCAAgC,CAAC;QAG3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAGzD,CAAC;IAGD;sDACkD;IAElD,8CAAsB,GAAtB,UAAwB,KAAe;QACnC,IAAI,GAAG,GAAG,mCAAmC,CAAC;QAE9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAC1D,CAAC;IAGD;;0BAEsB;IAEtB,sCAAc,GAAd,UAAgB,aAAqB;QACjC,IAAI,GAAG,GAAG,oCAAoC,CAAC;QAC/C,IAAI,KAAK,GAAoB,IAAI,sEAAe,EAAE,CAAC;QACnD,KAAK,CAAC,GAAG,CAAE,eAAe,EAAE,aAAa,CAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAClD,CAAC;IAED;;UAEM;IACN,wCAAgB,GAAhB,UAAkB,WAAwB;QACtC,IAAI,GAAG,GAAG,mCAAmC,CAAC;QAE9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAChE,CAAC;IA5QQ,aAAa;QAFzB,yEAAU,EAAE;yCAQkB,2DAAI,EAAyB,6EAAa;OAN5D,aAAa,CA8QzB;IAAD,oBAAC;CAAA;AA9QyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACfgB;AACkD;AAC1D;AAIe;AAEA;AACH;AACP;AASvC;IA2EI,8CAA8C;IAG9C,sBAAqB,YAAyB,EAAU,aAA4B,EAC5E,WAAuB,EAAW,MAAa;QADlC,iBAAY,GAAZ,YAAY,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC5E,gBAAW,GAAX,WAAW,CAAY;QAAW,WAAM,GAAN,MAAM,CAAO;QAvEvD,WAAM,GAAe,IAAI,qEAAU,EAAE,CAAC;QAEtC,uCAAuC;QACvC,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC;QAmB9B,gDAAgD;QAEhD,SAAI,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAErC,kEAAU,CAAC,QAAQ;SAEtB,CAAE,CAAC;QAEJ,UAAK,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACtC,kEAAU,CAAC,QAAQ;YACnB,kEAAU,CAAC,SAAS,CAAE,GAAG,CAAE;SAE9B,CAAE,CAAC;QAGJ,mBAAc,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAE/C,kEAAU,CAAC,QAAQ;SAEtB,CAAE,CAAC;QAEJ,wBAAmB,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAEvD,CAAE,CAAC;QAEJ,YAAO,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACxC,kEAAU,CAAC,QAAQ;SAEtB,CAAE,CAAC;QAEJ,aAAQ,GAAgB,IAAI,mEAAW,CAAE,EAAE,CAAE,CAAC;QAE9C,UAAK,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YAEtC,kEAAU,CAAC,QAAQ;SAEtB,CAAE,CAAC;QACJ,SAAI,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACrC,kEAAU,CAAC,QAAQ;SACtB,CAAE,CAAC;QACJ,YAAO,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE;YACxC,kEAAU,CAAC,QAAQ;YACnB,kEAAU,CAAC,SAAS,CAAE,EAAE,CAAE;SAC7B,CAAE,CAAC;IAMuD,CAAC;IAI5D,+BAAQ,GAAR;QAEI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE;YACzC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,CAAE,CAAC;QAEJ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE;YAE9C,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,YAAY,EAAE,IAAI,CAAC,mBAAmB;SACzC,CAAE,CAAC;QAEJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE;YACxC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAE,CAAC;IAER,CAAC;IAED;+BAC2B;IAC3B,mCAAY,GAAZ;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC9C,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC5C,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;+BAC2B;IAE3B,uCAAgB,GAAhB;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAClD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACpC,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAED;0BACsB;IAEtB,+BAAQ,GAAR;QAAA,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAC7C,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;8CAC0C;IAC1C,iCAAU,GAAV,UAAY,OAAe;QAA3B,iBAMC;QALG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACvD,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC,CAAE,CAAC;IACR,CAAC;IAGD;mEAC+D;IAC/D,oCAAa,GAAb;QACI,IAAI,OAAO,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;QACnD,IAAI,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;IAC/B,CAAC;IAID;0BACsB;IACtB,6BAAM,GAAN;QAAA,iBAgCC;QA/BG,0CAA0C;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,cAAc,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC;QACrE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;QAErD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC1B,EAAE,EAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAC,MAAM,EAAC;wBAC5C,QAAQ,EAAC,IAAI;qBAChB,CAAC,CAAC;oBACH,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAE1C,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC;oBACvB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,EAAC,OAAO,EAAC;wBAC9C,QAAQ,EAAC,IAAI;qBAChB,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IAER,CAAC;IAxMQ,YAAY;QALxB,wEAAS,CAAE;YACR,QAAQ,EAAE,YAAY;;;SAGzB,CAAE;yCA+EoC,mEAAW,EAAyB,sEAAa;YAChE,sEAAW,EAAkB,+DAAM;OA/E9C,YAAY,CA0MxB;IAAD,mBAAC;CAAA;AA1MwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnByB;AACe;AAChB;AACE;AACE;AAE2B;AAOhF;IAaI,iCAA+C,IAAS,EAAU,aAA4B,EAClF,WAAwB,EAAU,WAAwB;QADvB,SAAI,GAAJ,IAAI,CAAK;QAAU,kBAAa,GAAb,aAAa,CAAe;QAClF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAVtE,gBAAW,GAAgB,IAAI,uEAAW,EAAE,CAAC;QAE7C,aAAQ,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAElD,iBAAY,GAAgB,IAAI,mEAAW,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;IAStD,CAAC;IAGD,0CAAQ,GAAR;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAI1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC5C,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,cAAc,EAAE,IAAI,CAAC,YAAY;SACpC,CAAE,CAAC;IAER,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC;QACjE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,CAAE,CAAC;IAC7E,CAAC;IAED,gDAAc,GAAd,UAAgB,aAAqB;QAArC,iBAWC;QATG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAE,aAAa,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YAE/D,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC/B,KAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC;QAEL,CAAC,CAAE,CAAC;IAER,CAAC;IAID,sCAAI,GAAJ;QAAA,iBA8BC;QA5BG,IAAI,YAAY,GAAiB,IAAI,yEAAY,EAAE,CAAC;QAEpD,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7D,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,YAAY,CAAC;QAErE,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,YAAY,CAAC;QAE7C,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAEhC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,SAAS,CAAC,UAAE,IAAI;YACpE,EAAE,CAAC,CAAE,IAAI,IAAI,SAAU,CAAC,CAAC,CAAC;gBACtB,IAAI,UAAU,GAAe,IAAI,CAAC,IAAI,EAAE,CAAC;gBAEzC,EAAE,CAAC,CAAE,UAAU,CAAC,MAAO,CAAC,CAAC,CAAC;oBACtB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;wBAChD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;gBAED,IAAI,CAAC,EAAE,CAAC,CAAE,UAAU,CAAC,KAAM,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;wBAChD,QAAQ,EAAE,IAAI;qBACjB,CAAE,CAAC;gBACR,CAAC;YACL,CAAC;QACL,CAAC,CAAE,CAAC;IAGR,CAAC;IAnFQ,uBAAuB;QAJnC,wEAAS,CAAE;YACR,QAAQ,EAAE,wBAAwB;;SAErC,CAAE;QAce,gFAAM,CAAE,0EAAe,CAAE;iDAA0C,sEAAa;YACrE,mEAAW,EAAuB,sEAAW;OAd7D,uBAAuB,CAqFnC;IAAD,8BAAC;CAAA;AArFmC;;;;;;;;ACbpC,yZAAyZ,YAAY,uFAAuF,+BAA+B,oPAAoP,4DAA4D,4BAA4B,0FAA0F,4BAA4B,qDAAqD,oBAAoB,0mBAA0mB,YAAY,GAAG,YAAY,qfAAqf,YAAY,IAAI,YAAY,k9BAAk9B,aAAa,2DAA2D,gCAAgC,mQAAmQ,6DAA6D,4BAA4B,uEAAuE,4BAA4B,mDAAmD,oBAAoB,8mBAA8mB,YAAY,GAAG,YAAY,6fAA6f,YAAY,IAAI,YAAY,mgCAAmgC,eAAe,6DAA6D,kCAAkC,0QAA0Q,6DAA6D,4BAA4B,uEAAuE,4BAA4B,kDAAkD,oBAAoB,8mBAA8mB,YAAY,GAAG,YAAY,mgBAAmgB,YAAY,IAAI,YAAY,0/BAA0/B,cAAc,4DAA4D,iCAAiC,kQAAkQ,4DAA4D,4BAA4B,qEAAqE,4BAA4B,iDAAiD,oBAAoB,inBAAinB,YAAY,GAAG,YAAY,+eAA+e,YAAY,IAAI,YAAY,29BAA29B,YAAY,0DAA0D,+BAA+B,+PAA+P,6DAA6D,4BAA4B,uEAAuE,4BAA4B,iDAAiD,oBAAoB,omBAAomB,YAAY,GAAG,YAAY,ueAAue,YAAY,IAAI,YAAY,s9BAAs9B,cAAc,4DAA4D,iCAAiC,sQAAsQ,6DAA6D,4BAA4B,6DAA6D,4BAA4B,mDAAmD,oBAAoB,ymBAAymB,YAAY,GAAG,YAAY,+eAA+e,YAAY,IAAI,YAAY,q+BAAq+B,YAAY,0DAA0D,+BAA+B,8PAA8P,4DAA4D,4BAA4B,2DAA2D,4BAA4B,iDAAiD,oBAAoB,qmBAAqmB,YAAY,GAAG,YAAY,ueAAue,YAAY,IAAI,YAAY,+1B;;;;;;;ACA/glB,2tB;;;;;;;ACAA,2xCAA2xC,yCAAyC,wGAAwG,uBAAuB,qCAAqC,yBAAyB,wCAAwC,4BAA4B,8BAA8B,uDAAuD,qBAAqB,uDAAuD,iP;;;;;;;ACAtuD,oMAAoM,gBAAgB,4EAA4E,gBAAgB,8zBAA8zB,8BAA8B,mBAAmB,GAAG,gBAAgB,GAAG,oBAAoB,wT;;;;;;;ACAzsC,+pCAA+pC,6BAA6B,qJ;;;;;;;ACA5rC,w9G;;;;;;;ACAA,i/DAAi/D,0CAA0C,kDAAkD,0CAA0C,y/EAAy/E,0CAA0C,kDAAkD,0CAA0C,sd;;;;;;;ACAtvJ,yuBAAyuB,yCAAyC,wHAAwH,uBAAuB,8BAA8B,yBAAyB,mCAAmC,4BAA4B,uBAAuB,uDAAuD,yBAAyB,uDAAuD,oc;;;;;;;ACArrC,uUAAuU,0BAA0B,0MAA0M,uBAAuB,wGAAwG,0fAA0f,kBAAkB,qNAAqN,gBAAgB,4GAA4G,keAAke,cAAc,+LAA+L,oBAAoB,gBAAgB,aAAa,oGAAoG,qhCAAqhC,mBAAmB,+gBAA+gB,gBAAgB,uXAAuX,cAAc,gQAAgQ,aAAa,wFAAwF,mbAAmb,WAAW,sPAAsP,uDAAuD,cAAc,wcAAwc,YAAY,ySAAyS,mBAAmB,iIAAiI,ygBAAygB,mBAAmB,+WAA+W,oBAAoB,iTAAiT,2BAA2B,oHAAoH,miBAAmiB,2BAA2B,8VAA8V,gBAAgB,qhBAAqhB,oBAAoB,6LAA6L,0CAA0C,4CAA4C,0CAA0C,kQ;;;;;;;ACAv3S,sHAAsH,0BAA0B,2JAA2J,uBAAuB,oHAAoH,gBAAgB,mHAAmH,oBAAoB,IAAI,aAAa,2IAA2I,aAAa,qCAAqC,cAAc,mKAAmK,mBAAmB,8PAA8P,2BAA2B,2TAA2T,oBAAoB,6LAA6L,0CAA0C,4CAA4C,0CAA0C,kQ;;;;;;;ACAp4D,+5BAA+5B,oBAAoB,q/BAAq/B,mBAAmB,msBAAmsB,2BAA2B,05DAA05D,mBAAmB,goBAAgoB,gBAAgB,wZAAwZ,4hCAA4hC,0BAA0B,sHAAsH,2BAA2B,2DAA2D,2BAA2B,MAAM,wBAAwB,mDAAmD,2BAA2B,uGAAuG,gBAAgB,gFAAgF,gBAAgB,oZ;;;;;;;ACA9sO,yHAAyH,yBAAyB,mpB;;;;;;;;ACAlJ;AAAA;IAAA;IAGA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;ACHD,wP;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACM;AAET;AACW;AAGhB;AAOlC;IAGI,cAAoB,WAAuB,EAAW,MAAa,EACvD,aAA2B,EAAS,IAAS;QADrC,gBAAW,GAAX,WAAW,CAAY;QAAW,WAAM,GAAN,MAAM,CAAO;QACvD,kBAAa,GAAb,aAAa,CAAc;QAAS,SAAI,GAAJ,IAAI,CAAK;IAEzD,CAAC;IAMD,uBAAQ,GAAR;QAAA,iBA4BC;QAtBG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAG7C,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,EAAC;gBAElB,IAAI,WAAW,GAAM,IAAI,CAAC,IAAI,EAAE,CAAC;gBAEjC,EAAE,EAAC,WAAW,CAAC,IAAI,IAAE,aAAa,CAAC,EAAC;oBAEhC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAE1C,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,WAAW,CAAC,IAAI,IAAE,cAAc,CAAC,EAAC;oBACtC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBAC/C,CAAC;YAGL,CAAC;QAEL,CAAC,CAAC,CAAC;IAGP,CAAC;IAxCQ,IAAI;QALhB,wEAAS,CAAE;YACR,QAAQ,EAAE,MAAM;;SAEnB,CAAE;yCAKiC,uEAAW,EAAkB,+DAAM;YACzC,yEAAa,EAAc,2DAAI;OAJhD,IAAI,CA0ChB;IAAD,WAAC;CAAA;AA1CgB;;;;;;;;ACdjB,yM;;;;;;;;;;;;;;;;ACA0C;AAS1C;IAAA;IAEA,CAAC;IAFY,cAAc;QAL1B,wEAAS,CAAE;YACR,QAAQ,EAAE,kBAAkB;;SAE/B,CAAE;OAEU,cAAc,CAE1B;IAAD,qBAAC;CAAA;AAF0B;;;;;;;;ACT3B,unB;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAEA,CAAC;IAFY,cAAc;QAJ1B,wEAAS,CAAE;YACR,QAAQ,EAAE,kBAAkB;;SAE/B,CAAE;OACU,cAAc,CAE1B;IAAD,qBAAC;CAAA;AAF0B;;;;;;;;;;;;;;;;;;ACPc;AAUd;AAyB3B;IAAA;IAIA,CAAC;IAJY,cAAc;QAtB1B,uEAAQ,CAAE;YACP,OAAO,EAAE,CAAC,yEAAc,EAAE,4EAAiB,EAAE,wEAAa,EAAE,wEAAa;gBACnE,2EAAgB,EAAE,wEAAa,EAAE,mFAAwB,EAAE,0EAAe;gBAC1E,wEAAa,EAAE,4EAAiB,EAAE,yEAAc,EAAE,2EAAgB,EAAE,0EAAe;gBACnF,8EAAmB,EAAE,8EAAmB,EAAE,+EAAoB,EAAE,yEAAc,EAAE,2EAAgB;gBAChG,gFAAqB,EAAE,2EAAgB,EAAE,wEAAa,EAAE,6EAAkB,EAAE,4EAAiB;gBAC7F,+EAAoB,EAAE,0EAAe;aAE1C;YAED,YAAY,EAAE,EAAE;YAEhB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,sEAAW,EAAE,QAAQ,EAAE,4EAAiB,EAAE,CAAC;YAElE,OAAO,EAAE,CAAC,yEAAc,EAAE,4EAAiB,EAAE,wEAAa,EAAE,wEAAa;gBACnE,2EAAgB,EAAE,wEAAa,EAAE,mFAAwB,EAAE,0EAAe;gBAC1E,wEAAa,EAAE,4EAAiB,EAAE,yEAAc,EAAE,2EAAgB,EAAE,0EAAe;gBACnF,8EAAmB,EAAE,8EAAmB,EAAE,+EAAoB,EAAE,yEAAc,EAAE,2EAAgB;gBAChG,gFAAqB,EAAE,2EAAgB,EAAE,wEAAa,EAAE,6EAAkB,EAAE,4EAAiB;gBAC7F,+EAAoB,EAAE,0EAAe;aAC1C;SACJ,CAAE;OACU,cAAc,CAI1B;IAAD,qBAAC;CAAA;AAJ0B;;;;;;;;;ACjC3B;AAAA;IAAA;IAQA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;ACR6C;AAG9C;IAAA;QAcW,iBAAY,GAAiB,IAAI,mEAAY,EAAE,CAAC;IAG3D,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;ACtBD;AAAA;IAAA;IAKA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;ACAD;AAAA;IASI;QANO,cAAS,GAAW,QAAQ,CAAC;QAC7B,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAY,IAAI,KAAK,EAAE,CAAC;IAOpC,CAAC;IAIM,oBAAM,GAAb,UAAe,KAAa;QAExB,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,IAAI,KAAM,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,uBAAS,GAAhB;QACI,IAAI,MAAe,CAAC;QACpB,EAAE,CAAC,CAAE,IAAI,CAAC,SAAS,IAAI,MAAO,CAAC,CAAC,CAAC;YAC7B,MAAM,GAAG,IAAI,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,GAAG,KAAK,CAAC;QACnB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,UAAC;AAAD,CAAC;;;;;;;;;;ACxCD;AAAA;IAAA;IAKA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;ACLD;AAAA;IAAA;IAKA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;ACLD;AAAA;IAAA;IAUA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;ACVD;AAAA;IAAA;IAKA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;ACJM,IAAM,cAAc,GAAG;IAC1B,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE;IAClC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE;IACrC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"main-container\\\">\\n\\n\\t\\t<router-outlet></router-outlet>\\n\\n</div>\\n\\t\\n\\t\\t\\n\\t\\n\\t\\t\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component( {\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n} )\nexport class AppComponent {\n    title = 'app';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from \"@angular/forms\";\nimport { MaterialModule } from \"./material/material.module\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { UserModule } from \"./user/user.module\";\nimport { PatientModule } from \"./patient/patient_module\";\nimport { AppRoutes } from \"./app_routes_config\";\nimport { Home } from \"./home\";\nimport { SiteAdminModule } from \"./site_admin/site_admin_module\";\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\nimport { environment } from \"../environments/environment\";\n\n\n\nimport { AppComponent } from './app.component';\n\n@NgModule( {\n    declarations: [\n        AppComponent, Home\n    ],\n    imports: [\n        RouterModule.forRoot( AppRoutes ),\n        ServiceWorkerModule.register( '/ngsw-worker.js', { enabled: environment.production } ),\n        BrowserModule, BrowserAnimationsModule, UserModule, FormsModule, MaterialModule,\n        PatientModule, SiteAdminModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n} )\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/app.module.ts","import { Route, Routes } from \"@angular/router\";\nimport { Home } from \"./home\";\n\nconst home: Route = { path: \"\", component: Home };\n\nexport const AppRoutes: Routes = [home];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/app_routes_config.ts","/** This component contains a address form which have following fields \n *  addressLineOne , addressLineTwo , state , city ,phoneNo\n *  It emmit an event changed which emit whenever the value of a \n *  form field is changed */\nimport { Component, Output, EventEmitter } from \"@angular/core\";\nimport { FormControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Address } from \"../model/address\";\nimport { CommonService } from \"./common_service\";\nimport { State } from \"../model/state\";\nimport { City } from \"../model/city\";\n\n@Component( {\n    selector: \"address-form\",\n    templateUrl: \"./html/address_form.html\"\n} )\n\nexport class AddressForm {\n\n\n    addressForm: FormGroup;\n\n    //event of the component \n    @Output() changed: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n    states: State[];\n\n    cities: City[];\n\n    addressLineOne: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    addressLineTwo: FormControl = new FormControl( '', [] );\n\n    state: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    city: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    phoneNo: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n\n\n    constructor( private formBuilder: FormBuilder, private commonService: CommonService ) {\n\n    }\n\n    ngOnInit() {\n\n        this.getAllState();\n\n\n        // ititalization of the form group \n        this.addressForm = this.formBuilder.group( {\n\n            addressLineOne: this.addressLineOne,\n            addressLineTwo: this.addressLineTwo,\n            state: this.state,\n            city: this.city,\n            phoneNo: this.phoneNo\n        } );\n\n    }\n\n    // get all states form the database \n\n    getAllState() {\n        this.commonService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n                console.log( this.states );\n\n            }\n        } );\n    }\n\n    /** gets all the cities for the state selected by user */\n    getAllCities() {\n\n        this.change();\n        this.commonService.getAllCities( this.addressForm.value.state ).subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                this.cities = data.json();\n            }\n        } );\n    }\n\n    // this emit the changed event whenever the form field value is changed \n    change() {\n\n\n        this.changed.emit( this.addressForm );\n\n\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/address_form.ts","import { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { AddressForm } from \"./address_form\";\nimport { CommonService } from \"./common_service\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserImageUpload } from \"./user_image_upload\";\nimport { UserImageGallery } from \"./user_image_gallery\";\nimport { UserChooseProfileImage } from \"./user_choose_profile_image\";\nimport {ConfirmationDialog} from \"./confirmation_dialog\";\n\n\n@NgModule( {\n    imports: [MaterialModule, CommonModule, ReactiveFormsModule],\n    declarations: [AddressForm, UserImageUpload, UserImageGallery, UserChooseProfileImage\n    ,ConfirmationDialog],\n    exports: [AddressForm, UserChooseProfileImage],\n    providers: [CommonService]\n} )\n\nexport class AppCommonModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/common_module.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, URLSearchParams } from \"@angular/http\";\nimport { HourListOption } from \"../model/hourListOptions\";\nimport { LocalTime, DateTimeFormatter } from \"js-joda\";\n\n\n@Injectable()\nexport class CommonService {\n\n    hourListOption = HourListOption;\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n\n    constructor( private http: Http ) {\n\n    }\n\n    /** getAllState method get all the state list present in database */\n\n    public getAllState() {\n        let url = \"/api/public/dr/state/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** getAllCities method get all the cities for a perticular state */\n\n    public getAllCities( stateId: string ) {\n        let url = \"/api/public/dr/city/all\";\n        let param = new URLSearchParams();\n        param.set( \"stateId\", stateId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** getTimeLabel get the label value for a time the label value is for display only */\n    getTimeLabel( value: string ): string {\n        for ( let i = 0; i < this.hourListOption.length; i++ ) {\n\n            if ( this.hourListOption[i].value == value ) {\n                return this.hourListOption[i].label;\n            }\n        }\n\n        return \"\";\n    }\n\n\n    public getAllDegree() {\n        let url = \"/api/public/dr/degree/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllSpeciality() {\n        let url = \"/api/public/dr/speciality/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** uploadImage upload the image in user database */\n    public uploadImage( formData ) {\n\n        let url: string = \"/api/private/upload/image\";\n\n        console.log( formData );\n\n        return this.http.post( url, formData );\n\n    }\n\n    /** getUserImages get all the images from the current logged in user*/\n    public getUserImages( pageNo: number, pageSize: number ) {\n        let url = \"/api/private/user/get/images\";\n\n        let param: URLSearchParams = new URLSearchParams();\n\n        param.set( \"pageNo\", pageNo.toString() );\n        param.set( \"pageSize\", pageSize.toString() );\n\n        this.commOptions.params = param;\n\n\n        return this.http.get( url, this.commOptions );\n    }\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/common_service.ts","import {Component} from \"@angular/core\";\nimport {MatDialogRef} from \"@angular/material\";\n\n\n@Component({\n    selector:\"confirmation-dialog\",\n    templateUrl:\"./html/confirmation_dialog.html\"\n})\n\nexport class ConfirmationDialog  {\n\n\n    constructor(private matDialogRef:MatDialogRef<ConfirmationDialog>){\n\n    }\n\n    confirm(){\n        \n        this.matDialogRef.close(true);\n    }\n\n    cancel(){\n        this.matDialogRef.close(false);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/confirmation_dialog.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-dialog-actions{\\n\\t-webkit-box-pack:end;\\n\\t    -ms-flex-pack:end;\\n\\t        justify-content:flex-end;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/css/user_choose_profile_image.css\n// module id = ../../../../../src/app/common/css/user_choose_profile_image.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"img{\\n\\tmargin: 10px;\\n}\\n\\n#img-container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:horizontal;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:row;\\n\\t        flex-direction:row;\\n\\t-ms-flex-wrap:wrap;\\n\\t    flex-wrap:wrap;\\n\\t-webkit-box-pack:space-evenly;\\n\\t    -ms-flex-pack:space-evenly;\\n\\t        justify-content:space-evenly;\\n}\\n\\n.imgBox{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-pack:center;\\n\\t    -ms-flex-pack:center;\\n\\t        justify-content:center;\\n}\\n\\n.selected{\\n\\t\\n\\t-webkit-box-shadow: 3px 3px 5px 6px #409cd9;  /* Safari 3-4, iOS 4.0.2 - 4.2, Android 2.3+ */  /* Firefox 3.5 - 3.6 */\\n     box-shadow:         3px 3px 5px 6px #409cd9;  /* Opera 10.5, IE 9, Firefox 4+, Chrome 6+, iOS 5 */\\n}\\n\\n#toolbar{\\n\\t\\n\\theight:50px;\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t-webkit-box-align:end;\\n\\t    -ms-flex-align:end;\\n\\t        align-items:flex-end;\\n\\t-ms-flex-pack:distribute;\\n\\t    justify-content:space-around;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/css/user_image_gallery.css\n// module id = ../../../../../src/app/common/css/user_image_gallery.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#upload-btn{\\n\\tposition:absolute;\\n\\theight: 150px;\\n\\twidth:150px;\\n\\topacity:0;\\n}\\n\\n\\n#up-btn-box{\\n\\tmargin:20px;\\n\\tposition:relative;\\n\\tborder: dashed thin blue;\\n\\twidth:200px;\\n\\theight:200px;\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n\\t-webkit-box-pack:center;\\n\\t    -ms-flex-pack:center;\\n\\t        justify-content:center;\\n\\t\\n}\\n\\n\\n#up-btn-box label{\\n\\tposition:absolute;\\n\\t-ms-flex-item-align:center;\\n\\t    align-self:center;\\n}\\n\\n\\nimg{\\n\\tmargin:20px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/css/user_image_upload.css\n// module id = ../../../../../src/app/common/css/user_image_upload.css\n// module chunks = main","module.exports = \"<form [formGroup]=\\\"addressForm\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput type=\\\"text\\\" (change)=\\\"change()\\\" placeholder=\\\"Address Line One \\\" formControlName=\\\"addressLineOne\\\">\\n\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"addressLineOne.hasError('required')\\\">Address Line is <strong>required</strong></mat-error>\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput type=\\\"text\\\" (change)=\\\"change()\\\" placeholder=\\\"Address Line two \\\" formControlName=\\\"addressLineTwo\\\">\\n\\t\\t\\t<mat-hint>Optional</mat-hint>\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select placeholder=\\\"Select State\\\" formControlName=\\\"state\\\" (change)=\\\"getAllCities()\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">{{state.stateName}}</mat-option>\\n\\t\\t\\t<mat-error *ngIf=\\\"state.hasError('required')\\\"> Plesase Select A State</mat-error>\\n\\t\\t\\t</mat-select>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Select City\\\" formControlName=\\\"city\\\" (change)=\\\"change()\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.cityName\\\">{{city.cityName}}</mat-option>\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"city.hasError('required')\\\">Please Select A City</mat-error>\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input type=\\\"text\\\" matInput (change)=\\\"change()\\\" placeholder=\\\"Enter Mobile No \\\" formControlName=\\\"phoneNo\\\">\\n\\t\\t\\t<mat-error *ngIf=\\\"phoneNo.hasError('required')\\\"> Please Enter The Mobile No</mat-error>\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t\\n<!-- \\t<div class=\\\"form-group\\\"> -->\\n\\t\\t\\n<!-- \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"submit()\\\">Submit</button> -->\\n\\t\\n<!-- \\t</div> -->\\n\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/html/address_form.html\n// module id = ../../../../../src/app/common/html/address_form.html\n// module chunks = main","module.exports = \"\\n<h2>Are You Sure?</h2>\\n\\n\\n<div class=\\\"flex-row\\\">\\n\\n<button mat-button color=\\\"primary\\\" (click)=\\\"confirm()\\\">Yes</button>\\n\\n<button mat-button color=\\\"accent\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/html/confirmation_dialog.html\n// module id = ../../../../../src/app/common/html/confirmation_dialog.html\n// module chunks = main","module.exports = \"\\n\\n<mat-dialog-content>\\t\\n\\t\\n\\n<mat-tab-group [(selectedIndex)]=\\\"tabIndex\\\" (focusChange)=\\\"tabChanged($event)\\\">\\n\\n  <mat-tab  label=\\\"Upload\\\">\\n  \\n  <user-img-upload (uploaded)=\\\"uploaded($event)\\\"></user-img-upload>\\n  \\n  \\n  \\n  </mat-tab>\\n  \\n  \\n  \\n  <mat-tab    label=\\\"Gallery\\\">\\n  \\n \\n <user-gallery [(reload)]=\\\"reloadGallery\\\"  (selected)=\\\"fileSelected($event)\\\"></user-gallery>\\n  \\n  \\n  \\n  \\n  </mat-tab>\\n  \\n \\n  \\n</mat-tab-group>\\n\\n</mat-dialog-content>\\n\\n\\n\\n <mat-dialog-actions>\\n \\n  <button mat-button mat-dialog-close>Cancel</button>\\n \\n  <button mat-raised-button color=\\\"primary\\\" \\n  [disabled]=\\\"btnDisable\\\" (click)=\\\"submit()\\\" [mat-dialog-close]=\\\"true\\\">Submit</button>\\n  \\n  \\n</mat-dialog-actions>\\n  \\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/html/user_choose_profile_image.html\n// module id = ../../../../../src/app/common/html/user_choose_profile_image.html\n// module chunks = main","module.exports = \"<div  id=\\\"img-container\\\">\\n  \\n\\t\\t  <div class=\\\"imgBox\\\" *ngFor=\\\"let image of images\\\">\\n\\t\\t  \\n\\t\\t  \\t\\t\\t\\t  \\t\\t\\n\\t\\t<img [ngClass]=\\\"{'selected': image.fileId==selectedFile.fileId}\\\" src={{image.path}} alt=\\\"image\\\" \\n\\t\\twidth=\\\"150px\\\" height=\\\"150px\\\" (click)=\\\"imgSelected(image)\\\">\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\n\\t\\t  </div>\\n\\t\\t  \\n\\t\\t <mat-paginator [length]=\\\"totalImages\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"  (page)=\\\"getPage($event)\\\">\\n        </mat-paginator>\\n  \\n  </div>\\n \\n \\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/html/user_image_gallery.html\n// module id = ../../../../../src/app/common/html/user_image_gallery.html\n// module chunks = main","module.exports = \"\\n\\n  \\n  <div id=\\\"up-btn-box\\\">\\n  \\n   <mat-spinner *ngIf=\\\"progress\\\"></mat-spinner>\\n \\n  <label> Upload</label>\\n  \\n  <input type=\\\"file\\\"  id=\\\"upload-btn\\\" (change)=\\\"upload($event)\\\">\\n  \\n  </div>\\n  \\n  \\n \\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/common/html/user_image_upload.html\n// module id = ../../../../../src/app/common/html/user_image_upload.html\n// module chunks = main","import { Component } from \"@angular/core\";\nimport { UserFile } from \"../model/userfile\";\nimport { DoctorService } from \"../dr/doctor_service\";\nimport { FormResult } from \"../model/formresult\";\nimport { MatSnackBar, MatTabChangeEvent } from \"@angular/material\";\n\n\n\n@Component( {\n    selector: \"user-choose-profile-image\",\n    templateUrl: \"./html/user_choose_profile_image.html\",\n    styleUrls: [\"./css/user_choose_profile_image.css\"]\n} )\n\nexport class UserChooseProfileImage {\n\n    selectedFile: UserFile;\n\n    reloadGallery: boolean = false;\n\n    btnDisable: boolean = true;\n\n    tabIndex: number;\n\n\n\n    constructor( private doctorService: DoctorService, private matSnackBar: MatSnackBar ) {\n\n    }\n\n\n    /** uploaded method execute when userimageupload component emmit the upload event \n     *  it means that file is uploaded so we change the tab to gallery tab and reloadGallery \n     *  to true so the gallery is refreshed and have the uploaded  image */\n\n    uploaded( event ) {\n        if ( event ) {\n            this.tabIndex = 1;\n            this.reloadGallery = true;\n        }\n\n    }\n\n\n\n    /** file selected execute userimagegallery component emmit the select event  it means that \n     *  user selected a file so we enable the submit button and change the value of the \n     *  selectedFile to the file selected by user*/\n    fileSelected( event ) {\n        if ( event != undefined ) {\n            this.btnDisable = false;\n            this.selectedFile = event;\n        }\n\n\n    }\n\n\n    /** submit execute when user submit the profile image for the user it save it into the database*/\n    submit() {\n\n        this.doctorService.saveDoctorProfileImage( this.selectedFile ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                let formResult: FormResult = data.json();\n                if ( formResult.result ) {\n\n                    this.matSnackBar.open( formResult.message, \"Image Changed\", {\n                        duration: 3000\n                    } );\n                }\n            }\n        } );\n    }\n\n\n    /**tabChanged execute whenever the tab is changed */\n\n    tabChanged( event: MatTabChangeEvent ) {\n        if ( event.index == 0 ) {\n\n\n            /* we make reloadGallery false so when user upload another file it will get \n             * true and ngOnChange in gallery component will detect and refresh the list \n             * of all the images */\n            this.reloadGallery = false;\n\n            // disable the submit button \n            this.btnDisable = true;\n        }\n    }\n\n\n\n    //    btnHover(){\n    //        if(this.btnDisable){\n    //            \n    //        }\n    //    }\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/user_choose_profile_image.ts","import { Component, EventEmitter, Output, Input } from \"@angular/core\";\nimport { CommonService } from \"./common_service\";\nimport { MatSnackBar, PageEvent } from \"@angular/material\";\nimport { UserFile } from \"../model/userfile\";\n\n\n@Component( {\n    selector: \"user-gallery\",\n    templateUrl: \"./html/user_image_gallery.html\",\n    styleUrls: [\"./css/user_image_gallery.css\"]\n} )\n\nexport class UserImageGallery {\n\n    @Output()\n    selected: EventEmitter<UserFile> = new EventEmitter();\n\n    @Input()\n    reload: boolean;\n\n\n    images: string[] = new Array();\n\n    pageNo: number = 0;\n\n    pageSize: number = 10;\n\n    totalImages: number;\n\n    selectedFile: UserFile = new UserFile();\n\n\n\n    constructor( private commonService: CommonService, private matSnackBar: MatSnackBar ) {\n\n    }\n\n\n    ngOnInit() {\n        this.getAllImages( this.pageNo, this.pageSize );\n\n\n\n    }\n\n\n    ngOnChanges() {\n\n        if ( this.reload ) {\n            this.getAllImages( this.pageNo, this.pageSize );\n\n        }\n    }\n\n    getAllImages( pageNo: number, pageSize: number ) {\n\n        this.commonService.getUserImages( pageNo, pageSize ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.images = data.json().content;\n                this.totalImages = data.json().totalElements;\n            }\n        } );\n    }\n\n\n    imgSelected( image: UserFile ) {\n\n        this.selectedFile = image;\n        this.selected.emit( image );\n\n    }\n\n\n\n    getPage( event: PageEvent ) {\n        this.getAllImages( event.pageIndex, event.pageSize );\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/user_image_gallery.ts","import { Component, Output, EventEmitter } from \"@angular/core\";\nimport { CommonService } from \"./common_service\";\nimport { FormResult } from \"../model/formresult\";\nimport { MatSnackBar } from \"@angular/material\";\n\n\n@Component( {\n    selector: \"user-img-upload\",\n    templateUrl: \"./html/user_image_upload.html\",\n    styleUrls: [\"./css/user_image_upload.css\"]\n\n} )\n\nexport class UserImageUpload {\n\n    progress: boolean = false;\n\n    @Output()\n    uploaded: EventEmitter<boolean> = new EventEmitter();\n\n\n    constructor( private commonService: CommonService, private matSnackBar: MatSnackBar ) {\n\n    }\n\n\n\n\n    upload( event ) {\n\n\n\n        let fileList: FileList = event.target.files;\n        if ( fileList.length > 0 ) {\n            this.progress = true;\n            let file: File = fileList[0];\n\n            let formData: FormData = new FormData();\n            formData.append( 'img', file, file.name );\n\n            this.commonService.uploadImage( formData ).subscribe(( data ) => {\n\n                if ( data != undefined ) {\n                    let result: FormResult = data.json();\n\n                    if ( result.result ) {\n\n                        this.progress = false;\n                        this.uploaded.emit( true );\n                        this.matSnackBar.open( result.message, \"Saved\", {\n                            duration: 3000\n                        } );\n                    }\n\n                    else {\n                        if ( result.error ) {\n                            this.progress = false;\n                            this.matSnackBar.open( result.message, \"Error\", {\n                                duration: 3000\n                            } );\n                        }\n                    }\n                }\n\n            } );\n        }\n\n    }\n\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/common/user_image_upload.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label{\\n\\tmargin-right: 20px;\\n}\\n\\nlabel,mat-slide-toggle{border-top: .84375em solid transparent; padding: .4375em 0;}\\n\\n.time-list{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n\\tmargin-left: 20px;\\n\\t\\n\\t}\\n\\n.add-hour-form{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\tmargin-left: 10px;\\n}\\n\\n.mat-form-field{\\n\\twidth: 100%;\\n}\\n\\n/* If screen size is smaller than 321px*/\\n\\n@media only screen and (max-width:321px){\\n\\t\\n\\t.time-list{\\n\\t\\t-webkit-box-orient:vertical;\\n\\t\\t-webkit-box-direction:normal;\\n\\t\\t    -ms-flex-direction:column;\\n\\t\\t        flex-direction:column;\\n\\t}\\n\\t\\n}\\n\\n/* if screen is greater or equal to 1024px */\\n\\n@media only screen and (min-width: 1024px) {\\n\\nform{\\n\\tmin-width: -webkit-fit-content;\\n\\tmin-width: -moz-fit-content;\\n\\tmin-width: fit-content;\\n}\\n     \\n     .add-hour-form{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:horizontal;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:row;\\n\\t        flex-direction:row;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n\\t-webkit-box-pack:start;\\n\\t    -ms-flex-pack:start;\\n\\t        justify-content:start;\\n}\\n\\n\\n.mat-form-field{\\n\\twidth:80%;\\n}\\n\\n.day-container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:horizontal;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:row;\\n\\t        flex-direction:row;\\n\\tmargin-top: 30px;\\n\\t-webkit-box-align:baseline;\\n\\t    -ms-flex-align:baseline;\\n\\t        align-items:baseline;\\n\\t-webkit-box-pack:justify;\\n\\t    -ms-flex-pack:justify;\\n\\t        justify-content:space-between;\\n}\\n     \\n    \\n     \\n     \\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/add_hours.css\n// module id = ../../../../../src/app/dr/css/add_hours.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#grid-container{\\n\\twidth:80%;\\n\\tmargin-left:auto;\\n\\tmargin-right:auto;\\n\\tdisplay: -webkit-box;\\n\\tdisplay: -ms-flexbox;\\n\\tdisplay: flex;\\n\\t-ms-flex-wrap: wrap;\\n\\t    flex-wrap: wrap;\\n\\t-ms-flex-pack:distribute;\\n\\t    justify-content:space-around;\\n}\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_appointment_show.css\n// module id = ../../../../../src/app/dr/css/doctor_appointment_show.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_holiday_show.css\n// module id = ../../../../../src/app/dr/css/doctor_holiday_show.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, app-root, mat-sidenav-container, .my-content {\\n  margin: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nmat-sidenav{\\n\\twidth: 70%;\\n\\t\\n\\t\\n}\\n\\na{\\n\\twidth:100%;\\n\\theight:100%;\\n\\tdisplay: block;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_home.css\n// module id = ../../../../../src/app/dr/css/doctor_home.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\nmat-tab-group{\\n\\tmax-width:500px;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_make_appointment.css\n// module id = ../../../../../src/app/dr/css/doctor_make_appointment.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#grid-container{\\n\\tdisplay: -webkit-box;\\n\\tdisplay: -ms-flexbox;\\n\\tdisplay: flex;\\n\\t-ms-flex-wrap: wrap;\\n\\t    flex-wrap: wrap;\\n\\t-ms-flex-pack:distribute;\\n\\t    justify-content:space-around;\\n}\\n\\n\\nmat-card{\\n\\tmargin:10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_panel.css\n// module id = ../../../../../src/app/dr/css/doctor_panel.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#container{\\n\\twidth: 80%;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-pack:space-evenly;\\n\\t    -ms-flex-pack:space-evenly;\\n\\t        justify-content:space-evenly;\\n\\t\\n\\tmargin-top: 50px;\\n}\\n\\n#left-content{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n}\\n\\n#right-content{\\n\\tmargin-left:50px;\\n}\\n\\n#workingday-container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t\\n}\\n\\n.workingday{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-align:baseline;\\n\\t    -ms-flex-align:baseline;\\n\\t        align-items:baseline;\\n\\t-webkit-box-pack:space-evenly;\\n\\t    -ms-flex-pack:space-evenly;\\n\\t        justify-content:space-evenly;\\n}\\n\\n.time{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t\\n\\t\\n}\\n\\np{\\n\\tmargin:5px;\\n}\\n\\nul{\\n\\tdisplay: -webkit-inline-box;\\n\\tdisplay: -ms-inline-flexbox;\\n\\tdisplay: inline-flex;\\n\\tlist-style: none;\\n\\t\\n}\\n\\nul li{\\n\\tmargin:10px;\\n}\\n\\n@media only screen and (max-width:768px){\\n\\t#container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t}\\n\\t\\n\\t#right-content{\\n\\tmargin:0;}\\n}\\n\\n.mat-list{\\n\\tpadding:0;\\n}\\n\\n.mat-raised-button{\\n\\tmargin:5px;\\n}\\n\\n.edit{\\n\\twidth:50px;\\n}\\n\\n#profile-img-container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n\\t-webkit-box-pack:center;\\n\\t    -ms-flex-pack:center;\\n\\t        justify-content:center;\\n}\\n\\n#img-change-btn{\\n\\tz-index: 1;\\n\\tposition:absolute;\\n}\\n\\n#profile-img-container img{\\n\\t\\n\\topacity:0.6;\\n\\tz-index: -1;\\n\\tmargin:10px;\\n\\t\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_profile_edit.css\n// module id = ../../../../../src/app/dr/css/doctor_profile_edit.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#container{\\n\\tmargin-top:50px;\\n\\twidth: 80%;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-pack:space-evenly;\\n\\t    -ms-flex-pack:space-evenly;\\n\\t        justify-content:space-evenly;\\n}\\n\\n#left-content{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n}\\n\\n#right-content{\\n\\tmargin-left:50px;\\n}\\n\\n#img-container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t-webkit-box-align:center;\\n\\t    -ms-flex-align:center;\\n\\t        align-items:center;\\n}\\n\\n#img-container img{\\n\\tmargin:10px;\\n}\\n\\n#img-container button {\\n\\tmargin:5px;\\n}\\n\\n#workingday-container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t\\n}\\n\\n.workingday{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-align:baseline;\\n\\t    -ms-flex-align:baseline;\\n\\t        align-items:baseline;\\n\\t-webkit-box-pack:space-evenly;\\n\\t    -ms-flex-pack:space-evenly;\\n\\t        justify-content:space-evenly;\\n}\\n\\n.time{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t\\n\\t\\n}\\n\\np{\\n\\tmargin:5px;\\n}\\n\\nul{\\n\\tdisplay: -webkit-inline-box;\\n\\tdisplay: -ms-inline-flexbox;\\n\\tdisplay: inline-flex;\\n\\tlist-style: none;\\n\\t\\n}\\n\\nul li{\\n\\tmargin:10px;\\n}\\n\\n@media only screen and (max-width:768px){\\n\\t#container{\\n\\tdisplay:-webkit-box;\\n\\tdisplay:-ms-flexbox;\\n\\tdisplay:flex;\\n\\t-webkit-box-orient:vertical;\\n\\t-webkit-box-direction:normal;\\n\\t    -ms-flex-direction:column;\\n\\t        flex-direction:column;\\n\\t}\\n\\t\\n\\t#right-content{\\n\\tmargin:0;}\\n}\\n\\n.mat-list{\\n\\tpadding:0;\\n}\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_public_profile.css\n// module id = ../../../../../src/app/dr/css/doctor_public_profile.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#main-container{\\n\\twidth:50%;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/css/doctor_signup.css\n// module id = ../../../../../src/app/dr/css/doctor_signup.css\n// module chunks = main","import { Address } from \"../model/address\";\nimport { Hours } from \"../model/hours\";\nimport { Day } from \"../model/day\";\nimport { Degree } from \"../model/degree\";\nimport { Speciality } from \"../model/speciality\";\nimport { DoctorService } from \"./doctor_service\";\nimport { UserFile } from \"../model/userfile\";\n\n\nexport class Doctor {\n\n    public docId: string;\n    public name: string;\n    public about: string;\n    public degrees: Degree[];\n    public maxAppointments: number;\n    public specialities: Speciality[];\n    public workingDays: Day[] = new Array();\n    public addrLineOne: string;\n    public addrLineTwo: string;\n    public state: string;\n    public city: string;\n    public phoneno: string;\n    public appointmentFee: number;\n    public timeSlots: Hours[] = new Array();\n\n    public profileImage: UserFile = new UserFile();\n    public holidays: Date[];\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor.ts","import { Component } from \"@angular/core\";\nimport { MatSlideToggleChange, MatSelectChange } from \"@angular/material\";\nimport { DoctorService } from \"./doctor_service\";\nimport { FormResult } from \"../model/formresult\";\nimport {Router} from \"@angular/router\";\nimport { Day } from \"../model/day\";\nimport { Time } from \"../model/time\";\nimport { HourListOption } from \"../model/hourListOptions\";\nimport { Doctor } from \"./doctor\";\nimport { Hours } from \"../model/hours\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport 'hammerjs';\nimport { LocalTime } from \"js-joda\";\nimport { MatSnackBar } from \"@angular/material\";\n\n@Component( {\n    selector: \"add-hours\",\n    templateUrl: \"./html/add_hours.html\",\n    styleUrls: [\"./css/add_hours.css\"]\n} )\nexport class DoctorAddWorkingHours {\n\n    progress: boolean = true;\n\n    workState: string = \"closed\";\n\n    workingDays: Day[] = new Array();\n\n    formResult: FormResult = new FormResult();\n\n    doctor: Doctor = new Doctor();\n\n\n    workingHoursForm: FormGroup;\n\n    mondayControl: FormControl = new FormControl( \"\", [] );\n\n    mondayStartAt: FormControl = new FormControl( \"\", [] );\n\n    mondayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    mondayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n    tuesdayControl: FormControl = new FormControl( \"\", [] );\n\n    tuesdayStartAt: FormControl = new FormControl( \"\", [] );\n\n    tuesdayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    tuesdayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n    wednesdayControl: FormControl = new FormControl( \"\", [] );\n\n    wednesdayStartAt: FormControl = new FormControl( \"\", [] );\n\n    wednesdayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    wednesdayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n    thursdayControl: FormControl = new FormControl( \"\", [] );\n\n    thursdayStartAt: FormControl = new FormControl( \"\", [] );\n\n    thursdayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    thursdayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n    fridayControl: FormControl = new FormControl( \"\", [] );\n\n    fridayStartAt: FormControl = new FormControl( \"\", [] );\n\n    fridayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    fridayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n    saturdayControl: FormControl = new FormControl( \"\", [] );\n\n    saturdayStartAt: FormControl = new FormControl( \"\", [] );\n\n    saturdayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    saturdayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n    sundayControl: FormControl = new FormControl( \"\", [] );\n\n    sundayStartAt: FormControl = new FormControl( \"\", [] );\n\n    sundayCloseAt: FormControl = new FormControl( \"\", [] );\n\n    sundayAppointmentNo: FormControl = new FormControl( \"\", [] );\n\n\n    mondayCode: number = 1;\n    tuesdayCode: number = 2;\n    wednesdayCode: number = 3;\n    thursdayCode: number = 4;\n    fridayCode: number = 5;\n    saturdayCode: number = 6;\n    sundayCode: number = 0;\n\n\n    hourListOption = HourListOption;\n\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService\n        , private matSnackbar: MatSnackBar,private router:Router) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.workingHoursForm = this.formBuilder.group( {\n            \"mondayControl\": this.mondayControl,\n            \"mondayStartAt\": this.mondayStartAt,\n            \"mondayCloseAt\": this.mondayCloseAt,\n            \"mondayAppointmentNo\": this.mondayAppointmentNo,\n            \"tuesdayControl\": this.tuesdayControl,\n            \"tuesdayStartAt\": this.tuesdayStartAt,\n            \"tuesdayCloseAt\": this.tuesdayCloseAt,\n            \"tuesdayAppointmentNo\": this.tuesdayAppointmentNo,\n            \"wednesdayControl\": this.wednesdayControl,\n            \"wednesdayStartAt\": this.wednesdayStartAt,\n            \"wednesdayCloseAt\": this.wednesdayCloseAt,\n            \"wednesdayAppointmentNo\": this.wednesdayAppointmentNo,\n            \"thursdayControl\": this.thursdayControl,\n            \"thursdayStartAt\": this.thursdayStartAt,\n            \"thursdayCloseAt\": this.thursdayCloseAt,\n            \"thursdayAppointmentNo\": this.thursdayAppointmentNo,\n            \"fridayControl\": this.fridayControl,\n            \"fridayStartAt\": this.fridayStartAt,\n            \"fridayCloseAt\": this.fridayCloseAt,\n            \"fridayAppointmentNo\": this.fridayAppointmentNo,\n            \"saturdayControl\": this.saturdayControl,\n            \"saturdayStartAt\": this.saturdayStartAt,\n            \"saturdayCloseAt\": this.saturdayCloseAt,\n            \"saturdayAppointmentNo\": this.saturdayAppointmentNo,\n            \"sundayControl\": this.sundayControl,\n            \"sundayStartAt\": this.sundayStartAt,\n            \"sundayCloseAt\": this.sundayCloseAt,\n            \"sundayAppointmentNo\": this.sundayAppointmentNo\n\n\n\n        } );\n\n\n        this.getDoctorWorkingDays();\n\n\n\n\n\n\n    }\n\n\n\n\n\n\n\n    /** getDoctorWorkingdays Method */\n\n    getDoctorWorkingDays() {\n\n        this.doctorService.getDoctorPublicInfo().subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                if(data[\"_body\"]!=\"\"){\n\n                    let res= data.json();\n\n                    if ( res.workingDays != null ) {\n\n                        this.workingDays = res.workingDays;\n    \n                        this.progress = false;\n    \n    \n                    }\n    \n                    else {\n                        this.progress = false;\n                    }\n\n\n                }\n\n                else{\n\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n\n                \n\n\n\n\n            }\n        } );\n\n\n    }\n\n\n\n\n    checked( event: MatSlideToggleChange ) {\n\n\n\n        if ( event.checked ) {\n\n            let day: Day = new Day();\n\n            day.dayId = parseInt( event.source.id );\n            day.dayName = event.source.name;\n            day.dayStatus = \"Open\";\n            day.checked = true;\n            console.log( day );\n            this.workingDays.push( day );\n\n\n        }\n        else {\n\n            for ( let i = 0; i < this.workingDays.length; i++ ) {\n                if ( this.workingDays[i].dayId == ( parseInt( event.source.id ) ) ) {\n\n                    this.workingDays.splice( i, 1 );\n                }\n            }\n\n        }\n\n    }\n\n\n\n    submit() {\n\n        this.addDayHour( this.mondayStartAt.value, this.mondayCloseAt.value, this.mondayAppointmentNo.value, this.mondayCode );\n        this.addDayHour( this.tuesdayStartAt.value, this.tuesdayCloseAt.value, this.tuesdayAppointmentNo.value, this.tuesdayCode );\n        this.addDayHour( this.wednesdayStartAt.value, this.wednesdayCloseAt.value, this.wednesdayAppointmentNo.value, this.wednesdayCode );\n        this.addDayHour( this.thursdayStartAt.value, this.thursdayCloseAt.value, this.thursdayAppointmentNo.value, this.thursdayCode );\n        this.addDayHour( this.fridayStartAt.value, this.fridayCloseAt.value, this.fridayAppointmentNo.value, this.fridayCode );\n        this.addDayHour( this.saturdayStartAt.value, this.saturdayCloseAt.value, this.saturdayAppointmentNo.value, this.saturdayCode );\n        this.addDayHour( this.sundayStartAt.value, this.sundayCloseAt.value, this.sundayAppointmentNo.value, this.sundayCode );\n\n\n\n        console.log( this.workingDays );\n        this.doctorService.saveWorkingDays( this.workingDays ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n                if ( this.formResult.result ) {\n                    this.matSnackbar.open( this.formResult.message, \"Done\", {\n                        duration: 3000\n                    } );\n                }\n                else {\n                    if ( this.formResult.error ) {\n                        this.matSnackbar.open( this.formResult.message, \"Error\", {\n                            duration: 3000\n                        } );\n                    }\n                }\n            }\n        } );\n\n\n\n\n    }\n\n    /** addDayHour execute when user click on addhour button it takes three parameter \n     *  startAt , closeAt ,maxpatientno,  dayid  and add the hour object to day with that dayid */\n\n    addDayHour( startAt: string, closeAt: string, maxPatientNo: number, dayId: number ) {\n\n        if ( startAt != \"\" && closeAt != \"\" ) {\n\n            if ( maxPatientNo != 0 ) {\n\n\n\n                let hours: Hours = new Hours();\n\n\n                hours.startAt = startAt;\n                hours.closeAt = closeAt;\n\n\n                hours.maxPatientNo = maxPatientNo;\n\n\n\n                for ( let i = 0; i < this.workingDays.length; i++ ) {\n\n                    if ( this.workingDays[i].dayId == dayId ) {\n\n                        let hoursArr: Hours[] = this.workingDays[i].hours;\n\n                        if ( hoursArr.length == 0 ) {\n\n                            hoursArr.push( hours );\n\n                        }\n                        else {\n\n                            let isExist: boolean = false;\n\n                            for ( let j = 0; j < hoursArr.length; j++ ) {\n\n\n                                if ( hoursArr[j].startAt == hours.startAt && hoursArr[j].closeAt == hours.closeAt ) {\n\n\n                                    isExist = true;\n                                }\n\n\n\n                            }\n\n                            if ( !isExist ) {\n                                hoursArr.push( hours );\n                            }\n                        }\n\n\n                        this.workingDays[i].hours = hoursArr;\n                    }\n                }\n            }\n\n\n        }\n\n        else {\n\n\n            if ( maxPatientNo != 0 ) {\n                let hours: Hours = new Hours();\n\n                if ( startAt == \"24\" || closeAt == \"24\" ) {\n                    hours.startAt = '00:00';\n                    hours.closeAt = '23:59';\n                    hours.maxPatientNo = maxPatientNo;\n                    let hourArr: Hours[] = new Array();\n                    hourArr.push( hours );\n\n                    this.workingDays[this.getADayIndex( dayId )].hours = hourArr;\n\n\n                }\n            }\n        }\n\n\n    }\n\n\n\n    /** getADayIndex  method get the index value of the day in the workingday array \n     *  it check by using the dayid */\n\n    public getADayIndex( dayId: number ): number {\n\n        let dayIndex: number;\n\n\n        if ( this.workingDays.length > 0 ) {\n\n            for ( let i = 0; i < this.workingDays.length; i++ ) {\n\n                if ( this.workingDays[i].dayId == dayId ) {\n                    dayIndex = i;\n                }\n            }\n\n        }\n\n        return dayIndex;\n\n    }\n\n    /** get a day method get the day object from workingday array using dayid */\n    getADay( dayid: number ): Day {\n        let day: Day = this.workingDays[this.getADayIndex( dayid )];\n\n        if ( day == undefined ) {\n            day = new Day();\n        }\n        return day;\n    }\n\n    /** getTimeLabel get the label value for a time the label value is for display only */\n    getTimeLabel( value: string ): string {\n        for ( let i = 0; i < this.hourListOption.length; i++ ) {\n\n            if ( this.hourListOption[i].value == value ) {\n                return this.hourListOption[i].label;\n            }\n        }\n\n        return \"\";\n    }\n\n    /** hourDelete method remove a perticular hour value from a day present in the workingDays array\n     *  it do so by  using the dayid and hour index value */\n    hourDelete( dayid: number, hourIndex: number ) {\n        this.workingDays[this.getADayIndex( dayid )].hours.splice( hourIndex, 1 );\n    }\n\n\n    /** hourSelected method run whenever use select a hour value this method check if user\n     *  is choose the 24 hour value if so then we remove all the previous value and add only \n     *  one value for 24 hours */\n\n    hourSelected( value: string, dayid: number ) {\n\n        let hour: Hours = new Hours();\n        hour.startAt = \"00:00\";\n        hour.closeAt = \"23:59\";\n\n\n\n        if ( value != \"24\" ) {\n\n            let oldHours: Hours[] = new Array();\n            oldHours = this.getADay( dayid ).hours;\n\n            for ( let i = 0; i < oldHours.length; i++ ) {\n\n                if ( hour.equal( oldHours[i] ) ) {\n\n                    this.workingDays[this.getADayIndex( dayid )].hours.splice( i, 1 );\n\n                }\n            }\n        }\n\n\n\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_add_working_hours.ts","import { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { TimeSlot } from \"../model/timeslot\";\nimport { Doctor } from \"./doctor\";\nimport { FormResult } from \"../model/formresult\";\nimport { DoctorService } from \"./doctor_service\";\nimport {Router} from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material\";\n\n@Component( {\n    selector: \"doc-appoint-setup\",\n    templateUrl: \"./html/doctor_appointment_setup.html\"\n} )\n\nexport class DoctorAppointmentSetup {\n\n    appointmentForm: FormGroup;\n\n    doctor: Doctor = new Doctor();\n    result: FormResult = new FormResult();\n\n\n    feeAmount: FormControl = new FormControl( '', [] );\n    maxAppointments: FormControl = new FormControl( '', [] );\n\n\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService,\n        private matSnackBar: MatSnackBar , private router:Router ) {\n\n    }\n\n    ngOnInit() {\n\n        this.getDoctor();\n\n        this.appointmentForm = this.formBuilder.group( {\n            feeAmount: this.feeAmount\n\n        } );\n    }\n\n    getDoctor() {\n        this.doctorService.getDoctorPublicInfo().subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                if(data[\"_body\"]!=\"\"){\n\n                    this.doctor = data.json();\n                    this.feeAmount.setValue( this.doctor.appointmentFee );\n\n                }\n\n                else{\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n               \n\n            }\n        } );\n    }\n\n\n    submit() {\n\n        let doctor: Doctor = new Doctor();\n        doctor.appointmentFee = this.appointmentForm.value.feeAmount;\n\n        this.doctorService.docAppointmentSetup( doctor ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n                if ( this.result.result ) {\n                    this.matSnackBar.open( this.result.message, \"Saved\", {\n                        duration: 3000\n                    } );\n                }\n                else if ( this.result.error ) {\n                    this.matSnackBar.open( this.result.message, \"Error\", {\n                        duration: 3000\n                    } );\n                }\n\n            }\n        } );\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_appointment_setup.ts","import { Component } from \"@angular/core\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Appointment } from \"../model/appointment\";\nimport { FormControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { PageEvent } from \"@angular/material\";\nimport { CommonService } from \"../common/common_service\";\nimport { Router } from \"@angular/router\";\n\n@Component( {\n    selector: \"doc-appointment-show\",\n    templateUrl: \"./html/doctor_appointment_show.html\",\n    styleUrls: [\"./css/doctor_appointment_show.css\"]\n\n} )\n\nexport class DoctorAppointmentShow {\n\n    dateForm: FormGroup;\n\n    progress: boolean = false;\n\n    from: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    to: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n\n\n    pageSize: number = 10;\n\n    totalElements: number = 0;\n\n\n\n    appointments: Appointment[];\n\n    constructor( private doctorService: DoctorService, private commonService: CommonService,\n         private formBuilder: FormBuilder , private router:Router) {\n\n    }\n\n    ngOnInit() {\n\n        this.dateForm = this.formBuilder.group( {\n            from: this.from,\n            to: this.to\n        } );\n\n        this.doctorService.getDoctorPublicInfo().subscribe((data)=>{\n            if(data!=undefined){\n                \n                if(data[\"_body\"]==\"\"){\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n            }\n        });\n\n\n    }\n\n\n\n    // get appointments gets the appointment from the data base\n\n    getAppointments( pageNo: number ) {\n\n        // start the progress bar \n        this.progress = true;\n        let from: Date = this.dateForm.value.from;\n        let to: Date = this.dateForm.value.to;\n\n        this.doctorService.getAppointmentOfPeriod( from, to, pageNo, this.pageSize ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                console.log( data.json() );\n                this.appointments = data.json().content;\n                this.totalElements = data.json().totalElements;\n                this.progress = false;  // close the progress bar \n\n\n\n            }\n        } );\n    }\n\n\n\n\n\n\n\n    submit() {\n\n\n        this.getAppointments( 0 );\n\n    }\n\n\n    nextPage( event: PageEvent ) {\n        console.log( event );\n        this.getAppointments( event.pageIndex );\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_appointment_show.ts","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Doctor } from \"./doctor\";\nimport { FormResult } from \"../model/formresult\";\nimport { Router } from \"@angular/router\";\n\n@Component( {\n    selector: \"doc-holiday\",\n    templateUrl: \"./html/doctor_holiday.html\"\n} )\n\nexport class DoctorHoliday {\n\n\n    holidayForm: FormGroup;\n\n    currentDate: Date = new Date();\n\n    result: FormResult = new FormResult();\n\n    holidayDate: FormControl = new FormControl( '', [\n\n    ] );\n\n    // holds the list of date to be added into  data base\n    holidayDates: Date[] = new Array();\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService ,\n    private router:Router) {\n\n\n    }\n\n\n    ngOnInit() {\n\n        // form initiolization \n        this.holidayForm = this.formBuilder.group(\n            {\n                holidayDate: this.holidayDate\n            } );\n\n        this.doctorService.getDoctorPublicInfo().subscribe((data)=>{\n            if(data!=undefined){\n                if(data[\"_body\"]==\"\"){\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n            }\n        });\n    }\n\n\n    addHoliday() {\n        let error: boolean = false;\n\n        /*date selected by the user if empty its a string else date \n          thats why we did not choose any data type for selectedDate */\n\n        let selectedDate: Date = this.holidayForm.value.holidayDate;\n\n\n\n        // here we are checking if the date is less than min date which is current date \n        if ( this.holidayDate.hasError( \"matDatepickerMin\" ) ) {\n            error = true;\n        }\n\n        //here we are checking if the date is already in the array\n        for ( let i = 0; i < this.holidayDates.length; i++ ) {\n            if ( this.holidayDates[i] == selectedDate ) {\n                error = true;\n            }\n        }\n\n        // if date is not empty and not in the array then we are adding it into array\n        if ( !error ) {\n            let date: Date = new Date( selectedDate.toISOString() );\n\n            this.holidayDates.push( date );\n\n        }\n\n    }\n\n\n    submit() {\n        let doctor: Doctor = new Doctor();\n\n        doctor.holidays = this.holidayDates;\n\n        console.log( doctor );\n        this.doctorService.addHolidays( doctor ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n    }\n\n\n\n\n    // delete the date from the array using the index\n    deleteDate( i: number ) {\n        this.holidayDates.splice( i, 1 );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_holiday.ts","import { Component } from \"@angular/core\";\nimport { DoctorService } from \"./doctor_service\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\n\n@Component( {\n    selector: \"doc-holiday-show\",\n    templateUrl: \"./html/doctor_holiday_show.html\",\n    styleUrls: [\"./css/doctor_holiday_show.css\"]\n} )\nexport class DoctorHolidayShow {\n\n    holidayList: Date[] = new Array();\n\n    dateForm: FormGroup;\n\n    from: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    to: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n    constructor( private doctorService: DoctorService, private formBuilder: FormBuilder ,\n    private router:Router) {\n\n    }\n\n    ngOnInit() {\n        //this.getAllHoliday();\n\n        this.dateForm = this.formBuilder.group( {\n            from: this.from,\n            to: this.to\n\n        } );\n\n        this.doctorService.getDoctorPublicInfo().subscribe((data)=>{\n            if(data!=undefined){\n                if(data[\"_body\"]==\"\"){\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n            }\n        });\n\n    }\n\n    getAllHoliday() {\n\n        this.doctorService.getAllHoliday().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.holidayList = data.json();\n            }\n        } );\n    }\n\n    submit() {\n        let from: Date = this.dateForm.value.from;\n        let to: Date = this.dateForm.value.to;\n        this.getHolidayOfPeriod( from, to );\n\n    }\n\n\n    /** getHolidayOfPeriod get the holiday between two period it takes two date parameter \n     *  and return the list of holidays between them */\n\n    getHolidayOfPeriod( from: Date, to: Date ) {\n        this.doctorService.getHolidayOfPeriod( from, to ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.holidayList = data.json();\n                console.log( data.json() );\n\n            }\n        } );\n    }\n\n    deleteHoliday( date: Date ) {\n        this.doctorService.deleteHoliday( date ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                console.log( data.json() );\n                if ( data.json().result ) {\n                    let from: Date = this.dateForm.value.from;\n                    let to: Date = this.dateForm.value.to;\n                    this.getHolidayOfPeriod( from, to );\n                }\n            }\n        } );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_holiday_show.ts","import { Component } from \"@angular/core\";\nimport {UserService} from \"../user/user_service\";\nimport {Router} from \"@angular/router\";\nimport {DoctorService} from \"./doctor_service\";\n\n\n@Component( {\n    selector: 'doctor-home',\n    templateUrl: \"./html/doctor_home.html\",\n\n    styleUrls: [\"./css/doctor_home.css\"]\n} )\n\n\nexport class DoctorHome {\n\n    \n\n    constructor(private userService:UserService , private router:Router ,\n    private doctorService:DoctorService) {\n\n    }\n\n    ngOnInit(){\n\n       \n        this.doctorService.getDoctorPublicInfo().subscribe((data)=>{\n           \n                if(data[\"_body\"]==\"\"){\n                   this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n               \n        });\n\n    }\n\n  \n\n\n\n    signOut(){\n        \n        this.userService.userLogout().subscribe((data)=>{\n            if(data!=undefined){\n                if(data.status==200){\n                    this.router.navigateByUrl(\"/\");\n                }\n                \n            }\n        });\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_home.ts","import { Component } from \"@angular/core\";\nimport { Doctor } from \"./doctor\";\nimport { FormBuilder, FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Time } from \"../model/time\";\nimport { holidayValidator } from \"./holidayValidator\";\nimport { Appointment } from \"../model/appointment\";\nimport { Hours } from \"../model/hours\";\nimport { CommonService } from \"../common/common_service\";\nimport { FormResult } from \"../model/formresult\";\nimport {Router} from \"@angular/router\";\nimport { MatDatepickerInputEvent, MatTabChangeEvent, MatSnackBar } from \"@angular/material\";\n\n@Component( {\n    selector: \"doc-make-appointment\",\n    templateUrl: \"./html/doctor_make_appointment.html\",\n    styleUrls: [\"./css/doctor_make_appointment.css\"]\n} )\n\nexport class DoctorMakeAppointment {\n\n    doctor: Doctor = new Doctor();\n    holidays: Date[] = new Array();\n\n    result: FormResult = new FormResult();\n\n    hours: Hours[] = new Array();\n\n    today: Date = new Date();\n\n    workingDayFilter;\n\n\n    appointmentForm: FormGroup;\n\n    patientId: FormControl = new FormControl( \"\", [\n        Validators.required\n        , Validators.email\n    ] );\n\n    date: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );;\n\n    timeSlot: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    appointmentWithoutPatientId: FormGroup;\n\n    patientName: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    patientPhoneNo: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.minLength( 10 )\n    ] );\n\n    appointmentDate: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    appointmentTimeSlot: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n\n\n\n    ngOnInit() {\n\n        \n\n\n        this.appointmentForm = this.formBuilder.group( {\n            patientId: this.patientId,\n            date: this.date,\n            timeSlot: this.timeSlot\n        } );\n\n\n        this.appointmentWithoutPatientId = this.formBuilder.group( {\n            patientName: this.patientName,\n            patientPhoneNo: this.patientPhoneNo,\n            appointmentDate: this.appointmentDate,\n            appointmentTimeSlot: this.appointmentTimeSlot\n        } );\n\n        this.getDoctor();\n\n\n    }\n\n\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService\n        , private commonService: CommonService, private matSnackBar: MatSnackBar ,\n    private router:Router) {\n\n    }\n\n    /** dateselected execute when user select a date and it change the hours value according \n     *  to the day of the date */\n\n    dateSelected( event: MatDatepickerInputEvent<Date> ) {\n\n        let date: Date = event.value;\n\n\n        for ( let i = 0; i < this.doctor.workingDays.length; i++ ) {\n            if ( this.doctor.workingDays[i].dayId == date.getDay() ) {\n                this.hours = this.doctor.workingDays[i].hours;\n            }\n        }\n\n\n    }\n    0\n\n\n    /** getDoctor method gets the details of the doctor and use it to get information like \n     *  holidays , workingdays and hours */\n    public getDoctor() {\n\n        this.doctorService.getDoctorPublicInfo().subscribe(( data ) => {\n            if ( data != undefined ) {\n                console.log( data );\n              if(data[\"_body\"]!=\"\"){\n\n                this.doctor = data.json();\n\n                /* filter is dependent on the doctor object thats why \n                 * it is set here */\n\n                this.workingDayFilter = ( d: Date ): boolean => {\n                    const day = d.getDay();\n                    let workingDays = this.doctor.workingDays;\n                    let holidays = this.doctor.holidays;\n                    let result: boolean = false;\n\n                    if ( workingDays != null ) {\n\n                        for ( let i = 0; i < workingDays.length; i++ ) {\n                            if ( day == workingDays[i].dayId ) {\n                                result = true;\n                            }\n\n\n                        }\n                    }\n\n\n\n                    if ( holidays != null ) {\n\n                        for ( let i = 0; i < holidays.length; i++ ) {\n                            let holiday: Date = holidays[i];\n\n                            if ( d.getTime() == parseInt( holiday.toString() ) * 1000 ) {\n                                result = false;\n                            }\n                        }\n                    }\n\n\n\n                    return result;\n\n                }\n\n\n              }\n              // doctor object is empty \n              else{\n                   this.router.navigateByUrl(\"/dr/home/dr/signup\"); \n              }\n\n\n            }\n        } );\n    }\n\n\n    // open snackbar method takes two parameter message and action and open the matsnackbar\n\n    openSnackBar( message: string, action: string ) {\n        this.matSnackBar.open( message, action, {\n            duration: 3000,\n        } );\n    }\n\n\n    /** execute when user submit the form using patient id */\n    submit() {\n        let appointment: Appointment = new Appointment();\n        appointment.patientId = this.appointmentForm.value.patientId;\n        appointment.date = new Date( this.appointmentForm.value.date );\n        appointment.dayId = appointment.date.getDay();\n        appointment.hours = this.appointmentForm.value.timeSlot;\n        console.log( appointment );\n\n        this.doctorService.makeAppointment( appointment ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n                if ( this.result.result ) {\n                    this.openSnackBar( this.result.message, \"Done\" )\n                }\n                else {\n                    if ( this.result.error ) {\n                        this.openSnackBar( this.result.message, \"Error\" );\n                    }\n                }\n            }\n        } );\n\n    }\n\n\n    /** execute when user submit the form without patient id */\n    submitWithoutId() {\n        let appointment: Appointment = new Appointment();\n        appointment.patientName = this.appointmentWithoutPatientId.value.patientName;\n        appointment.patientPhoneNo = this.appointmentWithoutPatientId.value.patientPhoneNo;\n        appointment.date = this.appointmentWithoutPatientId.value.appointmentDate;\n        appointment.dayId = appointment.date.getDay();\n        appointment.hours = this.appointmentWithoutPatientId.value.appointmentTimeSlot;\n\n        this.doctorService.makeAppointment( appointment ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n                if ( this.result.result ) {\n                    this.openSnackBar( this.result.message, \"Done\" )\n                }\n                else {\n                    if ( this.result.error ) {\n                        this.openSnackBar( this.result.message, \"Error\" );\n                    }\n                }\n            }\n        } );\n    }\n\n\n    /** tabChanged execute when user choose any tab it reset all the field of previous tab \n     *  so things won't mixed up in two tabs */\n    tabChanged( event: MatTabChangeEvent ) {\n\n        if ( event.index == 0 ) {\n\n            this.appointmentForm.reset();\n\n        }\n        else if\n        ( event.index == 1 ) {\n            this.appointmentWithoutPatientId.reset();\n        }\n\n    }\n\n    /** patientIdExist method check if the patient id exist in database or not \n     *  it execute on change */\n\n    patientIdExist() {\n\n        this.doctorService.patientExist( this.patientId.value ).subscribe(( data ) => {\n            if ( data.json().error ) {\n                this.patientId.setErrors( { \"noPatient\": true } );\n            }\n        } );\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_make_appointment.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DoctorSignup } from \"./doctor_signup\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { DoctorRoutingModule } from \"./doctor_routing_module\";\nimport { DoctorHome } from \"./doctor_home\";\nimport { DoctorAppointmentSetup } from \"./doctor_appointment_setup\";\nimport { DoctorHoliday } from \"./doctor_holiday\";\nimport { DoctorPanel } from \"./doctor_panel\";\nimport { DoctorMakeAppointment } from \"./doctor_make_appointment\";\nimport { DoctorAppointmentShow } from \"./doctor_appointment_show\";\nimport { DoctorHolidayShow } from \"./doctor_holiday_show\";\nimport { DoctorService } from \"./doctor_service\";\nimport { DoctorPublicProfile } from \"./doctor_public_profile\";\nimport { DoctorProfileEdit } from \"./doctor_profile_edit\";\nimport { AppCommonModule } from \"../common/common_module\";\nimport { DoctorAddWorkingHours } from \"./doctor_add_working_hours\";\nimport { UserChooseProfileImage } from \"../common/user_choose_profile_image\";\nimport { DoctorWritePrescription } from \"./doctor_write_prescription\";\n\n\n\n\n@NgModule( {\n    imports: [MaterialModule, FormsModule, DoctorRoutingModule, ReactiveFormsModule, CommonModule\n        , AppCommonModule\n\n    ],\n    declarations: [DoctorSignup, DoctorHome, DoctorAppointmentSetup, DoctorHoliday, DoctorPanel\n        , DoctorMakeAppointment, DoctorAppointmentShow, DoctorHolidayShow, DoctorAddWorkingHours\n        , DoctorPublicProfile, DoctorProfileEdit, DoctorWritePrescription],\n    providers: [DoctorService],\n    exports: [DoctorSignup],\n    entryComponents: [UserChooseProfileImage, DoctorWritePrescription]\n\n} )\n\nexport class DoctorModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_module.ts","import { Component } from \"@angular/core\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Appointment } from \"../model/appointment\";\nimport { PageEvent, MatDialog, MatDialogRef } from \"@angular/material\";\nimport { CommonService } from \"../common/common_service\";\nimport { DoctorWritePrescription } from \"./doctor_write_prescription\";\nimport { Router } from \"@angular/router\";\n\n\n\n@Component( {\n    selector: \"doc-panel\",\n    templateUrl: \"./html/doctor_panel.html\",\n    styleUrls: [\"./css/doctor_panel.css\"]\n} )\n\nexport class DoctorPanel {\n\n\n    appointments: Appointment[];\n\n    progress: boolean = true;\n\n    pageNo: number;\n\n    pageSize: number = 10;\n\n    totalElements: number;\n\n    showAppointment: boolean = false;\n\n\n    constructor( private doctorService: DoctorService, private commonService: CommonService,\n        private matDialog: MatDialog , private router:Router) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.getAppointments( 0 );\n\n\n        this.matDialog.afterAllClosed.subscribe(() => {\n            this.getAppointments( 0 );\n        } );\n\n        this.doctorService.getDoctorPublicInfo().subscribe((data)=>{\n            if(data!=undefined){\n                if(data[\"_body\"]==\"\"){\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n            }\n        });\n    }\n\n\n\n\n    writePrescription( appointmentId: string ) {\n        this.matDialog.open( DoctorWritePrescription, {\n\n            data: { appointmentId: appointmentId },\n            height: '700px',\n            width: '900px'\n\n        } );\n    }\n\n\n    getAppointments( page: number ) {\n        this.progress = true;\n        this.pageNo = page;\n\n        this.doctorService.getTodayAppointment( this.pageNo, this.pageSize ).subscribe(( data ) => {\n\n            if ( data != undefined ) {\n                console.log( data.json().content );\n                this.appointments = data.json().content;\n                this.totalElements = data.json().totalElements;\n                console.log( this.appointments );\n                if ( this.appointments.length != 0 ) {\n                    this.showAppointment = true;\n                    this.progress = false;\n                }\n                else {\n                    this.progress = false;\n                }\n\n\n\n            }\n        } );\n    }\n\n    nextPage( event: PageEvent ) {\n\n        this.getAppointments( event.pageIndex );\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_panel.ts","import { Component } from \"@angular/core\";\nimport { Doctor } from \"./doctor\";\nimport { CommonService } from \"../common/common_service\";\nimport { DoctorService } from \"./doctor_service\";\nimport { City } from \"../model/city\";\nimport { Degree } from \"../model/degree\";\nimport { Speciality } from \"../model/speciality\";\nimport { State } from \"../model/state\";\nimport { MatDialog, MatDialogRef, MatSnackBar } from \"@angular/material\";\nimport { DoctorAddWorkingHours } from \"./doctor_add_working_hours\";\nimport { FormResult } from \"../model/formresult\";\nimport { UserChooseProfileImage } from \"../common/user_choose_profile_image\";\nimport { Router } from \"@angular/router\";\n\n\n\n@Component( {\n    selector: \"doctor-profile-edit\",\n    templateUrl: \"./html/doctor_profile_edit.html\",\n    styleUrls: [\"./css/doctor_profile_edit.css\"]\n} )\n\nexport class DoctorProfileEdit {\n\n    progress: boolean = true;\n    appointment: boolean = true;\n    appointmentEdit: boolean = false;\n    phoneNo: boolean = true;\n    phoneNoEdit: boolean = false;\n    address: boolean = true;\n    addressEdit: boolean = false;\n    name: boolean = true;\n    nameEdit: boolean = false;\n    about: boolean = true;\n    aboutEdit: boolean = false;\n    qualification: boolean = true;\n    qualificationEdit: boolean = false;\n    speciality: boolean = true;\n    specialityEdit: boolean = false;\n\n    // List of states for the select field\n    states: State[];\n\n    // list of cities for the select field \n    cities: City[];\n\n\n    //list of qualification \n    qualificationOptions: Degree[];\n\n    // list of specialities\n    specialities: Speciality[];\n\n    docId: string;\n\n\n    // form fields \n\n    // address string;\n\n    address2: string;\n\n    state: string;\n\n    city: string;\n\n    doctor: Doctor = new Doctor();\n\n\n\n    constructor( private doctorService: DoctorService, private matSnackBar: MatSnackBar\n        , private commonService: CommonService, private dialog: MatDialog ,\n    private router:Router) {\n\n    }\n\n    ngOnInit() {\n\n        this.getState();\n\n        this.getDoctor();\n\n        this.getAllDegree();\n\n        this.getAllSpeciality();\n\n\n\n        // after upload dailog closed we get new doctor object\n\n        this.dialog.afterAllClosed.subscribe(() => {\n            this.getDoctor();\n        } );\n    }\n\n    getDoctor() {\n\n        this.doctorService.getDoctorPublicInfo().subscribe(( data ) => {\n            if ( data.status != 204 ) {\n\n                if(data[\"_body\"]!=\"\"){\n                    \n                    this.doctor = data.json();\n\n                    // hide the progres bar \n                    this.progress = false;\n                }\n\n                else{\n                    this.router.navigateByUrl(\"/dr/home/dr/signup\");\n                }\n\n\n            }\n        } );\n\n    }\n\n\n    /*getState method get all the state from the database and populate it into the \n     *form select field */\n\n    getState() {\n        this.doctorService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n\n    /* getCitites method get all the cityies for a particular state selected by the user it \n     * takes one parameter which is stateid */\n    getCitites( stateId: string ) {\n        this.doctorService.getAllCities( stateId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.cities = data.json();\n            }\n        } );\n    }\n\n\n    /*     it execute when user select a state from the state list and change the list \n     *     of cities to all the cities for that perticular state */\n    stateSelected() {\n        let stateId: string = this.doctor.state;\n        this.getCitites( stateId );\n    }\n\n    /* getAddDegree get list of the degress from the database and populate it into \n     * the form select field */\n    getAllDegree() {\n        this.doctorService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.qualificationOptions = data.json();\n            }\n        } );\n    }\n\n\n    /*getAllSpeciality get list of all the speciality form the database and populate into\n     * the form select field */\n\n    getAllSpeciality() {\n        this.doctorService.getAllSpeciality().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.specialities = data.json();\n            }\n        } );\n    }\n\n\n    openDialog() {\n        let dialogRef = this.dialog.open( DoctorAddWorkingHours, {\n            width: \"1000px\",\n            height: \"700px\"\n        } );\n    }\n\n\n    save() {\n        this.progress = true;\n        this.doctorService.saveDoctorObject( this.doctor ).subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                let formResult: FormResult = data.json();\n                if ( formResult.result ) {\n                    this.progress = false;\n                    this.matSnackBar.open( formResult.message, \"Saved\", {\n                        duration: 3000\n                    } );\n                }\n\n                else {\n                    this.progress = false;\n                    this.matSnackBar.open( formResult.message, \"Error\", {\n                        duration: 3000\n                    } );\n                }\n            }\n        } );\n    }\n\n\n    refresh(): void {\n\n        this.getDoctor();\n\n    }\n\n\n    upload() {\n\n        this.dialog.open( UserChooseProfileImage, {\n            width: \"700px\",\n            height: \"600px\"\n\n        } );\n\n\n    }\n\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_profile_edit.ts","import { Component, Inject } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Doctor } from \"./doctor\";\nimport { MAT_DIALOG_DATA } from \"@angular/material\";\nimport { CommonService } from \"../common/common_service\";\n\n@Component( {\n    selector: \"doc-public-profile\",\n    templateUrl: \"./html/doctor_public_profile.html\",\n    styleUrls: [\"./css/doctor_public_profile.css\"]\n} )\n\nexport class DoctorPublicProfile {\n\n    docId: string;\n\n    doctor: Doctor = new Doctor();\n\n    constructor( private acroute: ActivatedRoute, private doctorService: DoctorService\n        , private commonService: CommonService, @Inject( MAT_DIALOG_DATA ) public data: any,\n        private router: Router ) {\n\n    }\n\n    ngOnInit() {\n\n        this.docId = this.data.docId;\n\n        this.getDoctor();\n\n    }\n\n    getDoctor() {\n\n        this.doctorService.getDocUsingId( this.docId ).subscribe(( data ) => {\n            if ( data.status != 204 ) {\n                this.doctor = data.json();\n                this.doctor.workingDays = this.doctor.workingDays;\n\n            }\n        } );\n\n    }\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_public_profile.ts","import { Route, Routes } from \"@angular/router\";\nimport { DoctorSignup } from \"./doctor_signup\";\nimport { DoctorHoliday } from \"./doctor_holiday\";\nimport { DoctorHome } from \"./doctor_home\";\nimport { DoctorAppointmentSetup } from \"./doctor_appointment_setup\";\nimport { DoctorPanel } from \"./doctor_panel\";\nimport { DoctorMakeAppointment } from \"./doctor_make_appointment\";\nimport { DoctorAppointmentShow } from \"./doctor_appointment_show\";\nimport { DoctorHolidayShow } from \"./doctor_holiday_show\";\nimport { DoctorAddWorkingHours } from \"./doctor_add_working_hours\";\nimport { DoctorPublicProfile } from \"./doctor_public_profile\";\nimport { DoctorProfileEdit } from \"./doctor_profile_edit\";\n\nconst doctorAppointment: Route = { path: \"dr/appointment\", component: DoctorAppointmentSetup };\nconst doctorProfileEdit: Route = { path: \"profile/edit\", component: DoctorProfileEdit };\nconst doctorHoliday: Route = { path: \"dr/holiday\", component: DoctorHoliday };\nconst doctorSignUp: Route = { path: \"dr/signup\", component: DoctorSignup };\nconst doctorPanel: Route = { path: \"dr/panel\", component: DoctorPanel };\nconst doctorMakeAppointment: Route = { path: \"dr/make/appointment\", component: DoctorMakeAppointment };\nconst doctorAppointmentShow: Route = { path: \"dr/show/appointment\", component: DoctorAppointmentShow };\nconst doctorHolidayShow: Route = { path: \"dr/show/holiday\", component: DoctorHolidayShow };\nconst doctorAddWorkingHours: Route = { path: \"dr/add/hours\", component: DoctorAddWorkingHours };\nconst doctorPublicProfile: Route = { path: \"dr/public/profile/:docId\", component: DoctorPublicProfile }\n\n\nconst doctorHome: Route = {\n    path: \"dr/home\", component: DoctorHome, children: [\n        { path: \"\", component: DoctorPanel },\n        doctorSignUp,\n        doctorAppointment,\n        doctorHoliday,\n        doctorPanel,\n        doctorMakeAppointment,\n        doctorAppointmentShow,\n        doctorHolidayShow,\n        doctorAddWorkingHours,\n        doctorProfileEdit\n\n    ]\n};\n\n\nexport const DoctorRoutes: Routes = [doctorHome, doctorPublicProfile];\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_routing_config.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DoctorRoutes } from \"./doctor_routing_config\";\n\n\n@NgModule( {\n    imports: [RouterModule.forChild( DoctorRoutes )],\n    declarations: [],\n    exports: [RouterModule]\n\n} )\n\nexport class DoctorRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { RequestOptions, Headers, Http, URLSearchParams } from \"@angular/http\";\nimport { Doctor } from \"./doctor\";\nimport { Appointment } from \"../model/appointment\";\nimport { Hours } from \"../model/hours\";\nimport { Day } from \"../model/day\";\nimport { Observable } from \"rxjs\";\nimport { CommonService } from \"../common/common_service\"\nimport { LocalTime } from \"js-joda\";\nimport { UserFile } from \"../model/userfile\";\n\n\n\n@Injectable()\n\nexport class DoctorService {\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n\n    constructor( private http: Http, private commonService: CommonService ) {\n\n    }\n\n    /* save doctor method save the new doctor object using the signup method \n     * of the backend */\n\n    public saveDoctor( doctor: Doctor ) {\n        let url = \"/api/private/dr/signup\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n\n    /*savedoctorobject method save the existing doctor object in the database */\n\n    public saveDoctorObject( doctor: Doctor ) {\n        let url = \"/api/private/dr/save\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n\n\n\n    public docAppointmentSetup( doctor: Doctor ) {\n        let url = \"/api/private/dr/appointment/setup\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n    public getAllState() {\n        let url = \"/api/public/dr/state/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    public addHolidays( doctor: Doctor ) {\n        let url = \"/api/private/dr/holiday/add\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n\n    public getAllCities( stateId: string ) {\n        let url = \"/api/public/dr/city/all\";\n        let param = new URLSearchParams();\n        param.set( \"stateId\", stateId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllDegree() {\n        let url = \"/api/public/dr/degree/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllSpeciality() {\n        let url = \"/api/public/dr/speciality/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllHoliday() {\n        let url = \"/api/public/dr/holiday/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getDoctorPublicInfo() {\n        let url = \"/api/public/dr/get/doctor\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    public makeAppointment( appointment: Appointment ) {\n        let url = \"/api/private/dr/appointment/make\";\n        return this.http.post( url, appointment, this.commOptions );\n    }\n\n    public getDocAppointment() {\n        let url = \"/api/private/dr/get/appointment\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    /**getAppointmentOfPeriod method gets the appointment between a period and it sends result in pages\n     * format pageno and pagesize are get by parameter */\n\n    public getAppointmentOfPeriod( from: Date, to: Date, pageNo: number, pageSize: number ) {\n        let url = \"/api/private/dr/get/appointment/period\";\n        let param = new URLSearchParams();\n        param.set( \"from\", from.getTime().toString() );\n        param.set( \"to\", to.getTime().toString() );\n        param.set( \"pageNo\", pageNo.toString() );\n        param.set( \"pageSize\", pageSize.toString() );\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n\n\n    }\n\n\n    /** getholidayofperiod method get the list of holidays between a time period */\n\n    public getHolidayOfPeriod( from: Date, to: Date ) {\n        let url = \"/api/private/dr/get/holiday/period\";\n        let param = new URLSearchParams();\n        param.set( \"from\", from.getTime().toString() );\n        param.set( \"to\", to.getTime().toString() );\n\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n\n    }\n\n    /** getTodayAppointment get the appointment of today it takes two parameter pageno and pagesize \n     *  and send that page full of today's appointment */\n\n    public getTodayAppointment( pageNo: number, pageSize: number ) {\n        let url = \"/api/private/dr/get/appointment/today\";\n\n        let param = new URLSearchParams();\n        param.set( \"pageNo\", pageNo.toString() );\n        param.set( \"pageSize\", pageSize.toString() );\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** saveWorkingDays method save the workingDays value to doctor object in database*/\n\n    public saveWorkingDays( workingDays: Day[] ) {\n        let url = \"/api/private/dr/save/workingdays\";\n        let doctor: Doctor = new Doctor();\n\n        doctor.workingDays = workingDays;\n\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n\n\n    //    /** fromLocalTimeToString method takes array of string which contain two string value one is for hour \n    //     *  and another is for minute and resturn the combined string value of time where hour and minute are \n    //     *  seperated by :*/\n    //    fromLocalTimeToString( time: string[] ) {\n    //\n    //        let result: string;\n    //\n    //        // if its less than 10 its single digit so we add 0 before it \n    //        if ( parseInt( time[0] ) < 10 ) {\n    //\n    //\n    //\n    //            if ( parseInt( time[1] ) == 0 ) {\n    //                result = \"0\" + time[0] + \":\" + \"0\" + time[1];\n    //\n    //            }\n    //            else {\n    //                result = \"0\" + time[0] + \":\" + time[1];\n    //\n    //            }\n    //\n    //        }\n    //        else {\n    //            // if its 0 its single digit 0 so we add 0 so it become 00\n    //            if ( parseInt( time[1] ) == 0 ) {\n    //                result = time[0] + \":\" + \"0\" + time[1];\n    //            }\n    //\n    //            else {\n    //                result = time[0] + \":\" + time[1];\n    //            }\n    //\n    //        }\n    //\n    //        return result;\n    //    }\n\n\n    /** getTimeLabel method takes the array of string which is got from database and convert it to \n     *  time lable according to hourListOptions file */\n\n    //    getTimeLabel( hour: string[] ) {\n    //        return this.commonService.getTimeLabel( this.fromLocalTimeToString( hour ) );\n    //    }\n\n\n    /** patient exist method takes patient id as parameter and checks if the patient exist in \n     *  database or not */\n    patientExist( patientId: string ) {\n        let url: string = \"/api/private/dr/patient/exist\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"patientId\", patientId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** getPatientData method takes the patient id as a parameter and return the patient object \n     *  as a result */\n\n    getPatientData( patientId: string ) {\n        let url: string = \"/api/public/get/patient\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"patientId\", patientId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** getDocUsingId method takes the doctor id as the parameter and return the doctor object */\n\n    getDocUsingId( docId: string ) {\n\n        let url: string = \"/api/public/dr/get/profile\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"docId\", docId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n\n\n    }\n\n    /* deleteHoliday delete the holiday from the list of holidays it takes date as parameter \n     *@param Date (date to be deleted)*/\n    deleteHoliday( date: Date ) {\n        let url = \"/api/private/dr/delete/holiday\";\n\n\n        return this.http.post( url, date, this.commOptions );\n\n\n    }\n\n\n    /**saveDoctorProfileImage method takes the UserFile object and \n     * save the image as profile image for the user */\n\n    saveDoctorProfileImage( image: UserFile ) {\n        let url = \"/api/private/dr/change/profileimg\";\n\n        return this.http.post( url, image, this.commOptions );\n    }\n\n\n    /** getappointment method takes appointmentid as parameter and return the appointment\n     *  object for that appointment if the doctor is authorised to get the information \n     *  else return null*/\n\n    getAppointment( appointmentId: string ) {\n        let url = \"/api/private/dr/get/appointment/id\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"appointmentId\", appointmentId );\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n    }\n\n    /** savePrescription method takes the appointment object with prescription and save it \n     *  into the database \n     *  */\n    savePrescription( appointment: Appointment ) {\n        let url = \"/api/private/dr/save/prescription\";\n\n        return this.http.post( url, appointment, this.commOptions );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_service.ts","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\nimport { Doctor } from \"./doctor\";\nimport { State } from \"../model/state\";\nimport { City } from \"../model/city\";\nimport { Degree } from \"../model/degree\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Speciality } from \"../model/speciality\";\nimport { FormResult } from \"../model/formresult\";\nimport {MatSnackBar} from \"@angular/material\";\nimport {Router} from \"@angular/router\";\n\n\n\n@Component( {\n    selector: \"doc-signup\",\n    templateUrl: \"./html/doctor_signup.html\",\n    styleUrls: [\"./css/doctor_signup.css\"]\n} )\nexport class DoctorSignup {\n\n    /* list of form group */\n    qualificationForm: FormGroup;\n    personalForm: FormGroup;\n    contactForm: FormGroup;\n\n\n    result: FormResult = new FormResult();\n\n    // doctor objcet to be forward to save \n    doctor: Doctor = new Doctor();\n\n\n\n    // List of states for the select field\n    states: State[];\n\n    // list of cities for the select field \n    cities: City[];\n\n\n\n\n    //list of qualification \n    qualificationOptions: Degree[];\n\n    // list of specialities\n    specialities: Speciality[];\n\n    /* initialization of form controls start here */\n\n    name: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n\n    about: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.maxLength( 256 )\n\n    ] );\n\n\n    qualifications: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n\n    specialitiesControl: FormControl = new FormControl( \"\", [\n\n    ] );\n\n    address: FormControl = new FormControl( \"\", [\n        Validators.required\n\n    ] );\n\n    address2: FormControl = new FormControl( \"\" );\n\n    state: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n    city: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n    phoneno: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.minLength( 10 )\n    ] );\n\n    /* initialization of form control ends here */\n\n\n    constructor( private _formBuilder: FormBuilder, private doctorService: DoctorService ,\n    private matSnackBar:MatSnackBar , private router:Router) { }\n\n\n\n    ngOnInit() {\n\n        this.getState();\n\n        this.getAllDegree();\n\n        this.getAllSpeciality();\n\n        this.personalForm = this._formBuilder.group( {\n            name: this.name,\n            about: this.about\n        } );\n\n        this.qualificationForm = this._formBuilder.group( {\n\n            qualifications: this.qualifications,\n            specialities: this.specialitiesControl\n        } );\n\n        this.contactForm = this._formBuilder.group( {\n            address: this.address,\n            address2: this.address2,\n            state: this.state,\n            city: this.city,\n            phoneno: this.phoneno\n        } );\n\n    }\n\n    /* getAddDegree get list of the degress from the database and populate it into \n     * the form select field */\n    getAllDegree() {\n        this.doctorService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.qualificationOptions = data.json();\n            }\n        } );\n    }\n\n\n    /*getAllSpeciality get list of all the speciality form the database and populate into\n     * the form select field */\n\n    getAllSpeciality() {\n        this.doctorService.getAllSpeciality().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.specialities = data.json();\n            }\n        } );\n    }\n\n    /*getState method get all the state from the database and populate it into the \n     *form select field */\n\n    getState() {\n        this.doctorService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n\n    /* getCitites method get all the cityies for a particular state selected by the user it \n     * takes one parameter which is stateid */\n    getCitites( stateId: string ) {\n        this.doctorService.getAllCities( stateId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.cities = data.json();\n            }\n        } );\n    }\n\n\n    /*     it execute when user select a state from the state list and change the list \n     *     of cities to all the cities for that perticular state */\n    stateSelected() {\n        let stateId: string = this.contactForm.value.state;\n        this.getCitites( stateId );\n    }\n\n\n\n    /* execute when user submit the form by clicking the save button in the last \n     * step of the form */\n    submit() {\n        // put all the value in the doctor object \n        this.doctor.name = this.personalForm.value.name;\n        this.doctor.about = this.personalForm.value.about;\n        this.doctor.degrees = this.qualificationForm.value.qualifications;\n        this.doctor.specialities = this.qualificationForm.value.specialities;\n        this.doctor.addrLineOne = this.contactForm.value.address;\n        this.doctor.addrLineTwo = this.contactForm.value.address2;\n        this.doctor.state = this.contactForm.value.state;\n        this.doctor.city = this.contactForm.value.city;\n        this.doctor.phoneno = this.contactForm.value.phoneno;\n\n        console.log(this.doctor);\n        this.doctorService.saveDoctor( this.doctor ).subscribe(( data ) => {\n            console.log(data);\n            if ( data != undefined ) {\n                this.result = data.json();\n                if(this.result.result){\n                    this.matSnackBar.open(\"SignUp Completed\",\"Done\",{\n                        duration:3000\n                    });\n                    this.router.navigateByUrl(\"/dr/home\");\n                    \n                }\n                else if(this.result.error){\n                    this.matSnackBar.open(this.result.message,\"Error\",{\n                        duration:3000\n                    });\n                }\n            }\n        } );\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_signup.ts","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatSnackBar } from \"@angular/material\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Appointment } from \"../model/appointment\";\nimport { Prescription } from \"../model/prescription\";\nimport { FormResult } from \"../model/formresult\";\nimport { FormBuilder, FormGroup, FormControl, Validator } from \"@angular/forms\";\n\n\n@Component( {\n    selector: \"doc-write-prescription\",\n    templateUrl: \"./html/doctor_write_prescription.html\"\n} )\nexport class DoctorWritePrescription {\n\n    appointmentId: string;\n\n    appointment: Appointment = new Appointment();\n\n    symptoms: FormControl = new FormControl( \"\", [] );\n\n    prescription: FormControl = new FormControl( \"\", [] );\n\n    prescriptionForm: FormGroup;\n\n\n    constructor( @Inject( MAT_DIALOG_DATA ) public data: any, private doctorService: DoctorService,\n        private formBuilder: FormBuilder, private matSnackBar: MatSnackBar ) {\n\n\n    }\n\n\n    ngOnInit() {\n        this.appointmentId = this.data.appointmentId;\n        this.getAppointment( this.appointmentId );\n\n\n\n        this.prescriptionForm = this.formBuilder.group( {\n            \"symptoms\": this.symptoms,\n            \"prescription\": this.prescription\n        } );\n\n    }\n\n    setValue() {\n        this.symptoms.setValue( this.appointment.prescription.symptoms );\n        this.prescription.setValue( this.appointment.prescription.prescription );\n    }\n\n    getAppointment( appointmentId: string ) {\n\n        this.doctorService.getAppointment( appointmentId ).subscribe(( data ) => {\n\n            if ( data != undefined ) {\n                this.appointment = data.json();\n                this.setValue();\n            }\n\n        } );\n\n    }\n\n\n\n    save() {\n\n        let prescription: Prescription = new Prescription();\n\n        prescription.symptoms = this.prescriptionForm.value.symptoms;\n        prescription.prescription = this.prescriptionForm.value.prescription;\n\n        this.appointment.prescription = prescription;\n\n        console.log( this.appointment );\n\n        this.doctorService.savePrescription( this.appointment ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                let formResult: FormResult = data.json();\n\n                if ( formResult.result ) {\n                    this.matSnackBar.open( formResult.message, \"Saved\", {\n                        duration: 3000\n                    } );\n                }\n\n                else if ( formResult.error ) {\n                    this.matSnackBar.open( formResult.message, \"Error\", {\n                        duration: 3000\n                    } );\n                }\n            }\n        } );\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/dr/doctor_write_prescription.ts","module.exports = \"<mat-progress-bar *ngIf=\\\"progress\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n\\n<form [formGroup]=\\\"workingHoursForm\\\" >\\n\\n\\n<!--  first row start here  -->\\t\\n\\t<div class=\\\"day-container\\\">\\n\\t\\n\\t\\n          <h4>Monday</h4>\\t \\n\\t\\n\\n     \\n     \\t <mat-slide-toggle [checked]=\\\"getADay(mondayCode).checked\\\" color=\\\"primary\\\"  formControlName=\\\"mondayControl\\\" id={{mondayCode}} name=\\\"Monday\\\"  aria-labelledby=\\\"Close\\\"\\n\\n     \\t  (change)=\\\"checked($event)\\\">{{getADay(mondayCode).dayStatus}}</mat-slide-toggle>\\n     \\n\\t\\n\\t<div  *ngIf=\\\"getADay(mondayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div  *ngIf=\\\"mondayStartAt.value!=24 && mondayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div class=\\\"time-list\\\"   *ngFor=\\\" let hour of getADay(mondayCode).hours;let x =index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t\\n\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t    <label>To</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label><i  (click)=\\\"hourDelete(mondayCode,x)\\\" class=\\\"material-icons\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\n    \\t<div *ngIf=\\\"mondayCloseAt.value!=24\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"mondayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(mondayStartAt.value,mondayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"mondayStartAt.value!=24\\\"  >\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"mondayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(mondayCloseAt.value,mondayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"mondayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"mondayStartAt.value!=24 && mondayCloseAt.value!=24\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(mondayStartAt.value,mondayCloseAt.value,mondayAppointmentNo.value,mondayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t</div>\\n\\t<!-- first row ends here  -->\\n\\t\\n\\t<!-- second row start here  -->\\n\\t<div class=\\\"day-container\\\"> \\n\\t\\n\\t\\t\\t\\n          <h4>Tuesday</h4>\\t \\n\\t\\n\\n     \\n     \\t <mat-slide-toggle [checked]=\\\"getADay(tuesdayCode).checked\\\" color=\\\"primary\\\"  formControlName=\\\"tuesdayControl\\\" id={{tuesdayCode}} name=\\\"Tuesday\\\" (change)=\\\"checked($event)\\\">\\n     \\t {{getADay(tuesdayCode).dayStatus}}\\n     \\t </mat-slide-toggle>\\n     \\n\\t\\n\\t<div  *ngIf=\\\"getADay(tuesdayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div   *ngIf=\\\"tuesdayStartAt.value!=24 && tuesdayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div  class=\\\"time-list\\\"  *ngFor=\\\" let hour of getADay(tuesdayCode).hours;let x =index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t \\n\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t \\t<label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t<label><i class=\\\"material-icons\\\" (click)=\\\"hourDelete(tuesdayCode,x)\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\t\\t\\t<div *ngIf=\\\"tuesdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"tuesdayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(tuesdayStartAt.value,tuesdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"tuesdayStartAt.value!=24\\\"  class=\\\"col-lg-4\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"tuesdayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(tuesdayCloseAt.value,tuesdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"tuesdayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"tuesdayStartAt.value!=24 && tuesdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(tuesdayStartAt.value,tuesdayCloseAt.value,tuesdayAppointmentNo.value,tuesdayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t<!-- second row ends here  -->\\n\\t\\n\\t<!-- third row start here  -->\\n\\t\\n\\t<div class=\\\"day-container\\\">\\n\\t\\n\\t\\t\\t\\n          <h4>Wednesday</h4>\\t \\n\\t\\n\\n     \\n     \\t <mat-slide-toggle [checked]=\\\"getADay(wednesdayCode).checked\\\" color=\\\"primary\\\" formControlName=\\\"wednesdayControl\\\" id={{wednesdayCode}} name=\\\"Wednesday\\\" (change)=\\\"checked($event)\\\">\\n     \\t {{getADay(wednesdayCode).dayStatus}}\\n     \\t </mat-slide-toggle>\\n    \\n\\t\\n\\t<div  *ngIf=\\\"getADay(wednesdayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div   *ngIf=\\\"wednesdayStartAt.value!=24 && wednesdayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div  class=\\\"time-list\\\"  *ngFor=\\\" let hour of getADay(wednesdayCode).hours;let x =index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t \\n\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t<label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t<label><i class=\\\"material-icons\\\" (click)=\\\"hourDelete(wednesdayCode,x)\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\t\\t\\t<div *ngIf=\\\"wednesdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"wednesdayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(wednesdayStartAt.value,wednesdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"wednesdayStartAt.value!=24\\\"  class=\\\"col-lg-4\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"wednesdayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(wednesdayCloseAt.value,wednesdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"wednesdayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"wednesdayStartAt.value!=24 && wednesdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(wednesdayStartAt.value,wednesdayCloseAt.value,wednesdayAppointmentNo.value,wednesdayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\t\\t\\t\\t\\n\\t\\n\\t</div>\\n\\t\\n<!-- \\tthird row ends here  -->\\n\\n<!-- fourth row start here  -->\\n<div class=\\\"day-container\\\">\\n\\n\\t\\t\\n          <h4>Thursday</h4>\\t \\n\\t\\n\\n     \\n     \\t <mat-slide-toggle [checked]=\\\"getADay(thursdayCode).checked\\\" color=\\\"primary\\\" formControlName=\\\"thursdayControl\\\" id={{thursdayCode}} name=\\\"Thursday\\\" (change)=\\\"checked($event)\\\">\\n     \\t {{getADay(thursdayCode).dayStatus}}\\n     \\t </mat-slide-toggle>\\n     \\n\\t<div  *ngIf=\\\"getADay(thursdayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div   *ngIf=\\\"thursdayStartAt.value!=24 && thursdayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div class=\\\"time-list\\\"  *ngFor=\\\" let hour of getADay(thursdayCode).hours;let x =index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t\\n\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label><i class=\\\"material-icons\\\" (click)=\\\"hourDelete(thursdayCode,x)\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\t\\t\\t<div *ngIf=\\\"thursdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"thursdayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(thursdayStartAt.value,thursdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"thursdayStartAt.value!=24\\\"  class=\\\"col-lg-4\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"thursdayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(thursdayCloseAt.value,thursdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"thursdayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"thursdayStartAt.value!=24 && thursdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(thursdayStartAt.value,thursdayCloseAt.value,thursdayAppointmentNo.value,thursdayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\n</div>\\n<!-- fourth row ends here  -->\\n\\n\\n<!-- fifth row start here  -->\\n<div class=\\\"day-container\\\">\\n\\n\\t\\t\\t\\n          <h4>Friday</h4>\\t \\n\\t\\n\\n     \\n     \\t <mat-slide-toggle [checked]=\\\"getADay(fridayCode).checked\\\" color=\\\"primary\\\" formControlName=\\\"fridayControl\\\" id={{fridayCode}} name=\\\"Friday\\\" (change)=\\\"checked($event)\\\">\\n     \\t {{getADay(fridayCode).dayStatus}}\\n     \\t </mat-slide-toggle>\\n     \\n\\t\\n\\t<div  *ngIf=\\\"getADay(fridayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div  *ngIf=\\\"fridayStartAt.value!=24 && fridayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div   class=\\\"time-list\\\"  *ngFor=\\\" let hour of getADay(fridayCode).hours;let x =index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t \\n\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<label><i class=\\\"material-icons\\\" (click)=\\\"hourDelete(fridayCode,x)\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\t\\t\\t<div *ngIf=\\\"fridayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"fridayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(fridayStartAt.value,fridayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"fridayStartAt.value!=24\\\"  class=\\\"col-lg-4\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"fridayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(fridayCloseAt.value,fridayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"fridayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"fridayStartAt.value!=24 && fridayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(fridayStartAt.value,fridayCloseAt.value,fridayAppointmentNo.value,fridayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\n</div>\\n<!-- fifth row ends here -->\\n\\n<!-- sixth row start here  -->\\n<div class=\\\"day-container\\\">\\n\\n\\n\\t\\t\\t\\n\\t\\t\\t\\n          <h4>Saturday</h4>\\t \\n\\t\\n\\n    \\n     \\t <mat-slide-toggle [checked]=\\\"getADay(saturdayCode).checked\\\" color=\\\"primary\\\" formControlName=\\\"saturdayControl\\\" id={{saturdayCode}} name=\\\"Saturday\\\" (change)=\\\"checked($event)\\\">\\n     \\t {{getADay(saturdayCode).dayStatus}}\\n     \\t </mat-slide-toggle>\\n     \\n\\t\\n\\t<div  *ngIf=\\\"getADay(saturdayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div   *ngIf=\\\"saturdayStartAt.value!=24 && saturdayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div  class=\\\"time-list\\\" *ngFor=\\\" let hour of getADay(saturdayCode).hours;let x =index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t \\n\\t\\t\\n\\t\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t \\t<label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\t<label><i class=\\\"material-icons\\\" (click)=\\\"hourDelete(saturdayCode,x)\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\t\\t\\t<div *ngIf=\\\"saturdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"saturdayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(saturdayStartAt.value,saturdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"saturdayStartAt.value!=24\\\"  class=\\\"col-lg-4\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"saturdayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(saturdayCloseAt.value,saturdayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"saturdayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"saturdayStartAt.value!=24 && saturdayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(saturdayStartAt.value,saturdayCloseAt.value,saturdayAppointmentNo.value,saturdayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\t\\t\\t\\n\\t\\t\\n\\n\\n\\n</div>\\n<!-- sixth row ends here  -->\\n\\n<!-- seventh row start here  -->\\n<div class=\\\"day-container\\\">\\n\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n          <h4>Sunday</h4>\\t \\n\\t\\n\\t\\n     \\t <mat-slide-toggle [checked]=\\\"getADay(sundayCode).checked\\\" color=\\\"primary\\\" formControlName=\\\"sundayControl\\\" id={{sundayCode}} name=\\\"Sunday\\\" (change)=\\\"checked($event)\\\">\\n     \\t {{getADay(sundayCode).dayStatus}}\\n     \\t </mat-slide-toggle>\\n     \\n\\t\\n\\t<div  *ngIf=\\\"getADay(sundayCode).checked\\\">\\n\\t\\n\\t\\n\\t<div   *ngIf=\\\"sundayStartAt.value!=24 && sundayCloseAt.value!=24\\\">\\n\\t\\n\\t\\t\\t<div class=\\\"time-list\\\"  *ngFor=\\\" let hour of getADay(sundayCode).hours;let x = index\\\">\\n\\t\\n\\t\\n\\t\\t\\t\\t \\n\\t\\t\\n\\t\\t\\t\\t<label>{{getTimeLabel(hour.startAt)}}</label>\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t<label>{{getTimeLabel(hour.closeAt)}}</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\n\\t\\t\\t\\t <label>{{ hour.maxPatientNo}} Appointments</label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label><i class=\\\"material-icons\\\" (click)=\\\"hourDelete(sundayCode,x)\\\">cancel</i></label>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t\\t\\n\\t\\t\\n    <div class=\\\"add-hour-form\\\">\\n    \\n    \\t\\t\\t\\t<div *ngIf=\\\"sundayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-select  formControlName=\\\"sundayStartAt\\\" placeholder=\\\"OpenAt\\\" (change)=\\\"hourSelected(sundayStartAt.value,sundayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}}>{{hour.label}}</mat-option>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t   </mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t<div  *ngIf=\\\"sundayStartAt.value!=24\\\"  class=\\\"col-lg-4\\\">\\n\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"sundayCloseAt\\\" placeholder=\\\"CloseAt\\\" (change)=\\\"hourSelected(sundayCloseAt.value,sundayCode)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hourListOption\\\" value={{hour.value}} >{{hour.label}}</mat-option>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input formControlName=\\\"sundayAppointmentNo\\\" matInput type=\\\"text\\\" placeholder=\\\"No Of Appointments\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div *ngIf=\\\"sundayStartAt.value!=24 && sundayCloseAt.value!=24\\\" class=\\\"col-lg-4\\\">\\n\\t\\t\\t\\n\\t\\t\\t      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addDayHour(sundayStartAt.value,sundayCloseAt.value,sundayAppointmentNo.value,sundayCode)\\\">Add Hours</button>\\n\\t\\t\\n\\t\\t</div>\\n    \\n    \\n    </div>\\n\\t\\n\\t</div>\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\n\\n</div>\\n\\n<!-- seventh row ends here  -->\\n\\n\\n\\n\\n<br>\\n\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"submit()\\\" >Save</button>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/add_hours.html\n// module id = ../../../../../src/app/dr/html/add_hours.html\n// module chunks = main","module.exports = \"\\n\\n\\n<h3 class=\\\"text-center\\\">Appointment Fee </h3>\\n\\n<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"appointmentForm\\\">\\n\\n\\t\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput   type=\\\"text\\\" formControlName=\\\"feeAmount\\\" placeholder=\\\"Enter Fee Amount\\\" >\\n\\t\\t\\t<p matSuffix>Rs</p>\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n<!-- \\t<div class=\\\"form-group\\\"> -->\\n<!-- \\t\\t<mat-form-field> -->\\n<!-- \\t\\t<input matInput  type=\\\"text\\\" formControlName=\\\"maxAppointments\\\" placeholder=\\\"No Of Max Appointment In A Day\\\"> -->\\n<!-- \\t\\t</mat-form-field> -->\\n\\t\\n<!-- \\t</div> -->\\n\\t\\n\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Submit</button>\\n\\t\\n\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_appointment_setup.html\n// module id = ../../../../../src/app/dr/html/doctor_appointment_setup.html\n// module chunks = main","module.exports = \"<mat-progress-bar *ngIf=\\\"progress\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n\\n<h3 class=\\\"text-center\\\">Choose a Time interval</h3>\\n<form [formGroup]=\\\"dateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"from\\\"  [matDatepicker]=\\\"pickerfrom\\\" placeholder=\\\"From\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerfrom\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker touchUi=\\\"true\\\" #pickerfrom></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"to\\\" [matDatepicker]=\\\"pickerto\\\" placeholder=\\\"To\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerto\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker touchUi=\\\"true\\\" #pickerto></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Show</button>\\n\\t</div>\\n\\n\\n</form>\\n\\n\\n\\n<div id=\\\"grid-container\\\">\\n\\n<div  *ngFor=\\\"let appointment of appointments\\\">\\n\\n\\n<mat-card>\\n\\n\\t<mat-card-header>\\n\\t\\n\\t\\t<mat-card-title> <h5>Date:{{appointment.date*1000|date:'mediumDate'}}</h5></mat-card-title>\\n\\t\\t\\n\\t</mat-card-header>\\n\\n\\t<mat-card-content>\\n\\t\\n\\t\\t\\t <h6>PatientId :{{appointment.patientId}}</h6>\\n\\t         <h6>Patient Name:{{appointment.patientName}}</h6>\\n\\t         <h6>Patient PhoneNo:{{appointment.patientPhoneNo}}</h6>\\n\\t         <h5>Time- {{commonService.getTimeLabel(appointment.hours.startAt)}} To \\n      \\t\\t   {{commonService.getTimeLabel(appointment.hours.closeAt)}}\\n      \\t\\t   \\n      \\t\\t</h5>\\n\\t\\n\\t</mat-card-content>\\n\\t\\n\\t\\n\\n</mat-card>\\n\\n\\n\\t\\n\\t\\n\\t\\n</div>\\n\\n</div>\\n\\n<mat-paginator [length]=\\\"totalElements\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"nextPage($event)\\\">\\n\\n\\n\\n</mat-paginator>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_appointment_show.html\n// module id = ../../../../../src/app/dr/html/doctor_appointment_show.html\n// module chunks = main","module.exports = \"<h3 class=\\\"text-center\\\">Add Holiday </h3>\\n<form [formGroup]=\\\"holidayForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t  <input matInput [min]=\\\"currentDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"holidayDate\\\">\\n\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t  <mat-datepicker #picker></mat-datepicker>\\n\\t\\t</mat-form-field>\\n\\t\\t<mat-error *ngIf=\\\"holidayDate.hasError('matDatepickerMin')\\\">You Can't Add Holiday In Past</mat-error>\\n\\t</div>\\n\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"accent\\\" (click)=\\\"addHoliday()\\\" type=\\\"button\\\">Add Date</button>\\n\\t</div>\\n\\t\\n\\t\\n\\t<table class=\\\"table\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>Date</th>\\n\\t\\t\\t\\t<th>Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let date of holidayDates;let i=index\\\">\\n\\t\\t\\t\\t<td>{{date.getMonth()+1}}/{{date.getDate()}}/{{date.getFullYear()}}</td>\\n\\t\\t\\t\\t<td><button mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"deleteDate(i)\\\">\\n\\t\\t\\t\\t<i class=\\\"material-icons\\\">delete</i></button></td>\\n\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t\\n\\t\\t</tbody>\\n\\t</table>\\n\\t\\n\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_holiday.html\n// module id = ../../../../../src/app/dr/html/doctor_holiday.html\n// module chunks = main","module.exports = \"<h3 class=\\\"text-center\\\">Choose A Time Interval</h3>\\n<form [formGroup]=\\\"dateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"from\\\"  [matDatepicker]=\\\"pickerfrom\\\" placeholder=\\\"From\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerfrom\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickerfrom></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"to\\\" [matDatepicker]=\\\"pickerto\\\" placeholder=\\\"To\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerto\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickerto></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Show</button>\\n\\t</div>\\n\\n\\n</form>\\n\\n\\n\\n\\n<div class=\\\"content-center\\\">\\n\\n\\n\\t\\n<h4 class=\\\"text-center\\\">List Of All Holidays</h4>\\n\\n<mat-list *ngFor=\\\"let date of holidayList\\\">\\n\\n\\n\\t<mat-list-item>{{date*1000|date:\\\"longDate\\\"}}<button mat-button (click)=\\\"deleteHoliday(date)\\\"> <i class=\\\"material-icons\\\">delete</i></button></mat-list-item>\\n\\n</mat-list>\\n\\t\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_holiday_show.html\n// module id = ../../../../../src/app/dr/html/doctor_holiday_show.html\n// module chunks = main","module.exports = \"\\n<mat-toolbar color=\\\"primary\\\">\\n\\n<button mat-icon-button (click)=\\\"sidenav.open()\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n\\n<button mat-button routerLink=\\\"/dr/home\\\"><span>Edr</span>\\n</button>\\n\\n\\n<button mat-button (click)=\\\"signOut()\\\">SignOut</button>\\n\\n\\n</mat-toolbar>\\n\\n\\n<mat-sidenav-container >\\n\\n  <mat-sidenav #sidenav>\\n  \\n  \\t<mat-nav-list>\\n  \\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"dr/panel\\\">Information Panel</a>\\n  \\t\\t\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-divider></mat-divider>\\n  \\t\\n  \\t\\t<h3 mat-subheader>Appointment</h3>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/appointment\\\">Appointment Fee</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t <a class=\\\"list-group-item\\\" routerLink=\\\"dr/add/hours\\\">Add Hours</a>\\n  \\t\\t\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t<a class=\\\"list-group-item\\\"  routerLink=\\\"dr/make/appointment\\\" >Make An Appointment</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/show/appointment\\\">Show All Appointment</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\n  \\t\\t<h3 mat-subheader>Holiday</h3>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t\\n  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"dr/holiday\\\">Add Holiday</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t\\n  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"dr/show/holiday\\\" >Show All Holiday</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\n  \\t\\t<h3 mat-subheader>Profile</h3>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t<a routerLink=\\\"profile/edit\\\">Edit Profile </a>\\n  \\t\\t</mat-list-item>\\n  \\t\\n  \\t</mat-nav-list>\\n  \\n  \\n<!--      <div class=\\\"col-md-4\\\"> -->\\n\\n<!-- \\t<div class=\\\"list-group no-style\\\"> -->\\n<!-- \\t\\t    <div> -->\\n<!-- \\t\\t  \\t<a class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" href=\\\"#appointmentMenu\\\"> -->\\n<!-- \\t\\t  \\tAppointment <i class=\\\"caret\\\"></i></a> -->\\n<!-- \\t\\t    <div class=\\\"collapse\\\" id=\\\"appointmentMenu\\\"> -->\\n<!-- \\t\\t    \\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/appointment\\\">Appointment Setup</a> -->\\n<!-- \\t\\t    \\t  <a class=\\\"list-group-item\\\" routerLink=\\\"dr/add/hours\\\">Add Hours</a> -->\\n<!-- \\t\\t    \\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/make/appointment\\\" >Make An Appointment</a> -->\\n<!-- \\t\\t    \\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/show/appointment\\\">Show All Appointment</a> -->\\n<!-- \\t\\t    </div> -->\\n\\t\\t    \\n<!-- \\t\\t  </div> -->\\n\\t\\t  \\n<!-- \\t\\t  <div> -->\\n<!-- \\t\\t    <a class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" href=\\\"#holidayMenu\\\"> -->\\n<!-- \\t\\t    Holiday <i class=\\\"caret\\\"></i></a> -->\\n\\t\\t    \\n<!-- \\t\\t    <div class=\\\"collapse\\\" id=\\\"holidayMenu\\\"> -->\\n<!-- \\t\\t    \\t<a class=\\\"list-group-item\\\" routerLink=\\\"dr/holiday\\\">Add Holiday</a> -->\\n<!-- \\t\\t    \\t<a class=\\\"list-group-item\\\" routerLink=\\\"dr/show/holiday\\\" >Show All Holiday</a> -->\\n<!-- \\t\\t    </div> -->\\n<!-- \\t\\t  </div> -->\\n\\t\\t  \\n<!-- \\t\\t  <div class=\\\"list-group-item\\\"> -->\\n<!-- \\t\\t    <a class=\\\"nav-link\\\" routerLink=\\\"dr/panel\\\">Information Panel</a> -->\\n\\t\\t   \\n<!-- \\t\\t  </div> -->\\n\\t\\t  \\n\\t\\t  \\n\\t\\t  \\n<!-- \\t</div> -->\\n\\n<!-- </div> -->\\n  </mat-sidenav>\\n\\n\\n  <!-- primary content -->\\n  \\n  \\n  \\n\\t\\t\\n\\t<router-outlet class=\\\"my-content\\\"></router-outlet>\\n\\n</mat-sidenav-container>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_home.html\n// module id = ../../../../../src/app/dr/html/doctor_home.html\n// module chunks = main","module.exports = \"<h3 class=\\\"text-center\\\">Make An Appointment</h3>\\n\\n\\n\\n\\n<mat-tab-group (selectedTabChange)=\\\"tabChanged($event)\\\">\\n  <mat-tab  label=\\\"Using Patient Id\\\">\\n   \\t\\t\\n   \\t\\t<form [formGroup]=\\\"appointmentForm\\\"  (ngSubmit)=\\\"submit()\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<input matInput (change)=\\\"patientIdExist()\\\" type=\\\"text\\\" formControlName=\\\"patientId\\\"  placeholder=\\\"Enter Patient Id\\\">\\n\\t\\t<mat-error *ngIf=\\\"patientId.hasError('required')\\\" class=\\\"text-capitalize\\\">Patient Id is <strong>Required</strong></mat-error>\\n\\t\\t\\n\\t\\t<mat-error *ngIf=\\\"patientId.hasError('noPatient')\\\">No Patient Exist With This Id</mat-error>\\n\\t\\t\\n\\t   <mat-error *ngIf=\\\"patientId.hasError('email')\\\"  class=\\\"text-capitalize\\\">Enter A Valid Email </mat-error>\\n\\t   \\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t       <input matInput (dateChange)=\\\"dateSelected($event)\\\" formControlName=\\\"date\\\" [min]=\\\"today\\\"  [matDatepickerFilter]=\\\"workingDayFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker touchUi=\\\"true\\\" #picker></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t   <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"date.hasError('matDatepickerFilter')\\\" class=\\\"text-capitalize\\\" >\\n\\t\\t\\t\\t\\t Doctor is not available this day</mat-error>\\n\\t\\t\\t\\t\\t <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"date.hasError('required')\\\">Date is <strong>Required</strong></mat-error>\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"timeSlot\\\" placeholder=\\\"Choose A TimeSlot\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hours\\\"  [value]=\\\"hour\\\">\\n\\t       \\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}}\\n\\t       \\t\\t\\t\\t\\t\\tto\\n\\t       \\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t<mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"timeSlot.hasError('required')\\\">Select A TimeSlot</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\n\\n\\n        </form>\\n   \\t\\t\\n  </mat-tab>\\n  <mat-tab label=\\\"Without Patient Id\\\">\\n  \\n  \\n  <form [formGroup]=\\\"appointmentWithoutPatientId\\\" (ngSubmit)=\\\"submitWithoutId()\\\">\\n  \\t\\n  \\t\\t<div class=\\\"form-group\\\">\\n  \\t\\t\\n  \\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Patient Name\\\" formControlName=\\\"patientName\\\">\\n  \\t\\t\\t\\t\\n  \\t<mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"patientName.hasError('required')\\\">Patient Name is <strong>Required</strong></mat-error>\\n  \\t\\t\\t\\t\\n  \\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\n  \\t\\t\\t\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"form-group\\\">\\n  \\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\n  \\t\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Patient Phone No\\\" formControlName=\\\"patientPhoneNo\\\">\\n  <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"patientPhoneNo.hasError('required')\\\">Phone no is <strong>Required</strong></mat-error>\\n  <mat-error class=\\\"text-capitalize\\\" *ngIf=\\\"patientPhoneNo.hasError('minlength')\\\">Phone No should be of 10 digit</mat-error>\\t\\t\\t\\n  \\t\\t\\t</mat-form-field>\\n  \\t\\t\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t                  <input (dateChange)=\\\"dateSelected($event)\\\" matInput [min]=\\\"today\\\" [matDatepickerFilter]=\\\"workingDayFilter\\\" formControlName=\\\"appointmentDate\\\"   [matDatepicker]=\\\"pickertwo\\\" placeholder=\\\"Choose a date\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickertwo\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker touchUi=\\\"true\\\" #pickertwo></mat-datepicker>\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t  <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"date.hasError('matDatepickerFilter')\\\" class=\\\"text-capitalize\\\" >\\n\\t\\t\\t\\t\\t Doctor is not available this day</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t \\n\\t     </div>\\n\\t     \\n\\t     <div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<mat-select  placeholder=\\\"Choose A TimeSlot\\\" formControlName=\\\"appointmentTimeSlot\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let hour of hours\\\"  [value]=\\\"hour\\\">\\n\\t       \\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}}\\n\\t       \\t\\t\\t\\t\\t\\tto\\n\\t       \\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"appointmentTimeSlot.hasError('required')\\\">Select A TimeSlot</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t </div>\\n\\t\\t \\n\\t\\t <div class=\\\"form-group\\\">\\n\\t\\t \\t\\t\\n\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t \\n\\t\\t </div>\\n\\t\\t\\t\\t\\n  \\n  </form>\\n  \\n  </mat-tab>\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_make_appointment.html\n// module id = ../../../../../src/app/dr/html/doctor_make_appointment.html\n// module chunks = main","module.exports = \"<mat-progress-bar *ngIf=\\\"progress\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n\\n<h3 *ngIf=\\\"!showAppointment\\\">There are no appointment today</h3>\\n\\n<div  *ngIf=\\\"showAppointment\\\">\\n\\n\\n\\n<h3 class=\\\"text-center\\\">List of Today's Appointments</h3>\\n\\n\\n\\n\\n<div id=\\\"grid-container\\\">\\n\\n\\n<div   *ngFor=\\\"let appointment of appointments\\\">\\n\\n\\n\\n\\t<mat-card>\\n\\t\\n\\t\\t<div *ngIf=\\\"appointment.prescription.prescription!=null && appointment.prescription.prescription!=''\\\" class=\\\"flex-row\\\">\\n\\t   <mat-card-subtitle>Prescribed</mat-card-subtitle>\\n\\t   <mat-icon  color=\\\"warn\\\" class=\\\"material-icons\\\">done</mat-icon>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<mat-card-header>\\n\\t\\t\\n\\t\\t\\t<mat-card-title> <h5>Date:{{appointment.date*1000|date:'mediumDate'}}</h5> </mat-card-title>\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t</mat-card-header>\\n\\t\\t\\n\\t\\t\\n\\t\\t<mat-card-content>\\n\\t\\t <h6>PatientId {{appointment.patientId}}</h6>\\n\\t\\t<h6>Patient Name:{{appointment.patientName}}</h6>\\n\\t    <h6>Patient PhoneNo:{{appointment.patientPhoneNo}}</h6>\\n\\t\\t<h5>Time: {{commonService.getTimeLabel(appointment.hours.startAt)}} To \\n\\t\\t      \\t\\t   {{commonService.getTimeLabel(appointment.hours.closeAt)}}</h5>\\n\\t\\t</mat-card-content>\\n\\t\\t\\n\\t\\t<mat-card-actions>\\n\\t\\n\\t\\t<button mat-button color=\\\"primary\\\"  (click)=\\\"writePrescription(appointment.appointmentId)\\\">\\n\\t\\t<mat-icon>add</mat-icon> Prescription</button>\\n\\t\\n\\t\\t</mat-card-actions>\\n\\t</mat-card>\\n\\n\\t\\n</div>\\n\\n\\n\\n\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n<mat-paginator [length]=\\\"totalElements\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"nextPage($event)\\\">\\n\\n\\n\\n</mat-paginator>\\n\\n\\n\\n\\n\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_panel.html\n// module id = ../../../../../src/app/dr/html/doctor_panel.html\n// module chunks = main","module.exports = \"<mat-progress-bar *ngIf=\\\"progress\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n\\n\\n<div id=\\\"container\\\">\\n\\n<div id=\\\"left-content\\\">\\n\\n\\t<div id=\\\"profile-img-container\\\" (click)=\\\"upload()\\\">\\n\\t\\n\\t<span id=\\\"img-change-btn\\\"><strong>Click To Change</strong> </span>\\n\\t\\n\\t<img src={{doctor.profileImage.path}} alt=\\\"profile image\\\" height=150px width=150px >\\n\\t\\n\\t</div>\\n\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t<div *ngIf=\\\"appointment\\\" class=\\\"flex-row\\\">\\n\\t\\n\\t\\n\\t\\n\\t<h4>AppointmentFee:</h4>\\n\\t\\t\\t<div>\\n\\t\\t\\t     <p>{{doctor.appointmentFee}}</p>\\n\\t\\t\\t</div>\\n\\t<button mat-button class=\\\"edit\\\" color=\\\"accent\\\" (click)=\\\"appointmentEdit=true; appointment=false\\\">Edit</button>\\n\\t</div>\\n\\t\\n\\t<!-- appointment fee form  start -->\\n\\t\\n\\t<div *ngIf=\\\"appointmentEdit\\\" class=\\\"flex-column\\\">\\n\\t\\n\\t<mat-form-field>\\n\\t\\n\\t\\t<input [(ngModel)]=\\\"doctor.appointmentFee\\\" placeholder=\\\"New Appointment Fee \\\" type=\\\"text\\\" matInput>\\n\\t\\t\\n\\t</mat-form-field>\\n\\t\\n\\t\\n\\t<div class=\\\"flex-row\\\">\\n\\t\\n\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\n\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"appointmentEdit=false; appointment=true; refresh()\\\">Cancel</button>\\n\\t\\t\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t<!-- appointment fee form ends  -->\\n\\t\\n\\t<div *ngIf=\\\"phoneNo\\\" class=\\\"flex-row\\\">\\n\\t\\n\\t<h4>PhoneNo:</h4>\\n\\t\\t\\t<div>\\n\\t\\t\\t     <p>{{doctor.phoneno}}</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t<button mat-button class=\\\"edit\\\" color=\\\"accent\\\" (click)=\\\"phoneNoEdit=true; phoneNo=false\\\">Edit</button>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t<!-- phone no form start  -->\\n\\t<div *ngIf=\\\"phoneNoEdit\\\" class=\\\"flex-column\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t<input [(ngModel)]=\\\"doctor.phoneno\\\" placeholder=\\\"New Phone No\\\" type=\\\"text\\\" matInput>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t<div class=\\\"flex-row\\\">\\n\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\n\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"phoneNoEdit=false; phoneNo=true; refresh()\\\">Cancel</button>\\n\\t\\t</div>\\n\\t\\n\\t</div>\\n\\t\\n\\t<!-- phone no form ends  -->\\n\\t<div *ngIf=\\\"address\\\" class=\\\"flex-row\\\">\\n\\t\\n\\t\\t\\n\\t<h4>Address:</h4>\\n\\t<div>\\n\\t\\n\\t\\t<p>{{doctor.addrLineOne}}</p>\\n\\t\\t<p> {{doctor.city}}</p>\\n\\t\\n\\t</div>\\n\\t<button mat-button class=\\\"edit\\\" color=\\\"accent\\\" (click)=\\\"addressEdit=true; address=false\\\">Edit</button>\\n\\t\\n\\t</div>\\n\\t\\n\\t<!-- address form start here  -->\\n\\t\\n\\t<div *ngIf=\\\"addressEdit\\\" class=\\\"flex-column\\\">\\n\\t\\n\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"doctor.addrLineOne\\\" type=\\\"text\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t    </mat-form-field>\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput [(ngModel)]=\\\"doctor.addrLineTwo\\\" type=\\\"text\\\" name=\\\"address2\\\" placeholder=\\\"Address Line Two\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t\\t\\t   \\t<mat-select placeholder=\\\"State\\\" [(ngModel)]=\\\"doctor.state\\\" (change)=\\\"stateSelected()\\\">\\n\\t\\t\\t                           \\n\\t\\t\\t              <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">\\n\\t\\t\\t                                                {{ state.stateName }}\\n\\t\\t\\t              </mat-option>\\n\\t\\t            </mat-select>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\n\\t\\t\\t\\t    \\n\\t\\t      </mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t\\t\\t   \\t<mat-select placeholder=\\\"City\\\" [(ngModel)]=\\\"doctor.city\\\">\\n\\t\\t\\t                           \\n\\t\\t\\t              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.cityName\\\">\\n\\t\\t\\t                                                {{ city.cityName}}\\n\\t\\t\\t              </mat-option>\\n\\t\\t            </mat-select>\\n\\t\\t            \\n\\t\\t\\t\\t    \\n\\t\\t   \\t\\t\\n\\t\\t      </mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"flex-row\\\">\\n\\t\\t\\t\\n\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\n\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"addressEdit=false; address=true; refresh()\\\">Cancel</button>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\n\\t</div>\\n\\t<!-- address form ends here  -->\\n\\t\\n\\t\\n\\n</div>\\n\\n\\n\\n\\n<div id=\\\"right-content\\\">\\n\\n\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t<div *ngIf=\\\"name\\\" class=\\\"flex-row\\\">\\n\\t\\n\\t<h3>Name : {{doctor.name}}</h3>\\n\\t\\n\\t<button mat-button color=\\\"accent\\\" class=\\\"edit\\\" (click)=\\\"nameEdit=true; name=false\\\">Edit</button>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div *ngIf=\\\"nameEdit\\\" class=\\\"flex-column\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input [(ngModel)]=\\\"doctor.name\\\" type=\\\"text\\\" placeholder=\\\"Enter Name \\\" matInput >\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t\\t<div class=\\\"flex-row\\\">\\n\\t\\t\\n\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\n\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"nameEdit=false; name=true; refresh()\\\">Cancel</button>\\n\\t\\t</div>\\n\\t\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t<div *ngIf=\\\"about\\\" class=\\\"flex-column\\\">\\n\\t\\n\\t\\n\\t\\n\\t<div  class=\\\"flex-row\\\">\\n\\t\\n\\t<h4>About:</h4>\\n\\t\\n\\t<button mat-button color=\\\"accent\\\" (click)=\\\"aboutEdit=true; about=false\\\">Edit</button>\\n\\t\\n\\t</div>\\n\\t\\n\\t<p>{{doctor.about}}</p>\\n\\t\\n\\t</div>\\n\\t\\n\\t<!-- About form star here  -->\\n\\t<div *ngIf=\\\"aboutEdit\\\" class=\\\"flex-column\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<textarea matInput [(ngModel)]=\\\"doctor.about\\\" placeholder=\\\"About Information\\\"></textarea>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t<div class=\\\"flex-row\\\">\\n\\t\\t\\n\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\n\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"aboutEdit=false; about=true; refresh()\\\">Cancel</button>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\n\\t</div>\\n\\t<!-- About form ends here  -->\\t\\n\\t\\n\\t<div *ngIf=\\\"qualification\\\">\\n\\t\\n\\t<div  class=\\\"flex-row\\\">\\n\\t\\n\\t\\t\\t<h4>Qualification</h4>\\n\\t\\t\\t\\n\\t<ul>\\n\\t\\n\\t\\n\\t\\t\\t<div *ngFor=\\\"let degree of doctor.degrees\\\">\\n\\t\\t\\t\\t<li><h5>{{degree.degreeName}} </h5></li>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n    </ul>\\n\\t\\n\\t<button mat-button color=\\\"accent\\\" (click)=\\\"qualificationEdit=true; qualification=false\\\">Edit</button>\\n\\t\\n\\t</div>\\n\\t\\n\\t</div>\\n\\t\\n\\t<!-- qualification form start  -->\\n    \\n    <div *ngIf=\\\"qualificationEdit\\\" class=\\\"flex-column\\\">\\n\\t\\t   <div class=\\\"form-group\\\">\\n\\t\\t   \\n\\t\\t  <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t   \\t<mat-select placeholder=\\\"Qualification\\\" [(ngModel)]=\\\"doctor.degrees\\\" multiple=\\\"true\\\">\\n\\t                           \\n\\t              <mat-option *ngFor=\\\"let degree of qualificationOptions\\\" [value]=\\\"degree\\\">\\n\\t              {{degree.degreeName}}\\n\\t              </mat-option>\\n            </mat-select>\\n            \\n\\t\\t   \\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t   \\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t   \\n\\t\\t   </div>\\n\\t\\t   \\n\\t\\t   <div class=\\\"flex-row\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\"> Save</button>\\n\\t\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"qualificationEdit=false; qualification=true; refresh()\\\">Cancel</button>\\n\\t\\t\\t</div>\\n\\n\\t</div>\\n    \\n    \\n    <!-- qualificatin form ends  -->\\n    \\n    \\n    <div *ngIf=\\\"speciality\\\" class=\\\"flex-row\\\">\\n    \\n    \\n    <h4>Speciality:</h4>\\n    \\n\\t\\n\\t<ul>\\n\\t\\n\\t<div *ngFor=\\\"let speciality of doctor.specialities\\\">\\n\\t\\n\\t\\t<li><h5>{{speciality.specialityName}} </h5></li>\\n\\t\\n\\t</div>\\n\\t\\n\\t</ul>\\n    \\n    <button mat-button color=\\\"accent\\\" (click)=\\\"specialityEdit=true; speciality=false\\\" >Edit</button>\\n    \\n    \\n    </div>\\n    \\n    <!-- speciality form start here  -->\\n    \\n    <div *ngIf=\\\"specialityEdit\\\" class=\\\"flex-column\\\">\\n    \\n    \\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Specialities\\\" [(ngModel)]=\\\"doctor.specialities\\\" multiple=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let speciality of specialities\\\" [value]=\\\"speciality\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{speciality.specialityName}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"flex-row\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\"> Save</button>\\n\\t\\t\\t\\t<button mat-button color=\\\"warn\\\" (click)=\\\"specialityEdit=false;speciality=true; refresh()\\\">Cancel</button>\\n\\t\\t\\t</div>\\n    \\n    \\n    </div>\\n    \\n    \\n    <!-- speciality form end here  -->\\n    \\n\\t\\n\\t<div id=\\\"workingday-container\\\">\\n\\t\\n\\t<div class=\\\"flex-row\\\">\\n\\t<h4>Working Days:</h4>\\n\\t\\n\\t<button  mat-button class=\\\"edit\\\" color=\\\"accent\\\" (click)=\\\"openDialog()\\\">Edit</button>\\n\\t\\n\\t</div>\\n\\t<div *ngFor=\\\"let workingday of doctor.workingDays\\\">\\n\\t\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t<mat-list>\\n\\t\\t\\n        <div *ngIf=\\\"workingday.checked\\\"  class=\\\"workingday\\\">\\n\\t\\t\\n\\t\\t<mat-list-item><h5>{{workingday.dayName}}</h5></mat-list-item>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t<div class=\\\"time\\\" >\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let hour of workingday.hours\\\" >\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}}\\n\\t\\t\\t\\t\\t\\t\\t\\tTo\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t    </div>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</mat-list>\\n\\t\\t\\n\\t\\t\\n\\t\\t<br>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\t\\n\\n</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_profile_edit.html\n// module id = ../../../../../src/app/dr/html/doctor_profile_edit.html\n// module chunks = main","module.exports = \"\\n<div id=\\\"container\\\">\\n\\n<div id=\\\"left-content\\\">\\n\\n<div id=\\\"img-container\\\">\\n\\n\\t<img src={{doctor.profileImage.path}} alt=\\\"profile image\\\" height=150px width=150px>\\n\\t\\n</div>\\n\\t\\n\\t<div class=\\\"flex-row\\\">\\n\\t\\n\\t<h4>AppointmentFee:</h4>\\n\\t\\t\\t<div>\\n\\t\\t\\t     <p>{{doctor.appointmentFee}}</p>\\n\\t\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"flex-row\\\">\\n\\t\\n\\t<h4>PhoneNo:</h4>\\n\\t\\t\\t<div>\\n\\t\\t\\t     <p>{{doctor.phoneno}}</p>\\n\\t\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"flex-row\\\">\\n\\t\\n\\t\\t\\n\\t<h4>Address:</h4>\\n\\t<div>\\n\\t\\n\\t\\t<p>{{doctor.addrLineOne}}  {{doctor.city}}</p>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\n\\n</div>\\n\\n\\n\\n\\n<div id=\\\"right-content\\\">\\n\\n\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\n\\t\\n\\t<h3>Name : {{doctor.name}}</h3>\\n\\t\\n\\t<h4>About:</h4>\\n\\t<p>{{doctor.about}}</p>\\n\\t\\n\\t<div class=\\\"flex-row\\\">\\n\\t\\n\\t\\t\\t<h4>Qualification</h4>\\n\\t\\n\\t<ul>\\n\\t\\n\\t\\n\\t\\t\\t<div *ngFor=\\\"let degree of doctor.degrees\\\">\\n\\t\\t\\t\\t<li><h5>{{degree.degreeName}} </h5></li>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n    </ul>\\n\\t\\n\\t\\n\\t\\n\\t</div>\\n    \\n    \\n    \\n    <div class=\\\"flex-row\\\">\\n    \\n    \\n    <h4>Speciality:</h4>\\n\\t\\n\\t<ul>\\n\\t\\n\\t<div *ngFor=\\\"let speciality of doctor.specialities\\\">\\n\\t\\n\\t\\t<li><h5>{{speciality.specialityName}} </h5></li>\\n\\t\\n\\t</div>\\n\\t\\n\\t</ul>\\n    \\n    \\n    \\n    </div>\\n    \\n    \\n\\t\\n\\t<div id=\\\"workingday-container\\\">\\n\\t\\n\\t<h4>Working Days:</h4>\\n\\t<div *ngFor=\\\"let workingday of doctor.workingDays\\\">\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t<mat-list>\\n\\t\\t\\n        <div class=\\\"workingday\\\">\\n\\t\\t\\n\\t\\t<mat-list-item><h5>{{workingday.dayName}}</h5></mat-list-item>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t<div class=\\\"time\\\" >\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let hour of workingday.hours\\\" >\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}}\\n\\t\\t\\t\\t\\t\\t\\t\\tTo\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t    </div>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</mat-list>\\n\\t\\t\\n\\t\\t\\n\\t\\t<br>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\t\\n\\n</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_public_profile.html\n// module id = ../../../../../src/app/dr/html/doctor_public_profile.html\n// module chunks = main","module.exports = \"<div id=\\\"main-container\\\">\\n\\n<h2 class=\\\"text-center\\\">Signup Form </h2>\\n \\n<mat-vertical-stepper>\\n\\n\\n<mat-step [stepControl]=\\\"personalForm\\\">\\n\\t\\n\\t<ng-template matStepLabel> Personal Information</ng-template>\\n\\t\\n\\t<form [formGroup]=\\\"personalForm\\\">\\n\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input  matInput name=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\">\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"name.hasError('required')\\\">\\n\\t\\t\\t\\t\\tName is <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<textarea  cols=\\\"5\\\" rows=\\\"6\\\" matInput name=\\\"about\\\" formControlName=\\\"about\\\" placeholder=\\\"Write About Yourself\\\"></textarea>\\n\\t\\t\\t<mat-hint align='start'>Write Detail About You Work</mat-hint>\\n\\t\\t\\t<mat-hint align=\\\"end\\\">{{about.value.length}}/256</mat-hint>\\n\\t\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"about.hasError('required')\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\tAbout is  <strong>requied</strong>\\n\\t\\t\\t</mat-error>\\n\\t\\t\\t<mat-error *ngIf=\\\"about.hasError('maxlength')\\\">\\n\\t\\t\\t\\tMaximum no of character is 256\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" matStepperNext >Next</button>\\n\\t\\t</div>\\n\\t\\n\\t</form>\\n\\n\\n\\n</mat-step>\\n\\n\\n\\t<mat-step [stepControl]=\\\"qualificationForm\\\">\\n\\t\\n  <ng-template matStepLabel>Add Your Qalification</ng-template>\\t\\n  \\n\\n\\t<form [formGroup]=\\\"qualificationForm\\\">\\n\\n\\t\\t   <div class=\\\"form-group\\\">\\n\\t\\t   \\n\\t\\t  <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t   \\t<mat-select placeholder=\\\"Qualification\\\" formControlName=\\\"qualifications\\\" multiple=\\\"true\\\">\\n\\t                           \\n\\t              <mat-option *ngFor=\\\"let degree of qualificationOptions\\\" [value]=\\\"degree\\\">\\n\\t              {{degree.degreeName}}\\n\\t              </mat-option>\\n            </mat-select>\\n            \\n            <mat-error *ngIf=\\\"qualifications.hasError('required')\\\">\\n\\t\\t\\t\\t\\tQualifications are<strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t   \\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t   \\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t   \\n\\t\\t   </div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Specialities\\\" formControlName=\\\"specialities\\\" multiple=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let speciality of specialities\\\" [value]=\\\"speciality\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{speciality.specialityName}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"specialitiesControl.hasError('required')\\\">\\n\\t\\t\\t\\t\\tSpecialities are <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" matStepperPrevious type=\\\"button\\\">Previous</button>\\n\\t\\t\\t\\n\\t\\t\\t <button mat-raised-button color=\\\"primary\\\"  matStepperNext type=\\\"button\\\">Next</button>\\n\\t\\t\\t</div>\\n\\t        \\n\\t       \\n\\t\\t\\t\\t\\n\\t\\t \\n\\t   </form>\\t\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</mat-step >\\n\\t\\t\\n\\t\\t\\n\\t\\t<mat-step [stepControl]=\\\"contactForm\\\">\\n\\t\\t\\n\\t\\t\\t<ng-template matStepLabel>Add Contact Information</ng-template>\\n\\t\\t\\n\\t\\t\\t<form [formGroup]=\\\"contactForm\\\" >\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput formControlName=\\\"address\\\" type=\\\"text\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"address.hasError('required')\\\">\\n\\t\\t\\t\\t\\tAddress is <strong>required</strong>\\n\\t\\t\\t     \\t</mat-error>\\n\\t\\t\\t\\t    </mat-form-field>\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput formControlName=\\\"address2\\\" type=\\\"text\\\" name=\\\"address2\\\" placeholder=\\\"Address Line Two\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t\\t\\t   \\t<mat-select placeholder=\\\"State\\\" formControlName=\\\"state\\\" (change)=\\\"stateSelected()\\\">\\n\\t\\t\\t                           \\n\\t\\t\\t              <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">\\n\\t\\t\\t                                                {{ state.stateName }}\\n\\t\\t\\t              </mat-option>\\n\\t\\t            </mat-select>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"state.hasError('required')\\\">\\n\\t\\t\\t\\t\\tState is <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t      </mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t\\t\\t   \\t<mat-select placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n\\t\\t\\t                           \\n\\t\\t\\t              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.cityName\\\">\\n\\t\\t\\t                                                {{ city.cityName}}\\n\\t\\t\\t              </mat-option>\\n\\t\\t            </mat-select>\\n\\t\\t            \\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"city.hasError('required')\\\">\\n\\t\\t\\t\\t\\tCity is <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t   \\t\\t\\n\\t\\t      </mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<span matPrefix>+91 &nbsp;</span>\\n\\t\\t\\t\\t\\t<input matInput formControlName=\\\"phoneno\\\" type=\\\"text\\\" name=\\\"phoneno\\\" placeholder=\\\"Phone No\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"phoneno.hasError('required')\\\">\\n\\t\\t\\t\\t\\tPhone No  is <strong>required</strong>\\n\\t\\t\\t\\t    </mat-error>\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"phoneno.hasError('minlength')\\\">\\n\\t\\t\\t\\t    \\tMinimum length should be 10 digit\\n\\t\\t\\t\\t    </mat-error>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t<button matStepperPrevious mat-raised-button color=\\\"accent\\\" type=\\\"button\\\">Previous</button>\\n\\t\\t\\t\\t    <button matStepperNext mat-raised-button color=\\\"primary\\\"  type=\\\"button\\\">Next</button>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</form>\\n\\t\\t</mat-step>\\n\\n\\t\\t\\n\\t\\t<mat-step>\\n\\t\\t\\n\\t\\t\\t<ng-template matStepLabel >Review And Save </ng-template>\\n\\t\\t\\t\\n\\t\\t\\t<h4>Qualifications</h4>\\n\\t\\t\\t<p *ngFor=\\\"let qualification of qualificationForm.value.qualifications\\\">{{qualification.degreeName}}</p>\\n\\t\\t\\n\\t\\t\\t<h4>Specialities</h4>\\n\\t\\t\\t<p *ngFor=\\\"let speciality of qualificationForm.value.specialities\\\">{{speciality.specialityName}}</p>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<h4>Address:</h4>\\n\\t\\t\\t<p> {{contactForm.value.address}}  , {{contactForm.value.city}}</p>\\n\\t\\t\\t\\n\\t\\t\\t<h4>Phone no:</h4>\\n\\t\\t\\t<p>{{contactForm.value.phoneno}}</p>\\n\\t\\t    \\n\\t\\t    \\n\\t\\t    <h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\" type=\\\"button\\\">Previous</button>\\n\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"submit()\\\" >Save</button>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t</mat-step>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\n\\n</mat-vertical-stepper>\\n\\n\\n\\n\\n\\n\\n\\n\\t\\t\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_signup.html\n// module id = ../../../../../src/app/dr/html/doctor_signup.html\n// module chunks = main","module.exports = \"\\n<h2> Write Prescription </h2>\\n\\n\\n\\n\\n<form [formGroup]=\\\"prescriptionForm\\\">\\n\\n<h4>PatientName: {{appointment.patientName}}</h4>\\n\\n\\n\\n<mat-form-field>\\n\\n<textarea matInput placeholder=\\\"Enter The Symptoms\\\" matTextareaAutosize matAutosizeMinRows=\\\"6\\\"\\n            matAutosizeMaxRows=\\\"2\\\" formControlName=\\\"symptoms\\\">\\n    </textarea>\\n\\n</mat-form-field>\\n\\n\\n<mat-form-field>\\n\\n\\t<textarea matInput placeholder=\\\"Enter The Prescription\\\" matTextareaAutosize matAutosizeMinRows=\\\"6\\\"\\n            matAutosizeMaxRows=\\\"5\\\" formControlName=\\\"prescription\\\">\\n    </textarea>\\n\\n</mat-form-field>\\n\\n\\t\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\n\\t<button mat-raised-button color=\\\"accent\\\"  mat-dialog-close\\t >Close</button>\\n\\t\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/dr/html/doctor_write_prescription.html\n// module id = ../../../../../src/app/dr/html/doctor_write_prescription.html\n// module chunks = main","export class Error {\n    public error: boolean;\n    public errMsg: string;\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/error.ts","module.exports = \"<site-main-header class=\\\"header\\\"></site-main-header>\\n\\n\\n\\t\\t\\t<div class=\\\"content\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t <search-using-city-speciality></search-using-city-speciality>\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/home.html\n// module id = ../../../../../src/app/home.html\n// module chunks = main","import { Component } from \"@angular/core\";\nimport {UserService} from \"./user/user_service\";\nimport {User} from \"./user/user\";\nimport {Router} from \"@angular/router\";\nimport {DoctorService} from \"./dr/doctor_service\";\nimport {Speciality} from \"./model/speciality\";\n\nimport{Http} from \"@angular/http\";\n\n@Component( {\n    selector: \"home\",\n    templateUrl: \"./home.html\"\n} )\n\nexport class Home {\n\n\n    constructor(private userService:UserService , private router:Router ,\n        private doctorService:DoctorService,private http:Http){\n\n    }\n\n    \n\n\n\n    ngOnInit(){\n\n        \n\n        \n\n        this.userService.getCurrentUser().subscribe((data)=>{\n\n       \n            if(data[\"_body\"]!=\"\"){\n\n                let currentUser:User=data.json();\n\n                if(currentUser.role==\"ROLE_DOCTOR\"){\n                    \n                    this.router.navigateByUrl(\"/dr/home\");\n    \n                }\n                else if(currentUser.role==\"ROLE_PATIENT\"){\n                    this.router.navigateByUrl(\"/patient/home\");\n                }\n    \n\n            }\n\n        });\n    \n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/home.ts","module.exports = \"\\n<div class=\\\"navbar-fixed-bottom\\\">\\n\\n\\t<mat-toolbar  color=\\\"accent\\\">\\n\\t\\t\\t\\n\\t\\t\\t<button mat-button >Privacy</button>\\n\\t\\t\\t\\n\\t\\t\\t \\n\\t\\t\\t\\n   </mat-toolbar>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/layout/site_main_footer.html\n// module id = ../../../../../src/app/layout/site_main_footer.html\n// module chunks = main","import { Component } from \"@angular/core\";\n\n\n\n@Component( {\n    selector: \"site-main-footer\",\n    templateUrl: \"./site_main_footer.html\"\n} )\n\nexport class SiteMainFooter {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/layout/site_main_footer.ts","module.exports = \"\\n<mat-toolbar color=\\\"primary\\\">\\n\\n<button mat-button routerLink=\\\"/\\\"><span>Edr</span>\\n</button>\\n\\n<button mat-button routerLink=\\\"/user/signup\\\">SignUp</button>\\n<button mat-button routerLink=\\\"/user/login\\\">Sign In</button>\\n\\n<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n<mat-menu #menu=\\\"matMenu\\\">\\n  <button mat-menu-item>\\n    \\n    <span>About</span>\\n  </button>\\n  <button mat-menu-item >\\n   \\n    <span>How This Works ?</span>\\n  </button>\\n  <button mat-menu-item>\\n   \\n    <span>Contact</span>\\n  </button>\\n</mat-menu>\\n\\n</mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/layout/site_main_header.html\n// module id = ../../../../../src/app/layout/site_main_header.html\n// module chunks = main","import { Component } from \"@angular/core\";\n\n\n@Component( {\n    selector: \"site-main-header\",\n    templateUrl: \"./site_main_header.html\"\n} )\nexport class SiteMainHeader {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/layout/site_main_header.ts","import { NgModule } from \"@angular/core\";\nimport {\n    MatInputModule, MatGridListModule, MatMenuModule, MatIconModule\n    , MatSidenavModule, MatListModule, MatProgressSpinnerModule, MatButtonModule\n    , MatTabsModule, MatCheckboxModule, MatRadioModule, MatStepperModule,\n    MatSelectModule, MatDatepickerModule, MatNativeDateModule, MAT_DATE_LOCALE, NativeDateAdapter\n    , DateAdapter, MAT_DATE_FORMATS, MatSlideToggleModule, MatTableModule, MatTooltipModule,\n    MatAutocompleteModule, MatToolbarModule, MatCardModule, MatPaginatorModule, MatSnackBarModule\n    , MatProgressBarModule, MatDialogModule\n\n} from \"@angular/material\";\n\n\n@NgModule( {\n    imports: [MatInputModule, MatGridListModule, MatMenuModule, MatIconModule\n        , MatSidenavModule, MatListModule, MatProgressSpinnerModule, MatButtonModule\n        , MatTabsModule, MatCheckboxModule, MatRadioModule, MatStepperModule, MatSelectModule\n        , MatDatepickerModule, MatNativeDateModule, MatSlideToggleModule, MatTableModule, MatTooltipModule\n        , MatAutocompleteModule, MatToolbarModule, MatCardModule, MatPaginatorModule, MatSnackBarModule\n        , MatProgressBarModule, MatDialogModule\n\n    ],\n\n    declarations: [],\n\n    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n\n    exports: [MatInputModule, MatGridListModule, MatMenuModule, MatIconModule\n        , MatSidenavModule, MatListModule, MatProgressSpinnerModule, MatButtonModule\n        , MatTabsModule, MatCheckboxModule, MatRadioModule, MatStepperModule, MatSelectModule\n        , MatDatepickerModule, MatNativeDateModule, MatSlideToggleModule, MatTableModule, MatTooltipModule\n        , MatAutocompleteModule, MatToolbarModule, MatCardModule, MatPaginatorModule, MatSnackBarModule\n        , MatProgressBarModule, MatDialogModule\n    ]\n} )\nexport class MaterialModule {\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/material/material.module.ts","\n\nexport class Address {\n\n    public addressLineOne: string;\n    public addressLineTwo: string;\n    public state: string;\n    public city: string;\n    public phoneNo: string;\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/address.ts","\nimport { Hours } from \"../model/hours\";\nimport { Prescription } from \"./prescription\";\n\n\nexport class Appointment {\n\n    public appointmentId: string;\n    public date: Date;\n    public doctorId: string;\n    public patientId: string;\n    public doctorName: string;\n    public patientName: string;\n    public patientPhoneNo: string;\n    public status: string;\n    public refund: boolean;\n    public hours: Hours;\n    public dayId: number;\n\n    public prescription: Prescription = new Prescription();\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/appointment.ts","export class City {\n    public cityName: string;\n    public cityPincode: string;\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/city.ts","\nimport { Hours } from \"./hours\";\n\n\n\nexport class Day {\n    public dayName: string;\n    public dayId: number;\n    public dayStatus: string = \"Closed\";\n    public checked: boolean = false;\n    public hours: Hours[] = new Array();\n\n\n\n    constructor() {\n\n\n    }\n\n\n\n    public equals( dayid: number ): boolean {\n\n        if ( this.dayId == dayid ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public isChecked() {\n        let result: boolean;\n        if ( this.dayStatus == \"Open\" ) {\n            result = true;\n        }\n        else {\n            result = false;\n        }\n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/day.ts","export class Degree {\n\n    public degreeName: string;\n    public degreeId: string;\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/degree.ts","export class Disease {\n    public diseaseName: string;\n    public diseaseDiscription: string;\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/disease.ts","export class DoctorInPatient {\n\n\n    public docId: string;\n    public name: string;\n    public phoneno: string;\n    public appointmentFee: number;\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/doctorInPatient.ts","export class FormResult {\n    public result: boolean;\n    public message: string;\n    public error: boolean;\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/formresult.ts","\nexport const HourListOption = [\n    { label: \"24 Hours\", value: \"24\" },\n    { label: \"12:00 am\", value: \"00:00\" },\n    { label: \"12:30 am\", value: '00:30' },\n    { label: \"01:00 am\", value: '01:00' },\n    { label: \"01:30 am\", value: \"01:30\" },\n    { label: \"02:00 am\", value: \"02:00\" },\n    { label: \"02:30 am\", value: \"02:30\" },\n    { label: \"03:00 am\", value: \"03:00\" },\n    { label: \"03:30 am\", value: \"03:30\" },\n    { label: \"04:00 am\", value: \"04:00\" },\n    { label: \"04:30 am\", value: \"04:30\" },\n    { label: \"05:00 am\", value: \"05:00\" },\n    { label: \"05:30 am\", value: \"05:30\" },\n    { label: \"06:00 am\", value: \"06:00\" },\n    { label: \"06:30 am\", value: \"06:30\" },\n    { label: \"07:00 am\", value: \"07:00\" },\n    { label: \"07:30 am\", value: \"07:30\" },\n    { label: \"08:00 am\", value: \"08:00\" },\n    { label: \"08:30 am\", value: \"08:30\" },\n    { label: \"09:00 am\", value: \"09:00\" },\n    { label: \"09:30 am\", value: \"09:30\" },\n    { label: \"10:00 am\", value: \"10:00\" },\n    { label: \"10:30 am\", value: \"10:30\" },\n    { label: \"11:00 am\", value: \"11:00\" },\n    { label: \"11:30 am\", value: \"11:30\" },\n    { label: \"12:00 pm\", value: \"12:00\" },\n    { label: \"12:30 pm\", value: \"12:30\" },\n    { label: \"01:00 pm\", value: \"13:00\" },\n    { label: \"01:30 pm\", value: \"13:30\" },\n    { label: \"02:00 pm\", value: \"14:00\" },\n    { label: \"02:30 pm\", value: \"14:30\" },\n    { label: \"03:00 pm\", value: \"15:00\" },\n    { label: \"03:30 pm\", value: \"15:30\" },\n    { label: \"04:00 pm\", value: \"16:00\" },\n    { label: \"04:30 pm\", value: \"16:30\" },\n    { label: \"05:00 pm\", value: \"17:00\" },\n    { label: \"05:30 pm\", value: \"17:30\" },\n    { label: \"06:00 pm\", value: \"18:00\" },\n    { label: \"06:30 pm\", value: \"18:30\" },\n    { label: \"07:00 pm\", value: \"19:00\" },\n    { label: \"07:30 pm\", value: \"19:30\" },\n    { label: \"08:00 pm\", value: \"20:00\" },\n    { label: \"08:30 pm\", value: \"20:30\" },\n    { label: \"09:00 pm\", value: \"21:00\" },\n    { label: \"09:30 pm\", value: \"21:30\" },\n    { label: \"10:00 pm\", value: \"22:00\" },\n    { label: \"10:30 pm\", value: \"22:30\" },\n    { label: \"11:00 pm\", value: \"23:00\" },\n    { label: \"11:30 pm\", value: \"23:30\" },\n    { label: \"12:00 pm\", value: \"23:59\" }\n\n\n\n\n];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/hourListOptions.ts","import { LocalTime } from \"js-joda\";\nexport class Hours {\n    public startAt: string;\n    public closeAt: string;\n    public maxPatientNo: number;\n\n\n\n\n\n    constructor() {\n\n    }\n\n\n\n    public equal( hours: Hours ): boolean {\n\n        let result: boolean = false;\n\n        if ( hours.startAt == this.startAt && hours.closeAt == this.closeAt ) {\n\n            if ( this.maxPatientNo == hours.maxPatientNo ) {\n                result = true;\n            }\n\n        }\n        return result;\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/hours.ts","\n\n\nexport class Prescription {\n\n    public symptoms: string;\n    public prescription: string;\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/prescription.ts","export class Speciality {\n    public specialityName: string;\n\n\n    toString() {\n        return \"{ specialityName :\" + this.specialityName + \"}\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/speciality.ts","import { City } from \"./city\";\n\nexport class State {\n    public stateId: string;\n    public stateName: string;\n    public cities: City[];\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/state.ts","\nexport class UserFile {\n\n\n\n    fileId: string;\n    fileName: string;\n    path: string;\n    fileType: string;\n    userId: string;\n\n    fileSize: number;\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/model/userfile.ts","import { Component } from \"@angular/core\";\nimport { PatientService } from \"./patient_service\";\n\n@Component( {\n    selector: \"add-doctor\",\n    templateUrl: \"./html/add_doctor.html\"\n} )\n\nexport class AddDoctor {\n\n   \n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/add_doctor.ts","import { Component } from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport { FormBuilder, FormControl, Validators, FormGroup } from \"@angular/forms\";\nimport { Patient } from \"./patient\";\nimport { TimeSlot } from \"../model/timeslot\";\nimport { Doctor } from \"../dr/doctor\";\nimport { Day } from \"../model/day\";\nimport { CommonService } from \"../common/common_service\";\nimport { Hours } from \"../model/hours\";\nimport { MatDatepickerInputEvent, MatSnackBar } from \"@angular/material\";\nimport { PatientService } from \"./patient_service\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\n\n\n@Component( {\n    selector: \"appointment-with-added-doctor\",\n    templateUrl: \"./html/appointment_with_added_doctor.html\"\n} )\nexport class AppointmentWithAddedDoctor {\n\n\n    patient: Patient = new Patient();\n\n    // form group for the make an appointment form \n    appointmentForm: FormGroup;\n\n    showAppointmentForm: boolean = false;\n\n    currentDate: Date = new Date();\n\n    hours: Hours[] = new Array();\n\n    workingDays: Day[] = new Array();\n\n    doctors: Doctor[] = new Array();\n\n    doctorsSugest: Observable<Doctor[]>;\n\n    timeSlots: TimeSlot[] = new Array();\n\n\n    holidays: Date[] = new Array();\n\n    // doctor form control field  \n    selectedDoc: FormControl = new FormControl( '', [\n\n        Validators.required\n    ] );\n\n    // time slot for the appointment \n    appointmentTime: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    //appointment date form control \n    appointmentDate: FormControl = new FormControl( '', [\n\n        Validators.required\n    ] );\n\n    /* this is the filter on date picker it filter all the hollidays */\n\n    holidayFilter;\n\n    constructor( private formBuilder: FormBuilder, private patientService: PatientService,\n        private commonService: CommonService, private matSnackBar: MatSnackBar , \n      private router:Router ) {\n\n    }\n\n    /* this function execute when user select a dr from the list and then \n     * it populate the list of time slots for that perticular dr in the \n     * timeSlots variable */\n    drSelected() {\n\n        let doc: Doctor = this.appointmentForm.value.selectedDoc;\n        console.log( \"doctor value\" + doc.docId );\n        // Now we get the full details of doctor\n        this.patientService.getDoctorUsingDocId( doc.docId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                doc = data.json();\n                this.holidays = doc.holidays;\n                this.workingDays = doc.workingDays;\n\n\n\n                //filter value is changed whenever the doctor's value is changed\n                this.holidayFilter = ( selectedDate: Date ): boolean => {\n\n                    let day: number = selectedDate.getDay();\n                    let result: boolean = false;\n\n                    if ( this.workingDays ) {\n\n                        for ( let i = 0; i < this.workingDays.length; i++ ) {\n                            if ( day == this.workingDays[i].dayId ) {\n                                result = true;\n                            }\n\n\n\n                        }\n\n                    }\n                    else {\n                        result = true;\n                    }\n\n                    if ( this.holidays ) {\n\n                        for ( let i = 0; i < this.holidays.length; i++ ) {\n\n\n                            let holiday: Date = this.holidays[i];\n\n                            if ( selectedDate.getTime() == parseInt( holiday.toString() ) * 1000 ) {\n                                console.log( holiday );\n                                console.log( selectedDate );\n                                result = false;\n\n                            }\n                        }\n\n\n                    }\n\n                    return result;\n                };\n\n            }\n        } );\n\n\n\n    }\n\n    /** dateSelected method execute when user select the date and change the time slots available at that day*/\n\n    dateSelected( event: MatDatepickerInputEvent<Date> ) {\n\n\n        for ( let i = 0; i < this.workingDays.length; i++ ) {\n            if ( this.workingDays[i].dayId == event.value.getDay() ) {\n                this.hours = this.workingDays[i].hours;\n            }\n        }\n\n    }\n\n\n    ngOnInit() {\n\n        this.patientService.getPatient().subscribe((data)=>{\n            if(data!=undefined){\n                if(data[\"_body\"]!=\"\"){\n\n                    this.patient.name = data.json().name;\n                }\n\n                else{\n                    this.router.navigateByUrl(\"/patient/home/patient/signup\");\n                }\n            }\n        });\n        \n\n\n        if ( window.navigator.geolocation ) {\n            window.navigator.geolocation.getCurrentPosition( position => {\n                console.log( position );\n            } );\n        }\n\n        this.getDocForPatient();\n\n\n\n        this.appointmentForm = this.formBuilder.group( {\n\n            selectedDoc: this.selectedDoc,\n            appointmentTime: this.appointmentTime,\n            appointmentDate: this.appointmentDate\n\n        } );\n\n\n\n    }\n\n\n\n\n    submit() {\n        console.log( this.appointmentForm.value );\n    }\n\n    getDocForPatient() {\n        this.patientService.getPatientDoctors().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.doctors = data.json();\n            }\n        } );\n    }\n\n    docHover( dr ) {\n        console.log( dr );\n    }\n\n\n\n    getDocDetail( i: number ) {\n        let doc: Doctor = this.doctors[i];\n\n        return doc.addrLineOne;\n\n    }\n\n\n\n    getAppointmentLeft() {\n        this.patientService.getAppointmentBooked( this.selectedDoc.value.docId,\n            this.appointmentDate.value, this.appointmentTime.value )\n            .subscribe(( data ) => {\n                if ( data != undefined ) {\n\n                    let appointment = data.json();\n                    console.log( data );\n                    let appointmentLeft = this.appointmentTime.value.maxPatientNo - appointment;\n\n\n\n                    if ( appointmentLeft > 0 ) {\n                        this.matSnackBar.open( \"Appointment Left \" + appointmentLeft, \"Hurry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                    else {\n                        this.matSnackBar.open( \"Appointment Full Choose Another Time\", \"Sorry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                }\n            } );\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/appointment_with_added_doctor.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, app-root, mat-sidenav-container, .my-content {\\n  margin: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n\\na{\\n\\twidth:100%;\\n\\theight:100%;\\n\\tdisplay: block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/css/patient_home.css\n// module id = ../../../../../src/app/patient/css/patient_home.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/css/patient_signup.css\n// module id = ../../../../../src/app/patient/css/patient_signup.css\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"form{\\n  max-width:none;\\n}\\n\\nmat-form-field{\\n  margin:15px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/css/search_doc_using_city_speciality.css\n// module id = ../../../../../src/app/patient/css/search_doc_using_city_speciality.css\n// module chunks = main","module.exports = \"<h2>Add Doctor</h2>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/add_doctor.html\n// module id = ../../../../../src/app/patient/html/add_doctor.html\n// module chunks = main","module.exports = \"<div class=\\\"content-center\\\">\\n\\n\\n<h4 class=\\\"text-center\\\">Make An Appointment With Added Doctor </h4>\\n\\n\\n<mat-horizontal-stepper>\\n \\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Choose Doctor And Time</ng-template>\\n \\t\\t\\n \\t\\t\\n<form [formGroup]=\\\"appointmentForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Choose a Doctor\\\" formControlName=\\\"selectedDoc\\\" (change)=\\\"drSelected()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let dr of doctors;let i = index\\\" [matTooltip]=\\\"getDocDetail(i)\\\" matTooltipPosition=\\\"right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option  [value]=\\\"dr\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t{{dr.name}}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t     </mat-option>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t<mat-hint>List Of Doctor In Your city</mat-hint>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"selectedDoc.hasError('required')\\\">Please Select A Dr</mat-error>\\n\\t\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput  (dateChange)=\\\"dateSelected($event)\\\" [min]='currentDate'  [matDatepickerFilter]=\\\"holidayFilter\\\"  formControlName=\\\"appointmentDate\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select A day\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker touchUi='true' #picker></mat-datepicker>\\n\\t\\t\\n\\t\\t\\t<mat-hint> Enter Date in (MM/DD/YYYY)</mat-hint>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('required')\\\">Please Select A Date</mat-error>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('matDatepickerFilter')\\\"> This day is a holiday </mat-error>\\n\\t\\t</mat-form-field>\\n   \\n\\t\\n\\t</div>\\n\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Choose a Time\\\" formControlName=\\\"appointmentTime\\\" (change)=\\\"getAppointmentLeft()\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t<mat-option *ngFor=\\\"let hour of hours\\\" [value]=\\\"hour\\\" >\\n\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}} To \\n\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t<mat-error *ngIf=\\\"appointmentTime.hasError('required')\\\"> Please Select A Time</mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t</div>\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n\\n</form>\\n \\t\\t\\n \\t\\n \\t\\t\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Pay </ng-template>\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel> Done </ng-template>\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\n </mat-horizontal-stepper>\\n      \\n\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/appointment_with_added_doctor.html\n// module id = ../../../../../src/app/patient/html/appointment_with_added_doctor.html\n// module chunks = main","module.exports = \"<div class=\\\"content-center\\\">\\n\\n\\t\\n\\t<h4 class=\\\"text-center\\\">Make An Appointment With Dr {{doctor.name}}</h4>\\n\\n\\n<mat-horizontal-stepper>\\n \\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Choose Doctor And Time</ng-template>\\n \\t\\t\\n \\t\\t\\n<form [formGroup]=\\\"appointmentForm\\\" >\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input matInput  type=\\\"text\\\" formControlName=\\\"docName\\\" placeholder=\\\"\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput  (dateChange)=\\\"dateSelected($event)\\\" [min]='currentDate'  [matDatepickerFilter]=\\\"holidayFilter\\\"  formControlName=\\\"appointmentDate\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select A day\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker touchUi='true' #picker></mat-datepicker>\\n\\t\\t\\n\\t\\t\\t<mat-hint> Enter Date in (MM/DD/YYYY)</mat-hint>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('required')\\\">Please Select A Date</mat-error>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('matDatepickerFilter')\\\"> This day is a holiday </mat-error>\\n\\t\\t</mat-form-field>\\n   \\n\\t\\n\\t</div>\\n\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Choose a Time\\\"  formControlName=\\\"appointmentTime\\\" (change)=\\\"getAppointmentLeft()\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t <div *ngFor=\\\"let hour of hours\\\" >\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-option  [value]=\\\"hour\\\" >\\n\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}} To \\n\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</div>\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"appointmentTime.hasError('required')\\\"> Please Select A Time</mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t</div>\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n\\n</form>\\n \\t\\t\\n \\t\\n \\t\\t\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Pay </ng-template>\\n\\t \\n\\t\\t \\n\\t\\t \\n\\t\\t \\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel> Done </ng-template>\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\n </mat-horizontal-stepper>\\n      \\n\\t\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/make_appointment.html\n// module id = ../../../../../src/app/patient/html/make_appointment.html\n// module chunks = main","module.exports = \"<!-- <h3>Add address</h3> -->\\n\\n\\n<!-- <form > -->\\n\\n<!-- \\t<div class=\\\"form-group\\\"> -->\\n\\t\\n<!-- \\t<mat-form-field> -->\\n<!-- \\t\\t<mat-select placeholder=\\\"Select the State\\\"> -->\\n\\t\\t\\n<!-- \\t\\t\\t<mat-option>State</mat-option> -->\\n\\t\\t\\n<!-- \\t\\t</mat-select> -->\\n<!-- \\t</mat-form-field> -->\\n<!-- \\t</div> -->\\n\\t\\n<!-- \\t<div class=\\\"form-group\\\"> -->\\n\\t\\n<!-- \\t\\t<mat-form-field> -->\\n\\t\\t\\n<!-- \\t\\t\\t<mat-select placeholder=\\\"Select the city\\\"> -->\\n\\t\\t\\t\\n<!-- \\t\\t\\t\\t<mat-option> city</mat-option> -->\\n\\t\\t\\t\\n<!-- \\t\\t\\t</mat-select> -->\\n\\t\\t\\t\\n<!-- \\t\\t</mat-form-field> -->\\n\\t\\n<!-- \\t</div> -->\\n\\n\\n<!-- </form> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/patient_add_address.html\n// module id = ../../../../../src/app/patient/html/patient_add_address.html\n// module chunks = main","module.exports = \"\\n\\n<mat-toolbar color=\\\"primary\\\">\\n\\n<button mat-icon-button (click)=\\\"sidenav.open()\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n\\n<button mat-button routerLink=\\\"/patient/home\\\"><span>Edr</span>\\n</button>\\n\\n\\n<button mat-button (click)=\\\"logOut()\\\">SignOut</button>\\n\\n\\n</mat-toolbar>\\n\\n\\n<mat-sidenav-container >\\n\\n  <mat-sidenav #sidenav>\\n  \\n  \\t<mat-nav-list>\\n  \\t\\n  \\t\\t\\n  \\t\\n  \\t\\t<h3 mat-subheader>Appointment</h3>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t <a class=\\\"list-group-item\\\" routerLink=\\\"appointment/with/added/doctor\\\">Added Doctor</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t  <a class=\\\"list-group-item\\\" routerLink=\\\"patient/make/appointment\\\">Dr In Your City</a>\\n  \\t\\t\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\n  \\t\\t<h3 mat-subheader>Search</h3>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t\\n  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"search/using/docid\\\"> Using Doctor Id</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t\\n  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"search/using/docname\\\"> Using Doctor Name</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"search/using/speciality\\\">Using Speciality</a>\\n  \\t\\t\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"show/doc/added\\\" >Doctors Added</a>\\n \\t \\t\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\t<h3 class=\\\"mat-subheader\\\">Profile</h3>\\n  \\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<mat-list-item>\\n  \\t\\t\\n  \\t\\t<a routerLink=\\\"patient/signup\\\">Edit Profile</a>\\n  \\t\\t</mat-list-item>\\n  \\t\\t\\n  \\t\\n  \\t</mat-nav-list>\\n  \\n  \\n\\n  </mat-sidenav>\\n\\n\\n  <!-- primary content -->\\n  \\n  \\n  \\n\\t\\t\\n\\t<router-outlet class=\\\"my-content\\\"></router-outlet>\\n\\n</mat-sidenav-container>\\n\\n\\n<!--  <div class=\\\"col-sm-4\\\"> -->\\n \\n<!--  \\t<div class=\\\"list-group\\\"> -->\\n \\t\\n<!--  \\t<a class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" href=\\\"#appointmentMenu\\\"> -->\\n<!-- \\t\\t  \\tAppointment <i class=\\\"caret\\\"></i></a> -->\\n<!--  \\t  <div class=\\\"collapse\\\" id=\\\"appointmentMenu\\\"> -->\\n \\t  \\n<!--  \\t   <a class=\\\"list-group-item\\\" routerLink=\\\"appointment/with/added/doctor\\\">Added Doctor</a> -->\\n<!--  \\t   <a class=\\\"list-group-item\\\" routerLink=\\\"patient/make/appointment\\\">Dr In Your City</a> -->\\n \\t   \\n \\t  \\n<!--  \\t  </div> -->\\n \\t  \\n<!--  \\t<a class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" href=\\\"#searchDocMenu\\\"> -->\\n<!--  \\tSearch <i class=\\\"caret\\\"></i></a> -->\\n \\t\\n<!--  \\t<div class=\\\"collapse\\\"  id=\\\"searchDocMenu\\\"> -->\\n<!--  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"search/using/docid\\\"> Using Doctor Id</a> -->\\n<!--  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"search/using/docname\\\"> Using Doctor Name</a> -->\\n<!--  \\t\\t<a class=\\\"list-group-item\\\" routerLink=\\\"search/using/speciality\\\">Using Speciality</a> -->\\n \\t\\t\\n<!--  \\t</div> -->\\n \\t\\n \\t\\n<!--  \\t \\t<a class=\\\"list-group-item\\\" routerLink=\\\"show/doc/added\\\" >Doctors Added</a> -->\\n \\t \\t\\n<!--  \\t</div> -->\\n \\t\\n \\t\\n \\t\\t \\n<!--  </div>   -->\\n \\n \\n\\t\\t\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/patient_home.html\n// module id = ../../../../../src/app/patient/html/patient_home.html\n// module chunks = main","module.exports = \"<div class=\\\"content-center\\\">\\n\\n\\t\\n\\t<h4 class=\\\"text-center\\\">Make An Appointment With Dr In Your City</h4>\\n\\n\\n<mat-horizontal-stepper>\\n \\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Choose Doctor And Time</ng-template>\\n \\t\\t\\n \\t\\t\\n<form [formGroup]=\\\"appointmentForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field >\\n\\t\\t\\n\\t\\t\\t\\t\\t<mat-select  #docSelect placeholder=\\\"Choose a Doctor\\\" formControlName=\\\"selectedDoc\\\" (change)=\\\"drSelected()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div  *ngFor=\\\"let dr of doctors;let i = index\\\" [matTooltip]=\\\"getDocDetail(i)\\\" matTooltipPosition=\\\"right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option  [value]=\\\"dr\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t{{dr.name}}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t     </mat-option>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t<mat-hint>List Of Doctor In Your city</mat-hint>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"selectedDoc.hasError('required')\\\">Please Select A Dr</mat-error>\\n\\t\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput  (dateChange)=\\\"dateSelected($event)\\\" [min]='currentDate'  [matDatepickerFilter]=\\\"holidayFilter\\\"  formControlName=\\\"appointmentDate\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select A day\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker touchUi='true' #picker></mat-datepicker>\\n\\t\\t\\n\\t\\t\\t<mat-hint> Enter Date in (MM/DD/YYYY)</mat-hint>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('required')\\\">Please Select A Date</mat-error>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('matDatepickerFilter')\\\"> This day is a holiday </mat-error>\\n\\t\\t</mat-form-field>\\n   \\n\\t\\n\\t</div>\\n\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Choose a Time\\\"  formControlName=\\\"appointmentTime\\\" (change)=\\\"getAppointmentLeft()\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t <div *ngFor=\\\"let hour of hours\\\" >\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-option  [value]=\\\"hour\\\" >\\n\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}} To \\n\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</div>\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"appointmentTime.hasError('required')\\\"> Please Select A Time</mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t</div>\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n\\n</form>\\n \\t\\t\\n \\t\\n \\t\\t\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n\\t\\t <ng-template matStepLabel>Pay </ng-template>\\n\\t\\t \\n\\t\\t <button mat-raised-button color=\\\"primary\\\" id=\\\"rzp-button1\\\" >Pay Now </button>\\n\\n\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel> Done </ng-template>\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\n </mat-horizontal-stepper>\\n      \\n\\t\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/patient_make_appointment.html\n// module id = ../../../../../src/app/patient/html/patient_make_appointment.html\n// module chunks = main","module.exports = \"\\n\\n<h2> Book Appointment</h2>\\n\\n<mat-horizontal-stepper>\\n\\n\\n<mat-step>\\n        <ng-template matStepLabel>Choose Date And Time</ng-template>\\n<form [formGroup]=\\\"chooseDateTimeForm\\\">\\n    \\n    <div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput  (dateChange)=\\\"dateSelected($event)\\\" [min]='currentDate'  [matDatepickerFilter]=\\\"holidayFilter\\\"  formControlName=\\\"appointmentDate\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select A day\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker touchUi='true' #picker></mat-datepicker>\\n\\t\\t\\n\\t\\t\\t<mat-hint> Enter Date in (MM/DD/YYYY)</mat-hint>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('required')\\\">Please Select A Date</mat-error>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('matDatepickerFilter')\\\"> This day is a holiday </mat-error>\\n\\t\\t</mat-form-field>\\n   \\n\\t\\n\\t</div>\\n\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Choose a Time\\\"  formControlName=\\\"appointmentTime\\\" (change)=\\\"getAppointmentLeft()\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t <div *ngFor=\\\"let hour of hours\\\" >\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-option  [value]=\\\"hour\\\" >\\n\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.startAt)}} To \\n\\t\\t\\t\\t\\t\\t{{commonService.getTimeLabel(hour.closeAt)}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</div>\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"appointmentTime.hasError('required')\\\"> Please Select A Time</mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t</div>\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button  matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n\\n</form>\\n\\n</mat-step>\\n\\n\\n<mat-step>\\n\\n        <ng-template matStepLabel>Enter Your Mobile No</ng-template>\\n    \\n        <form [formGroup]=\\\"mobileNoForm\\\">\\n\\n            <mat-form-field>\\n\\t\\t\\t\\t<input matInput type=\\\"text\\\" placeholder=\\\"Enter Moblie No \\\" formControlName=\\\"mobileNo\\\">\\n\\t\\t\\t\\t\\n            </mat-form-field>\\n\\n        </form>\\n\\n    \\n\\n        <button mat-raised-button matStepperPrevious>Previous</button>\\n        <button mat-raised-button matStepperNext (click)=\\\"showMobile()\\\" >Next</button>\\n    \\n\\n</mat-step>\\n\\n<mat-step>\\n\\n\\t<ng-template matStepLabel>Verify Mobile No</ng-template>\\n\\n\\t<form [formGroup]=\\\"mobileNoForm\\\">\\n\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput type=\\\"text\\\" placeholder=\\\"Enter Moblie No \\\" formControlName=\\\"mobileNo\\\">\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\n\\t\\t\\n\\t</form>\\n\\t\\n\\n</mat-step>\\n\\n<mat-step>\\n        <ng-template matStepLabel>Pay </ng-template>\\n        \\n        <button mat-raised-button color=\\\"primary\\\" id=\\\"rzp-button1\\\" >Pay Now </button>\\n\\n\\n    \\n        <div class=\\\"form-group\\\">\\n            <button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n            <button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n        </div>\\n    </mat-step>\\n    \\n    <mat-step>\\n        <ng-template matStepLabel> Done </ng-template>\\n    \\n        <div class=\\\"form-group\\\">\\n        \\n            <button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n            <button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n        </div>\\n    </mat-step>\\n\\n\\n<mat-horizontal-stepper>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/patient_make_appointment_without_login.html\n// module id = ../../../../../src/app/patient/html/patient_make_appointment_without_login.html\n// module chunks = main","module.exports = \"<h2> this is the date </h2>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/patient_profile.html\n// module id = ../../../../../src/app/patient/html/patient_profile.html\n// module chunks = main","module.exports = \"<div class=\\\"content-center\\\">\\n\\n<h2> First Complete Your SignUp</h2>\\n\\t\\t\\n<mat-vertical-stepper >\\n\\n\\n  <mat-step [stepControl]=\\\"patientSignupForm\\\">\\n    \\n    <ng-template matStepLabel> Personal Information:</ng-template>\\n    \\n    <form [formGroup]=\\\"patientSignupForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t<input matInput type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\"> \\n\\t\\t\\t<mat-error *ngIf=\\\"name.hasError('required')\\\">Name is <strong>required</strong></mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n<!-- \\t<div class=\\\"form-group\\\"> -->\\n<!-- \\t\\t<mat-form-field> -->\\n<!-- \\t\\t\\t<span matPrefix>+91 &nbsp;</span> -->\\n<!-- \\t\\t\\t<input matInput type=\\\"text\\\" name=\\\"phoneno\\\" placeholder=\\\"Phone No\\\" formControlName=\\\"phoneno\\\" > -->\\n<!-- \\t\\t\\t<mat-error *ngIf=\\\"phoneno.hasError('minlength')||phoneno.hasError('maxlength')\\\"> -->\\n<!-- \\t\\t\\tPhone No should be of 10 digit</mat-error> -->\\n<!-- \\t\\t\\t<mat-error *ngIf=\\\"phoneno.hasError('required')\\\">Phone No is <strong>required</strong></mat-error> -->\\n\\t\\t\\n<!-- \\t\\t</mat-form-field> -->\\n\\t\\n<!-- \\t</div> -->\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t  \\n\\t\\t\\t  <input matInput [min]='oldestDate' [max]=\\\"currentDate\\\" formControlName=\\\"dateOfBirth\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date Of Birth\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker touchUi=\\\"true\\\" #picker></mat-datepicker>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-hint align=\\\"start\\\">Enter Date in mm/dd/yyyy Format</mat-hint>\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-error *ngIf=\\\"dateOfBirth.hasError('matDatepickerMax')\\\">You Can't Born in Future</mat-error>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-error *ngIf=\\\"dateOfBirth.hasError('matDatepickerMin')\\\">You Are too Old</mat-error>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-error *ngIf=\\\"dateOfBirth.hasError('required')\\\">Date of Birth is <strong>required</strong>\\n\\t\\t\\t  And in (mm/dd/yyyy) format\\n\\t\\t\\t  </mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t\\t<mat-select placeholder=\\\"If You Have any PreExisting Condition\\\" multiple=\\\"true\\\" formControlName=\\\"medcondition\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let condition of medConditions\\\" [value]=\\\"condition\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{{condition.diseaseName}}</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" matStepperNext>Next</button>\\n\\t\\n\\t\\n\\t</div>\\n\\n</form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"addressForm\\\">\\n   \\n   <ng-template matStepLabel>Contact Information</ng-template>\\n\\t<address-form (changed)=\\\"addressSubmited($event)\\\"></address-form>\\n\\t\\n\\t<button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Previous</button>\\n\\t<button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n  </mat-step>\\n  \\n  <mat-step>\\n  \\t<ng-template matStepLabel>Review And Submit</ng-template>\\n  \\t\\n  \\t<p class=\\\"text-capitalize\\\"><strong>Name:</strong>  {{patient.name}}</p>\\n  \\t<p><strong>Date Of Birth:</strong> {{patient.dateOfBirth|date:\\\"mediumDate\\\"}}</p>\\n  \\t<p><strong>PreExisting Conditions:</strong></p>\\n  \\t<p *ngFor=\\\"let disease of patient.diseases\\\"> {{disease.diseaseName}}</p>\\n  \\t<p><strong>Address:</strong></p>\\n  \\t\\n  \\t<p>{{patient.address.addressLineOne}}</p>\\n  \\t<p>{{patient.address.addressLineTwo}}</p>\\n  \\t<p>{{patient.address.city}}</p>\\n  \\t<p>{{patient.address.phoneNo}}</p>\\n  \\t\\n  \\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t<h4 *ngIf=\\\"result.error\\\"  class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\t\\n\\t\\n  \\t<button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" matStepperPrevious>Previous</button>\\n  \\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"submit()\\\">Submit</button>\\n  </mat-step>\\n</mat-vertical-stepper>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/patient_signup.html\n// module id = ../../../../../src/app/patient/html/patient_signup.html\n// module chunks = main","module.exports = \"\\n\\n\\n<h2 class=\\\"text-center\\\">Search Using DocId</h2>\\n\\n<form [formGroup]=\\\"searchDocForm\\\" (ngSubmit)=\\\"Submit()\\\">\\n\\n\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t<input matInput formControlName=\\\"docId\\\" placeholder=\\\"Enter The Doctor Id\\\" type=\\\"text\\\">\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Search</button>\\n\\n</form>\\n\\n\\n<div class=\\\"content-center\\\" *ngIf=\\\"showDoc\\\">\\n\\n\\n\\n\\t\\t<mat-card>\\n\\n\\t<mat-card-header>\\n\\t\\n\\t\\t<mat-card-title>\\n\\t\\t\\n\\t\\t<h4 class=\\\"panel-heading\\\">Name : {{doctor.name}}</h4>\\n\\t\\t\\n\\t\\t</mat-card-title>\\n\\t\\n\\t</mat-card-header>\\n\\t\\n\\t<mat-card-content>\\n\\t\\n\\t<h4>About:</h4>\\n\\t<p>{{doctor.about}}</p>\\n\\t\\n\\t\\n\\t</mat-card-content>\\n\\t\\n\\t<mat-card-actions>\\n\\t\\n\\t<button mat-button (click)=\\\"showDoctor(doctor.docId)\\\">Check Profile</button>\\n\\t\\n\\t\\n\\t</mat-card-actions>\\n\\n\\n</mat-card>\\n\\n\\n\\n\\n\\t\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/search_doc_using_docid.html\n// module id = ../../../../../src/app/patient/html/search_doc_using_docid.html\n// module chunks = main","module.exports = \"\\n\\n\\n<h2 class=\\\"text-center\\\">Search Using Doctor Name</h2>\\n\\n\\n<form [formGroup]=\\\"searchUsingDocNameForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n<div class=\\\"form-group\\\">\\n\\n\\t<mat-form-field>\\n\\t\\n\\t\\t<input matInput formControlName=\\\"docName\\\" placeholder=\\\"Enter the name \\\" type=\\\"text\\\">\\n\\t\\t\\n\\t</mat-form-field>\\n\\n\\t<mat-form-field>\\n\\t\\n\\t\\t<mat-select formControlName=\\\"state\\\" placeholder=\\\"Select A State\\\" (change)=\\\"stateSelected()\\\">\\n\\t\\t\\n\\t\\t\\t<mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">{{state.stateName}}</mat-option>\\n\\t\\t\\n\\t\\t</mat-select>\\n\\t\\n\\t</mat-form-field>\\n\\t\\n\\t<mat-form-field>\\n\\t\\n\\t\\t<mat-select formControlName=\\\"city\\\" placeholder=\\\"Select A City\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t<mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.cityName\\\">{{city.cityName}}</mat-option>\\n\\t\\t\\t\\n\\t\\t</mat-select>\\n\\t\\n\\t</mat-form-field>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"> Submit</button>\\n\\t</div>\\n\\n</div>\\n\\n\\n</form>\\n\\n\\n\\n<div  class=\\\"grid-container\\\" *ngIf=\\\"showDoc\\\" >\\n\\n\\n<div  *ngFor=\\\"let doctor of doctorList\\\">\\n\\n<mat-card>\\n\\n\\t<mat-card-header>\\n\\t\\n\\t\\t<mat-card-title>\\n\\t\\t\\n\\t\\t\\t<h4>Name : {{doctor.name}}</h4>\\n\\t\\t</mat-card-title>\\n\\t\\n\\t</mat-card-header>\\n\\t\\n\\t\\n\\t<mat-card-content>\\n\\t\\n\\t\\n\\t\\t<h4>About:</h4>\\n\\t<p>{{doctor.about}}</p>\\n\\t\\n\\t\\n\\t</mat-card-content>\\n\\t\\n\\t\\n\\t<mat-card-actions>\\n\\t\\n\\t<button mat-button (click)=\\\"showDoctor(doctor.docId)\\\">Check Profile</button>\\n\\n\\t<button mat-button color=\\\"accent\\\" (click)=\\\"addDoctor(doctor)\\\">Add Into List</button>\\n\\t\\n\\t<button mat-button (click)=\\\"makeAppointment(doctor.docId)\\\">Make Appointment</button>\\n\\t\\n\\t</mat-card-actions>\\n\\t\\n</mat-card>\\n\\n</div>\\n\\t\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/search_doc_using_docname.html\n// module id = ../../../../../src/app/patient/html/search_doc_using_docname.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">Search Doc Using Speciality</h2>\\n\\n\\n<form  [formGroup]=\\\"searchDocUsingSpecialityForm\\\" (ngSubmit)=\\\"submit()\\\" >\\n\\n\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Select Speciality\\\" formControlName=\\\"speciality\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let speciality of specialities\\\" [value]=\\\"speciality.specialityName\\\">{{speciality.specialityName}}</mat-option>\\n\\t\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Select State\\\" formControlName=\\\"state\\\" (change)=\\\"stateSelected()\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">{{state.stateName}}</mat-option>\\n\\t\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Select City\\\" formControlName=\\\"city\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.cityName\\\">{{city.cityName}}</mat-option>\\n\\t\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t</div>\\n\\n\\n\\n\\n\\n\\n</form>\\n\\n\\n\\n<div *ngIf=\\\"showDoc\\\" >\\n\\n<div class=\\\"grid-container\\\">\\n\\n<div  *ngFor=\\\"let doctor of doctorList\\\">\\n\\n<mat-card>\\n\\n\\t<mat-card-header>\\n\\t\\n\\t\\t<mat-card-title>\\n\\t\\t\\n\\t\\t\\t<h4>Name : {{doctor.name}}</h4>\\n\\t\\t</mat-card-title>\\n\\t\\n\\t</mat-card-header>\\n\\t\\n\\t\\n\\t<mat-card-content>\\n\\t\\n\\t\\n\\t\\t<h4>About:</h4>\\n\\t<p>{{doctor.about}}</p>\\n\\t\\n\\t\\n\\t</mat-card-content>\\n\\t\\n\\t\\n\\t<mat-card-actions>\\n\\t\\n\\t<button mat-button (click)=\\\"showDoctor(doctor.docId)\\\">Check Profile</button>\\n\\n\\t<button mat-button color=\\\"accent\\\" (click)=\\\"addDoctor(doctor)\\\">Add Into List</button>\\n\\t\\n\\t<button mat-button (click)=\\\"makeAppointment(doctor.docId)\\\">Make Appointment</button>\\n\\t\\n\\t</mat-card-actions>\\n\\t\\n\\n\\n\\n</mat-card>\\n\\n\\n\\t\\n\\t\\n\\n</div>\\n\\n</div>\\n\\t\\n\\t\\n\\t\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/search_doc_using_speciality.html\n// module id = ../../../../../src/app/patient/html/search_doc_using_speciality.html\n// module chunks = main","module.exports = \"\\n<h2 class=\\\"text-center\\\"> Search Doctor Around You </h2>\\n\\n<form [formGroup]=\\\"searchDocUsingCitySpeciality\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n\\n\\n\\n\\n<mat-grid-tile colspan=\\\"2\\\">\\n\\n <mat-form-field >\\n\\n     <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" role=\\\"listitem\\\">\\n\\n </mat-form-field>\\n\\n\\n </mat-grid-tile>\\n\\n\\n<mat-grid-tile colspan=\\\"1\\\">\\n\\n<mat-form-field>\\n    <mat-select placeholder=\\\"Doctor Type\\\" formControlName=\\\"speciality\\\">\\n        <mat-option *ngFor=\\\"let speciality of specialities\\\" [value]=\\\"speciality.specialityName\\\">\\n    \\n            {{speciality.specialityName}}\\n      </mat-option>\\n      </mat-select>\\n</mat-form-field>\\n\\n\\n</mat-grid-tile>\\n\\n\\n<mat-grid-tile colspan=\\\"1\\\"> <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button></mat-grid-tile>\\n\\n\\n\\n\\n\\n</mat-grid-list>\\n\\n</form>\\n\\n\\n\\n<div  class=\\\"grid-container\\\" *ngIf=\\\"showDoc\\\" >\\n\\n\\n    <div  *ngFor=\\\"let doctor of doctorList\\\">\\n    \\n    <mat-card>\\n    \\n        <mat-card-header>\\n        \\n            <mat-card-title>\\n            \\n                <h4>Name : {{doctor.name}}</h4>\\n            </mat-card-title>\\n        \\n        </mat-card-header>\\n        \\n        \\n        <mat-card-content>\\n        \\n        \\n            <h4>About:</h4>\\n        <p>{{doctor.about}}</p>\\n        \\n        \\n        </mat-card-content>\\n        \\n        \\n        <mat-card-actions>\\n        \\n        <button mat-button (click)=\\\"showDoctor(doctor.docId)\\\">Check Profile</button>\\n\\n        \\n        <button mat-button (click)=\\\"makeAppointment(doctor.docId)\\\">Make Appointment</button>\\n        \\n        </mat-card-actions>\\n        \\n    </mat-card>\\n    \\n    </div>\\n        \\n    \\n    \\n    </div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/search_using_city_speciality.html\n// module id = ../../../../../src/app/patient/html/search_using_city_speciality.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">Show Doctor Added List</h2>\\n\\n\\n\\n\\n<div class=\\\"grid-container\\\">\\n\\n<div  *ngFor=\\\"let doctor of doctorList\\\">\\n\\n<mat-card>\\n\\n\\n<mat-card-header>\\n\\n\\n\\n\\n\\n\\t<mat-card-title>\\n\\t\\n\\t<h4>Name : {{doctor.name}}</h4>\\n\\t\\n\\t</mat-card-title>\\n\\n\\n</mat-card-header>\\n\\n\\n\\t<mat-card-content>\\n\\t\\n\\t\\n\\t\\n\\t\\t\\t\\t\\t<h4>Phone No :</h4>\\n\\t\\t\\t\\t\\t<p>{{doctor.phoneno}}</p>\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t</mat-card-content>\\n\\t\\n\\t\\n\\t<mat-card-actions>\\n\\t\\n\\t\\n\\t\\t\\t<button mat-button (click)=\\\"showDocProfile(doctor.docId)\\\">Check Profile</button>\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\t<button mat-button color=\\\"accent\\\" (click)=\\\"deleteDoctor(doctor)\\\">Delete</button>\\n\\t\\n\\t\\n\\t</mat-card-actions>\\n\\t\\n\\n\\n\\n\\n\\n\\n\\n</mat-card>\\n\\n</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/patient/html/show_doctor_added.html\n// module id = ../../../../../src/app/patient/html/show_doctor_added.html\n// module chunks = main","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DoctorService } from \"../dr/doctor_service\";\nimport { Doctor } from \"../dr/doctor\";\nimport { Hours } from \"../model/hours\";\nimport { Day } from \"../model/day\";\nimport { FormControl, FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport { MatDatepickerInputEvent, MatSnackBar } from \"@angular/material\";\nimport { CommonService } from \"../common/common_service\";\nimport { PatientService } from \"./patient_service\";\nimport { Router } from \"@angular/router\";\n\n\n@Component( {\n    templateUrl: \"./html/make_appointment.html\"\n\n} )\nexport class MakeAppointment {\n\n    doctor: Doctor = new Doctor();\n\n    docName: FormControl = new FormControl( { value: \"test\", disabled: true }, [] );\n\n    appointmentDate: FormControl = new FormControl( '', [] );\n\n    appointmentTime: FormControl = new FormControl( '', [] );\n\n    appointmentForm: FormGroup;\n\n    paymentForm:FormGroup;\n\n    holidayFilter;\n\n    currentDate: Date = new Date();\n\n    hours: Hours[] = new Array();\n\n    workingDays: Day[] = new Array();\n\n    holidays: Date[] = new Array();\n\n    constructor( private acRoute: ActivatedRoute, private doctorService: DoctorService,\n        private formBuilder: FormBuilder, private commonService: CommonService,\n        private patientService: PatientService, private matSnackBar: MatSnackBar ,\n        private router:Router ) {\n\n    }\n\n\n\n\n\n\n\n    ngOnInit() {\n\n        this.patientService.isSignupComplete();\n\n\n        this.appointmentForm = this.formBuilder.group( {\n\n            \"docName\": this.docName,\n            \"appointmentDate\": this.appointmentDate,\n            \"appointmentTime\": this.appointmentTime\n        } );\n\n\n        this.acRoute.params.subscribe(( data ) => {\n\n            if ( data != undefined ) {\n                this.getDoctor( data.docId );\n            }\n        } );\n    }\n\n\n    getDoctor( docId: string ) {\n        this.doctorService.getDocUsingId( docId ).subscribe(( data ) => {\n\n            if ( data != undefined ) {\n                this.doctor = data.json();\n                this.docName.setValue( this.doctor.name );\n                this.workingDays = this.doctor.workingDays;\n                this.holidays = this.doctor.holidays;\n\n                //filter value is changed whenever the doctor's value is changed\n                this.holidayFilter = ( selectedDate: Date ): boolean => {\n\n                    let day: number = selectedDate.getDay();\n                    let result: boolean = false;\n\n                    if ( this.workingDays ) {\n\n                        for ( let i = 0; i < this.workingDays.length; i++ ) {\n                            if ( day == this.workingDays[i].dayId ) {\n                                result = true;\n                            }\n\n\n\n                        }\n\n                    }\n\n                    if ( this.holidays ) {\n\n                        for ( let i = 0; i < this.holidays.length; i++ ) {\n\n\n                            let holiday: Date = this.holidays[i];\n\n                            if ( selectedDate.getTime() == parseInt( holiday.toString() ) * 1000 ) {\n\n                                result = false;\n\n                            }\n                        }\n\n\n                    }\n\n                    return result;\n                };\n\n            }\n\n        } );\n    }\n\n\n    /** dateSelected method execute when user select the date and change the time slots available at that day*/\n\n    dateSelected( event: MatDatepickerInputEvent<Date> ) {\n\n\n        for ( let i = 0; i < this.workingDays.length; i++ ) {\n            if ( this.workingDays[i].dayId == event.value.getDay() ) {\n\n                this.hours = this.workingDays[i].hours;\n            }\n        }\n\n    }\n\n\n    getAppointmentLeft() {\n        this.patientService.getAppointmentBooked( this.doctor.docId,\n            this.appointmentDate.value, this.appointmentTime.value )\n            .subscribe(( data ) => {\n                if ( data != undefined ) {\n                    console.log( data.json() );\n                    let appointment = data.json();\n                    let appointmentLeft = this.appointmentTime.value.maxPatientNo - appointment;\n\n                    if ( appointmentLeft > 0 ) {\n                        this.matSnackBar.open( \"Appointment Left \" + appointmentLeft, \"Hurry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                    else {\n                        this.matSnackBar.open( \"Appointment Full Choose Another Date & Time\", \"Sorry\", {\n                            duration: 3000\n                        } );\n                    }\n\n\n\n                }\n            } );\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/make_appointment.ts","import { Disease } from \"../model/disease\";\nimport { Address } from \"../model/address\";\n\n\nexport class Patient {\n\n    public name: string;\n    public phoneNo: string;\n    public diseases: Disease[] = new Array();\n    public dateOfBirth: Date = new Date();\n    public address: Address = new Address();\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient.ts","import { Component } from \"@angular/core\";\n\n@Component( {\n    selector: \"patient-add-address\",\n    templateUrl: \"./html/patient_add_address.html\"\n} )\nexport class PatientAddAddress {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_add_address.ts","import { Component } from \"@angular/core\";\nimport { Patient } from \"./patient\";\nimport { Doctor } from \"../dr/doctor\";\nimport { TimeSlot } from \"../model/timeslot\";\nimport { holidayValidator } from \"./holidayValidator\";\nimport {UserService} from \"../user/user_service\";\nimport {Router} from  \"@angular/router\";\n\nimport { FormControl, FormGroup, FormBuilder, Validators, ValidatorFn } from \"@angular/forms\";\n\n@Component( {\n    selector: \"patient-home\",\n    templateUrl: \"./html/patient_home.html\",\n    styleUrls: [\"./css/patient_home.css\"]\n} )\n\nexport class PatientHome {\n\n    constructor(private userService:UserService , private router:Router){\n\n    }\n\n\n    logOut(){\n\n        this.userService.userLogout().subscribe((data)=>{\n            if(data!=undefined){\n                if(data.status==200){\n                    this.router.navigateByUrl(\"/\");\n                }\n                \n            }\n        });\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_home.ts","import { Component, ViewChild, ElementRef } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators, FormGroup } from \"@angular/forms\";\nimport { Patient } from \"./patient\";\nimport { TimeSlot } from \"../model/timeslot\";\nimport { Doctor } from \"../dr/doctor\";\nimport { Day } from \"../model/day\";\nimport { CommonService } from \"../common/common_service\";\nimport { Hours } from \"../model/hours\";\nimport { MatDatepickerInputEvent, MatSelect, MatSelectTrigger, MatSnackBar } from \"@angular/material\";\nimport { PatientService } from \"./patient_service\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\nimport {Router} from \"@angular/router\";\n\nimport { DoctorService } from \"../dr/doctor_service\";\n\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/observable/fromEvent';\nimport { LocalTime, DateTimeFormatter } from \"js-joda/dist/js-joda\";\n\n\n@Component( {\n    selector: \"patient-make-appointment\",\n    templateUrl: \"./html/patient_make_appointment.html\"\n    \n} )\nexport class PatientMakeAppointment {\n\n\n    @ViewChild( \"docSelect\" ) docSelect: MatSelect;\n\n    private readonly RELOAD_TOP_SCROLL_POSITION = 6;\n\n    appointmentLeft: number;\n\n    pageNo: number = 0;\n\n    totalPages: number;\n\n    pageSize: number = 10;\n\n    patient: Patient = new Patient();\n\n    // form group for the make an appointment form \n    appointmentForm: FormGroup;\n\n    showAppointmentForm: boolean = false;\n\n    currentDate: Date = new Date();\n\n    hours: Hours[] = new Array();\n\n    workingDays: Day[] = new Array();\n\n    doctors: Doctor[] = new Array();\n\n    doctorsSugest: Observable<Doctor[]>;\n\n    timeSlots: TimeSlot[] = new Array();\n\n\n    holidays: Date[] = new Array();\n\n    // doctor form control field  \n    selectedDoc: FormControl = new FormControl( '', [\n\n        Validators.required\n    ] );\n\n    // time slot for the appointment \n    appointmentTime: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    //appointment date form control \n    appointmentDate: FormControl = new FormControl( '', [\n\n        Validators.required\n    ] );\n\n    /* this is the filter on date picker it filter all the hollidays */\n\n    holidayFilter;\n\n    constructor( private formBuilder: FormBuilder, private patientService: PatientService, private commonService: CommonService\n        , private doctorService: DoctorService, private matSnackBar: MatSnackBar \n    ,private router:Router) {\n\n    }\n\n    /* this function execute when user select a dr from the list and then \n     * it populate the list of time slots for that perticular dr in the \n     * timeSlots variable */\n    drSelected() {\n\n        let doc: Doctor = this.appointmentForm.value.selectedDoc;\n\n        this.holidays = doc.holidays;\n        this.workingDays = doc.workingDays;\n\n        console.log( doc );\n\n        //filter value is changed whenever the doctor's value is changed\n        this.holidayFilter = ( selectedDate: Date ): boolean => {\n\n            let day: number = selectedDate.getDay();\n            let result: boolean = false;\n\n            if ( this.workingDays ) {\n\n                for ( let i = 0; i < this.workingDays.length; i++ ) {\n                    if ( day == this.workingDays[i].dayId ) {\n                        result = true;\n                    }\n\n\n\n                }\n\n            }\n\n            if ( this.holidays ) {\n\n                for ( let i = 0; i < this.holidays.length; i++ ) {\n\n\n                    let holiday: Date = this.holidays[i];\n\n                    if ( selectedDate.getTime() == parseInt( holiday.toString() ) * 1000 ) {\n                        console.log( holiday );\n                        console.log( selectedDate );\n                        result = false;\n\n                    }\n                }\n\n\n            }\n\n            return result;\n        };\n        console.log( this.holidays );\n    }\n\n    /** dateSelected method execute when user select the date and change the time slots available at that day*/\n\n    dateSelected( event: MatDatepickerInputEvent<Date> ) {\n\n\n        for ( let i = 0; i < this.workingDays.length; i++ ) {\n            if ( this.workingDays[i].dayId == event.value.getDay() ) {\n\n                this.hours =  this.workingDays[i].hours;\n            }\n        }\n\n    }\n\n\n    ngOnInit() {\n        \n\n        this.patientService.getPatient().subscribe((data)=>{\n            if(data!=undefined){\n                if(data[\"_body\"]==\"\"){\n                    this.router.navigateByUrl(\"/patient/home/patient/signup\");\n                }\n                else{\n                    this.patient.name=data.json().name;\n                }\n            }\n        });\n\n\n        if ( window.navigator.geolocation ) {\n            window.navigator.geolocation.getCurrentPosition( position => {\n                console.log( position );\n            } );\n        }\n\n        this.getDocForPatient( this.pageNo, this.pageSize );\n\n\n\n        this.appointmentForm = this.formBuilder.group( {\n\n            selectedDoc: this.selectedDoc,\n            appointmentTime: this.appointmentTime,\n            appointmentDate: this.appointmentDate\n\n        } );\n\n\n        this.docSelect.onOpen.subscribe(() => this.registerPanelScrollEvent() );\n\n\n    }\n\n\n\n\n    submit() {\n        console.log( this.appointmentForm.value );\n    }\n\n    getDocForPatient( pageNo: number, pageSize: number ) {\n        this.patientService.getDocForPatient( pageNo, pageSize ).subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                this.doctors = this.doctors.concat( data.json().content );\n                this.totalPages = data.json().totalPages;\n                console.log( data.json().content );\n                console.log( this.doctors );\n            }\n        } );\n    }\n\n    docHover( dr ) {\n        console.log( dr );\n    }\n\n\n\n    getDocDetail( i: number ) {\n        let doc: Doctor = this.doctors[i];\n\n        return doc.addrLineOne;\n\n    }\n\n\n\n\n    getAppointmentLeft() {\n        this.patientService.getAppointmentBooked( this.selectedDoc.value.docId,\n            this.appointmentDate.value, this.appointmentTime.value )\n            .subscribe(( data ) => {\n                if ( data != undefined ) {\n                   \n                    let appointment = data.json();\n                    console.log(data);\n                    let appointmentLeft = this.appointmentTime.value.maxPatientNo - appointment;\n                    \n                   \n\n                    if ( appointmentLeft > 0 ) {\n                        this.matSnackBar.open( \"Appointment Left \" + appointmentLeft, \"Hurry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                    else {\n                        this.matSnackBar.open( \"Appointment Full Choose Another Time\", \"Sorry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                }\n            } );\n    }\n\n\n    getNewDoc() {\n\n        console.log( this.docSelect );\n\n    }\n\n    registerPanelScrollEvent() {\n\n        const panel = this.docSelect.panel.nativeElement;\n        panel.addEventListener( 'scroll', event => this.loadAllOnScroll( event ) );\n    }\n\n    loadAllOnScroll( event ) {\n\n        if ( event.target.scrollTop > this.RELOAD_TOP_SCROLL_POSITION ) {\n\n            if ( this.pageNo < this.totalPages ) {\n                this.pageNo = this.pageNo + 1;\n                this.getDocForPatient( this.pageNo, this.pageSize );\n            }\n\n        }\n\n\n    }\n\n\n  /**  pay(){\n       \n            var options = {\n                \"key\": \"rzp_test_NsNIDbh9MpTQTF\",\n                \"amount\": \"2000\", // 2000 paise = INR 20\n                \"name\": \"Edr\",\n                \"description\": \"Purchase Description\",\n                \"image\": \"/your_logo.png\",\n                \"handler\": function (response){\n                    console.log(\"test1\");\n                    this.paymentSucessfull(response);\n                    console.log(\"test\");\n                },\n                \"prefill\": {\n                    \"name\": this.patient.name,\n                    \"contact\": \"9996200223\"\n                },\n                \"notes\": {\n                    \"address\": \"Hello World\"\n                },\n                \"theme\": {\n                    \"color\": \"#F37254\"\n                }\n            };\n        var rzp1 = new Razorpay (options);\n\n\n            rzp1.open();\n        \n\n    }\n\n*/\n\n    paymentSucessfull(response:any){\n\n        console.log(response);\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_make_appointment.ts","import {Component,Inject} from \"@angular/core\";\n\nimport {MAT_DIALOG_DATA} from \"@angular/material\"\n\nimport {DoctorService} from \"../dr/doctor_service\";\n\nimport {Doctor} from \"../dr/doctor\";\n\nimport {Hours} from \"../model/hours\";\n\nimport {Day} from \"../model/day\";\nimport { FormGroup , FormBuilder, FormControl } from \"@angular/forms\";\nimport {MatDatepickerInputEvent,MatSnackBar} from \"@angular/material\";\n\nimport {PatientService} from \"./patient_service\";\nimport {CommonService} from \"../common/common_service\";\n\n\n\n@Component({\n    selector:\"patient-make-free-appointment\",\n    templateUrl:\"./html/patient_make_appointment_without_login.html\"\n})\nexport class PatientMakeAppointmentWithoutLogin{\n\n    chooseDateTimeForm:FormGroup;\n\n    mobileNoForm:FormGroup;\n\n    mobileNo:FormControl= new FormControl(\"\",[]);\n\n    appointmentDate:FormControl = new FormControl(\"\",[]);\n\n    appointmentTime:FormControl= new FormControl(\"\",[]);\n\n    docId:string=\"lalitdoctor@gmail.com\";\n\n    hours: Hours[] = new Array();\n\n    workingDays: Day[] = new Array();\n\n    holidays: Date[] = new Array();\n\n    currentDate: Date = new Date();\n\n    appointmentLeft: number;\n\n\n\n    doctor:Doctor;\n\n    holidayFilter = ( selectedDate: Date ): boolean => {\n\n        let day: number = selectedDate.getDay();\n        let result: boolean = false;\n\n        if ( this.workingDays ) {\n\n            for ( let i = 0; i < this.workingDays.length; i++ ) {\n                if ( day == this.workingDays[i].dayId ) {\n                    result = true;\n                }\n\n\n\n            }\n\n        }\n\n        if ( this.holidays ) {\n\n            for ( let i = 0; i < this.holidays.length; i++ ) {\n\n\n                let holiday: Date = this.holidays[i];\n\n                if ( selectedDate.getTime() == parseInt( holiday.toString() ) * 1000 ) {\n                    console.log( holiday );\n                    console.log( selectedDate );\n                    result = false;\n\n                }\n            }\n\n\n        }\n\n        return result;\n    };\n\n    \n\n    constructor(/**@Inject( MAT_DIALOG_DATA ) public data: any ,*/ \n    private doctorService:DoctorService,private formBuilder:FormBuilder , private matSnackBar:MatSnackBar,\nprivate patientService:PatientService, private commonService:CommonService){\n\n    }\n\n    ngOnInit(){\n     \n        // this.docId=this.data.docId;\n\n        this.doctorService.getDocUsingId(this.docId).subscribe((data)=>{\n            if(data!=undefined){\n                this.doctor=data.json();\n\n                this.workingDays=this.doctor.workingDays;\n                this.holidays=this.doctor.holidays;\n            }\n        });\n\n\n       this.chooseDateTimeForm= this.formBuilder.group({\n\n            \"appointmentDate\":this.appointmentDate,\n            \"appointmentTime\":this.appointmentTime\n\n        });\n\n        this.mobileNoForm=this.formBuilder.group({\n            \"mobileNo\":this.mobileNo\n        });\n\n        \n\n\n        \n    }\n\n     /** dateSelected method execute when user select the date and change the time slots available at that day*/\n\n     dateSelected( event: MatDatepickerInputEvent<Date> ) {\n\n\n        for ( let i = 0; i < this.workingDays.length; i++ ) {\n            if ( this.workingDays[i].dayId == event.value.getDay() ) {\n\n                this.hours =  this.workingDays[i].hours;\n                \n            }\n        }\n\n    }\n\n\n    getAppointmentLeft() {\n        this.patientService.getAppointmentBooked( this.doctor.docId,\n            this.appointmentDate.value, this.appointmentTime.value )\n            .subscribe(( data ) => {\n                if ( data != undefined ) {\n                   \n                    let appointment = data.json();\n                    console.log(data);\n                    let appointmentLeft = this.appointmentTime.value.maxPatientNo - appointment;\n                    \n                   \n\n                    if ( appointmentLeft > 0 ) {\n                        this.matSnackBar.open( \"Appointment Left \" + appointmentLeft, \"Hurry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                    else {\n                        this.matSnackBar.open( \"Appointment Full Choose Another Time\", \"Sorry\", {\n                            duration: 3000\n                        } );\n                    }\n\n                }\n            } );\n    }\n\n    showMobile(){\n        console.log(this.mobileNo.value);\n    }\n\n\n    \n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_make_appointment_without_login.ts","import { NgModule } from \"@angular/core\";\nimport { PatientRoutingModule } from \"./patient_routing_module\";\nimport { PatientSignup } from \"./patient_signup\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { PatientHome } from \"./patient_home\";\nimport { PatientService } from \"./patient_service\";\nimport { PatientProfile } from \"./patient_profile\";\nimport { PatientMakeAppointment } from \"./patient_make_appointment\";\nimport { PatientAddAddress } from \"./patient_add_address\";\nimport { AppCommonModule } from \"../common/common_module\";\nimport { SearchDocUsingDocid } from \"./search_doc_using_docid\";\nimport { SearchDocUsingDocName } from \"./search_doc_using_docname\";\nimport { SearchDocUsingSpeciality } from \"./search_doc_using_speciality\";\nimport { ShowDoctorAdded } from \"./show_doctors_added\";\nimport { AddDoctor } from \"./add_doctor\";\nimport { AppointmentWithAddedDoctor } from \"./appointment_with_added_doctor\";\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MakeAppointment } from \"./make_appointment\";\nimport {SearchDocUsingCityAndSpeciality} from \"./patient_search_doc_using_city_speciality\";\nimport {PatientMakeAppointmentWithoutLogin} from \"./patient_make_appointment_without_login\";\n\n\n\n\n@NgModule( {\n    imports: [PatientRoutingModule, MaterialModule, CommonModule, ReactiveFormsModule, AppCommonModule\n        , ScrollDispatchModule],\n    declarations: [PatientSignup, PatientHome, PatientProfile, PatientMakeAppointment\n        , PatientAddAddress, SearchDocUsingDocid, SearchDocUsingDocName, SearchDocUsingSpeciality,\n        ShowDoctorAdded, AddDoctor, AppointmentWithAddedDoctor, MakeAppointment,SearchDocUsingCityAndSpeciality\n    ,PatientMakeAppointmentWithoutLogin],\n    providers: [PatientService],\n    exports: [SearchDocUsingCityAndSpeciality]\n} )\n\nexport class PatientModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_module.ts","import { Component } from \"@angular/core\";\nimport { PatientService } from \"./patient_service\";\nimport { Patient } from \"./patient\";\n\n\n\n@Component( {\n    selector: \"patient-profile\",\n    templateUrl: \"./html/patient_profile.html\"\n} )\n\nexport class PatientProfile {\n\n    patient: Patient = new Patient();\n\n\n\n    constructor( private patientService: PatientService ) {\n\n    }\n\n    ngOnInit() {\n\n\n        this.patientService.getPatient().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.patient = data.json();\n            }\n        } );\n\n        console.log( this.patient.dateOfBirth.toDateString() );\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_profile.ts","import { Route, Routes } from \"@angular/router\";\nimport { PatientSignup } from \"./patient_signup\";\nimport { PatientHome } from \"./patient_home\";\nimport { PatientProfile } from \"./patient_profile\";\nimport { PatientMakeAppointment } from \"./patient_make_appointment\";\nimport { PatientAddAddress } from \"./patient_add_address\";\nimport { SearchDocUsingDocid } from \"./search_doc_using_docid\";\nimport { SearchDocUsingDocName } from \"./search_doc_using_docname\";\nimport { SearchDocUsingSpeciality } from \"./search_doc_using_speciality\";\nimport { ShowDoctorAdded } from \"./show_doctors_added\";\nimport { AddDoctor } from \"./add_doctor\";\nimport { AppointmentWithAddedDoctor } from \"./appointment_with_added_doctor\";\nimport { MakeAppointment } from \"./make_appointment\";\nimport { PatientMakeAppointmentWithoutLogin} from \"./patient_make_appointment_without_login\";\n\nconst patientSignup: Route = { path: 'patient/signup', component: PatientSignup };\n\nconst patientAddAddress: Route = { path: 'patient/add/address', component: PatientAddAddress };\n\nconst patientProfile: Route = { path: 'patient/profile', component: PatientProfile }\n\nconst searchDocUsingDocid: Route = { path: \"search/using/docid\", component: SearchDocUsingDocid };\n\nconst searchDocUsingDocName: Route = { path: \"search/using/docname\", component: SearchDocUsingDocName };\n\nconst searchDocUsingSpeciality: Route = { path: \"search/using/speciality\", component: SearchDocUsingSpeciality };\n\nconst showDoctorAdded: Route = { path: \"show/doc/added\", component: ShowDoctorAdded };\n\nconst addDoctor: Route = { path: \"add/doctor\", component: AddDoctor };\n\nconst appointmentWithAddedDoctor: Route = { path: \"appointment/with/added/doctor\", component: AppointmentWithAddedDoctor };\n\nconst patientMakeAppointment: Route = { path: \"patient/make/appointment\", component: PatientMakeAppointment };\n\nconst makeAppointment: Route = { path: \"make/appointment/:docId\", component: MakeAppointment }\n\nconst makeFreeAppointment:Route={path:\"make/appointment/without/login\",component:PatientMakeAppointmentWithoutLogin}\n\n\nconst patientHome: Route = {\n    path: \"patient/home\", component: PatientHome, children: [\n\n        { path: \"\", component: PatientMakeAppointment },\n        patientSignup,\n        patientMakeAppointment,\n        patientAddAddress,\n        searchDocUsingDocid,\n        searchDocUsingDocName,\n        searchDocUsingSpeciality,\n        showDoctorAdded,\n        addDoctor,\n        appointmentWithAddedDoctor,\n        makeAppointment,\n        makeFreeAppointment\n\n    ]\n};\n\n\nexport const PatientRoutes: Routes = [patientHome, patientProfile];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_routing_config.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { PatientRoutes } from \"./patient_routing_config\";\n\n\n@NgModule( {\n    imports: [RouterModule.forChild( PatientRoutes )],\n    declarations: [],\n    exports: [RouterModule]\n} )\n\nexport class PatientRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_routing_module.ts","\nimport {Component,HostListener} from \"@angular/core\";\nimport {DoctorService} from \"../dr/doctor_service\";\nimport {Speciality} from \"../model/speciality\";\nimport {FormGroup,FormControl,FormBuilder} from \"@angular/forms\";\nimport {PatientService} from \"./patient_service\";\nimport { Doctor } from \"app/dr/doctor\";\nimport { MatDialog, MatSnackBar } from \"@angular/material\";\nimport { DoctorPublicProfile } from \"../dr/doctor_public_profile\";\nimport { Router } from \"@angular/router\";\nimport { PatientMakeAppointmentWithoutLogin} from \"./patient_make_appointment_without_login\";\n\n\n@Component({\n    selector:\"search-using-city-speciality\",\n    templateUrl:\"./html/search_using_city_speciality.html\",\n     styleUrls: [\"./css/search_doc_using_city_speciality.css\"]\n})\nexport class SearchDocUsingCityAndSpeciality{\n\n    specialities:Speciality[];\n\n    searchDocUsingCitySpeciality:FormGroup;\n\n    city:FormControl = new FormControl(\"\",[]);\n\n    speciality:FormControl= new FormControl(\"\",[]);\n\n    pageNo: number;\n\n    totalPages: number;\n\n    showDoc: boolean = false;\n\n    pageSize: number = 2;\n\n    doctorList: Doctor[] = new Array();\n\n\n\n\n    constructor(private doctorService:DoctorService,private formBuilder:FormBuilder,\n    private patientService:PatientService,private matDialog:MatDialog,private router:Router){\n\n        \n    }\n\n\n\n     /*getAllSpeciality get list of all the speciality form the database and populate into\n     * the form select field */\n\n    getAllSpeciality() {\n        this.doctorService.getAllSpeciality().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.specialities = data.json();\n            }\n        } );\n    }\n\n    ngOnInit(){\n\n        \n       \n\n        this.patientService.getPatientPostion();\n        \n        this.searchDocUsingCitySpeciality=this.formBuilder.group({\n            \"city\":this.city,\n            \"speciality\":this.speciality\n        });\n        \n        this.getAllSpeciality();\n\n\n    }\n\n\n    submit(){\n\n        console.log(\"test\");\n        console.log(this.searchDocUsingCitySpeciality);\n        this.pageNo = 0;\n        this.patientService.searchDocUsingCityAndSpeciality\n        (this.city.value,this.speciality.value,this.pageNo,this.pageSize ).subscribe(( data ) => {\n               if ( data != undefined ) {\n                   console.log(data);\n                   this.showDoc = true;\n                   this.totalPages = data.json().totalPages;\n                   this.doctorList = data.json().content;\n               }\n           } );\n    }\n\n\n      /** this method is binded with the scroll event of the document and it get executed when user \n     * reached at the end of the page and it add more doctor into the list */\n\n    @HostListener( \"window:scroll\", [] )\n    onScroll(): void {\n        if ( ( window.innerHeight + window.scrollY ) >= document.body.offsetHeight ) {\n            // you're at the bottom of the page\n            if ( this.pageNo < this.totalPages ) {\n\n\n                this.pageNo = this.pageNo + 1;\n                this.patientService.searchDocUsingCityAndSpeciality(this.city.value,this.speciality.value,\n                     this.pageNo, this.pageSize ).subscribe(( data ) => {\n                        if ( data != undefined ) {\n                            // adds the new array to the previous doctor list \n                            this.doctorList.push.apply( this.doctorList, data.json().content );\n\n                        }\n\n                    } );\n            }\n        }\n\n\n    }\n\n    showDoctor( docId ) {\n        this.matDialog.open( DoctorPublicProfile, {\n            data: { docId: docId },\n            height: '700px',\n            width: '900px'\n\n        } );\n    }\n\n\n    makeAppointment( docId ) {\n        // let url = \"/patient/home/make/appointment/\" + docId;\n        // this.router.navigateByUrl( url );\n\n        this.matDialog.open(PatientMakeAppointmentWithoutLogin,{\n            data:{docId:docId},\n            height:\"700px\",\n            width:\"900px\"\n        });\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_search_doc_using_city_speciality.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, URLSearchParams } from \"@angular/http\";\nimport { Patient } from \"./patient\";\nimport { Speciality } from \"../model/speciality\";\nimport { DoctorInPatient } from \"../model/doctorInPatient\";\nimport { Hours } from \"../model/hours\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class PatientService {\n\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n\n\n\n    constructor( private http: Http , private router:Router ) {\n\n\n    }\n\n\n    public getDiseaseList() {\n        let url = \"/api/public/disease/list\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /* patientsignup method takes patient class object as parameter and \n     * save it into database by sending a post request to rest services \n     * */\n\n    public patientSignup( patient: Patient ) {\n        let url = \"/api/private/patient/signup\";\n        return this.http.post( url, patient, this.commOptions );\n    }\n\n\n    public getPatient() {\n        let url = \"/api/private/get/patient\";\n        return this.http.get( url );\n    }\n\n\n    public getDocForPatient( pageNo: number, pageSize: number ) {\n        let url = \"/api/private/patient/get/doctor\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"pageNo\", pageNo.toString() );\n        param.set( \"pageSize\", pageSize.toString() );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /** getDoctorUsingDocId method takes doctor id as parameter and return \n     * the doctor object as the  result */\n    public getDoctorUsingDocId( docId: string ) {\n        let url: string = \"/api/public/patient/search/doctor/docid\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"docId\", docId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /* getDoctorUsingName method takes doctor name , state id , city name , page no and page size as parameter \n     * and return the list of doctor */\n\n    public getDoctorUsingName( docName: string, stateId: string, cityName: string, page: number, pageSize: number ) {\n        let url = \"/api/public/patient/search/doctor/docname\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"docName\", docName );\n        param.set( \"stateId\", stateId );\n        param.set( \"cityName\", cityName );\n        param.set( \"page\", page.toString() );\n        param.set( \"pageSize\", pageSize.toString() );\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /** getDoctorUsingSpeciality method takes doctor specialiy , state id , city name ,page no and page size as parameter\n     * and return the page object with the list of doctor */\n\n    public getDoctorUsingSpeciality( docSpeciality: string, stateId: string, cityName: string, page: number, pageSize: number ) {\n\n\n\n        let url = \"/api/public/patient/search/doctor/docspeciality\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"docSpeciality\", docSpeciality );\n        param.set( \"stateId\", stateId );\n        param.set( \"cityName\", cityName );\n        param.set( \"page\", page.toString() );\n        param.set( \"pageSize\", pageSize.toString() );\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /** addDoctor method takes the doctorinpatient object and add it into the list of doctors in patient \n     *  object */\n\n    public addDoctor( doctorInPatient: DoctorInPatient ) {\n        let url = \"/api/private/patient/add/doctor\";\n\n        return this.http.post( url, doctorInPatient, this.commOptions );\n    }\n\n\n    /** getPatientDoctors method get all the doctors present in the patient object */\n    public getPatientDoctors() {\n        let url = \"/api/private/patient/get/doctors\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /** deleteDoctorFromPatient takes the doctorinpatient object and remove it from the list \n     *  of doctors in the patient object */\n\n    public deleteDoctorFromPatient( doctorInPatient: DoctorInPatient ) {\n        let url = \"/api/private/patient/delete/doctor\";\n        return this.http.post( url, doctorInPatient, this.commOptions );\n    }\n\n\n    /* getAppointmentBooked method gets the appointment booked for that particular doctor \n     * on selected day at that time period \n     * @param string (doctor id )\n     * @param date (date of appointments )\n     * @param hours( time slot )*/\n\n    public getAppointmentBooked( docId: string, date: Date, hours: Hours ) {\n        let url = \"/api/public/patient/appointment/booked\";\n        let param = new URLSearchParams();\n        console.log( docId );\n\n        param.set( \"docId\", docId );\n        param.set( \"dateInLong\", date.getTime().toString() );\n        this.commOptions.params = param;\n\n\n        return this.http.post( url, hours, this.commOptions );\n\n\n    }\n\n/** isSignupComplete method check if user has completed the signup process or not  */\n\n    public isSignupComplete(){\n        this.getPatient().subscribe((data)=>{\n            if(data!=undefined){\n                if(data[\"_body\"]==\"\"){\n                    this.router.navigateByUrl(\"/patient/home/patient/signup\");\n                }\n            }\n        });\n    }\n\n\n    /** searchDocUsingCityAndSpeciality method takes four parameter first is the city name \n     * second is the speciality and page no and page size send the list of doc to user \n     *\n     */\n\n     public searchDocUsingCityAndSpeciality(city:string,speciality:string,pageNo:number,pageSize:number){\n\n        let url:string =\"/api/public/patient/search/doctor/cityandspeciality\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set(\"city\",city);\n        param.set(\"speciality\",speciality);\n        param.set(\"pageNo\",pageNo.toString());\n        param.set(\"pageSize\",pageSize.toString());\n\n        this.commOptions.params=param;\n        return  this.http.get(url,this.commOptions);\n\n     }\n\n\n     public getPatientPostion(){\n        let city:string;\n        let apiKey:string=\"AIzaSyAN5t5N_vl-jNzadPi4jHC9p4kSwm5omXw\";\n\n        let url:string=\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\";\n\n        if ( window.navigator.geolocation ) {\n            \n            window.navigator.geolocation.getCurrentPosition( position => {\n                let lat=position.coords.latitude;\n                let lon=position.coords.longitude;\n                url= url+lat+\",\"+lon+\"&key=\"+apiKey;\n\n                \n                 this.http.get(url,this.commOptions).subscribe((data)=>{\n                     console.log(data);\n                 });\n            } );\n        }\n\n        return city;\n\n\n     }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_service.ts","import { Component } from \"@angular/core\";\nimport { PatientService } from \"./patient_service\";\nimport { Patient } from \"./patient\";\nimport { Disease } from \"../model/disease\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { FormResult } from \"../model/formresult\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material\";\n\nconst REG_DATE = new RegExp( \" /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/\" );\n\n@Component( {\n    selector: \"patient-signup\",\n    templateUrl: \"./html/patient_signup.html\",\n    styleUrls: [\"./css/patient_signup.css\"]\n} )\nexport class PatientSignup {\n\n    patientSignupForm: FormGroup;\n\n    addressForm: FormGroup;\n\n    // used in the date picker to avoid user to choose future date as date of birth\n    currentDate: Date = new Date();\n    // used in the date picker to stop using date before 1900 \n    oldestDate: Date = new Date( 1900, 1, 1 );\n\n    result: FormResult = new FormResult();\n\n    // list of the medical conditions \n    medConditions: Disease[] = new Array();\n\n    patient: Patient = new Patient();\n\n\n\n    dateOfBirth: FormControl = new FormControl( '', [\n        Validators.required\n\n    ] );\n\n    name: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n\n\n    medcondition: FormControl = new FormControl( '', [\n\n    ] );\n\n    addressLineOne: FormControl = new FormControl( \"\", [] );\n\n    addressLineTwo: FormControl = new FormControl( \"\", [] );\n\n    state: FormControl = new FormControl( \"\", [] );\n\n    city: FormControl = new FormControl( \"\", [] );\n\n\n    constructor( private formBuilder: FormBuilder, private patientService: PatientService, private router: Router \n    ,private matSnackBar:MatSnackBar) {\n\n    }\n\n\n\n\n    ngOnInit() {\n\n        // get the list of the medical condition from the database \n        this.getListOfMedCondition();\n\n        // initialize the form group \n        this.patientSignupForm = this.formBuilder.group( {\n\n            'name': this.name,\n\n            'dateOfBirth': this.dateOfBirth,\n            'medcondition': this.medcondition,\n            'addressLineOne': this.addressLineOne,\n            'addressLineTwo': this.addressLineTwo,\n            'state': this.state,\n            'city': this.city\n        } );\n\n\n\n    }\n\n    // this method get the list of all the medical condition \n    getListOfMedCondition() {\n        this.patientService.getDiseaseList().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.medConditions = data.json();\n                console.log( this.medConditions );\n\n            }\n        } );\n    }\n\n    /* execute when user submit the form */\n    submit() {\n\n\n        console.log( this.patient );\n        this.patientService.patientSignup( this.patient ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n                if ( this.result.result ) {\n                    this.matSnackBar.open(\"SignUp is Completed\",\"Done\",{\n                        duration:3000\n                    });\n                    this.router.navigateByUrl( \"/patient/home\" );\n                }\n                else if(this.result.error){\n                    this.matSnackBar.open(this.result.message,\"Error\",{\n                        duration:3000\n                    });\n\n                }\n            }\n        } );\n\n    }\n\n\n    addressSubmited( event ) {\n\n        this.addressForm = event;\n\n\n        this.patient.name = this.patientSignupForm.value.name;\n\n        this.patient.dateOfBirth = this.patientSignupForm.value.dateOfBirth;\n\n        this.patient.address.addressLineOne = this.addressForm.value.addressLineOne;\n\n        this.patient.address.addressLineTwo = this.addressForm.value.addressLineTwo;\n\n        this.patient.address.state = this.addressForm.value.state;\n\n        this.patient.address.city = this.addressForm.value.city;\n\n        this.patient.address.phoneNo = this.addressForm.value.phoneNo;\n\n\n\n        this.patient.diseases = this.patientSignupForm.value.medcondition;\n        if ( this.patient.diseases.length == 0 ) {\n            this.patient.diseases = null;\n        }\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/patient_signup.ts","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validator, FormBuilder } from \"@angular/forms\";\nimport { Doctor } from \"../dr/doctor\";\nimport { PatientService } from \"./patient_service\";\nimport { FormResult } from \"../model/formresult\";\nimport { DoctorPublicProfile } from \"../dr/doctor_public_profile\";\nimport { MatDialog } from \"@angular/material\";\nimport {Router} from \"@angular/router\";\n\n\n\n@Component( {\n    selector: \"search-doc-using-docid\",\n    templateUrl: \"./html/search_doc_using_docid.html\"\n} )\n\nexport class SearchDocUsingDocid {\n\n    searchDocForm: FormGroup;\n\n    docId: FormControl = new FormControl( \"\", [] );\n\n    result: FormResult = new FormResult();\n\n    doctor: Doctor = new Doctor();\n\n    showDoc: boolean = false;\n\n    constructor( private formBuilder: FormBuilder, private patientService: PatientService,\n        private matDialog: MatDialog , private router:Router ) {\n\n\n    }\n\n    ngOnInit() {\n\n        this.patientService.isSignupComplete();\n\n        \n        this.searchDocForm = this.formBuilder.group( {\n            \"docId\": this.docId\n        } );\n    }\n\n\n    Submit() {\n        this.patientService.getDoctorUsingDocId( this.docId.value ).subscribe(( data ) => {\n            // check if response body is not empty \n\n            if ( data.status != 204 ) {\n                this.showDoc = true;\n                this.doctor = data.json();\n                this.result.error = false;\n                console.log( this.doctor );\n            }\n            else {\n                this.showDoc = false;\n                this.result.error = true;\n                this.result.message = \"No Doctor Found With this Id\";\n            }\n        } );\n    }\n\n\n    showDoctor( docId ) {\n        this.matDialog.open( DoctorPublicProfile, {\n            data: { docId: docId },\n            height: '700px',\n            width: '900px'\n\n        } );\n    }\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/search_doc_using_docid.ts","import { Component, HostListener } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { PatientService } from \"./patient_service\";\nimport { CommonService } from \"../common/common_service\";\nimport { State } from \"../model/state\";\nimport { City } from \"../model/city\";\nimport { Doctor } from \"../dr/doctor\";\nimport { DoctorInPatient } from \"../model/doctorInPatient\";\nimport { FormResult } from \"../model/formresult\";\nimport { DoctorPublicProfile } from \"../dr/doctor_public_profile\";\nimport { MatDialog, MatSnackBar } from \"@angular/material\";\nimport { Router } from \"@angular/router\";\n\n@Component( {\n    selector: \"search-doc-using-docname\",\n    templateUrl: \"./html/search_doc_using_docname.html\"\n} )\nexport class SearchDocUsingDocName {\n\n    formResult: FormResult = new FormResult();\n\n    searchUsingDocNameForm: FormGroup;\n\n    doctorList: Doctor[] = new Array();\n\n    showDoc: boolean = false;\n\n    pageNo: number;\n\n    totalPages: number;\n\n    pageSize: number = 10;\n\n    states: State[] = new Array();\n\n    cities: City[] = new Array();\n\n    docName: FormControl = new FormControl( \"\", [] );\n\n    state: FormControl = new FormControl( \"\", [] );\n\n    city: FormControl = new FormControl( \"\", [] );\n\n\n    constructor( private formBuilder: FormBuilder, private patientService: PatientService,\n        private commonService: CommonService, private matDialog: MatDialog,\n        private router: Router, private matSnackBar: MatSnackBar ) {\n\n\n    }\n\n    ngOnInit() {\n\n        this.patientService.isSignupComplete();\n\n        this.searchUsingDocNameForm = this.formBuilder.group( {\n            \"docName\": this.docName,\n            \"state\": this.state,\n            \"city\": this.city\n        } );\n\n        this.getAllStates();\n    }\n\n    /* state selected excute when user select a state from the list and it \n     * change the list of city according to that  state */\n\n    stateSelected() {\n        this.getAllCities( this.state.value );\n    }\n\n    /* getAllStates method get all the state from the database and put it into the \n     *  states object */\n    getAllStates() {\n        this.commonService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n    /** getAllCities method takes state name as parameter and get all the city \n     *  for that state */\n    getAllCities( stateName: string ) {\n        this.commonService.getAllCities( stateName ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.cities = data.json();\n            }\n        } );\n\n    }\n\n    /** submit method get executed when user click on submit button it load the first page of the \n     *  doctor with that name */\n\n    submit() {\n\n        this.pageNo = 0;\n\n        this.patientService.getDoctorUsingName( this.docName.value, this.state.value, this.city.value, this.pageNo, this.pageSize ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.showDoc = true;\n                this.doctorList = data.json().content;\n                this.totalPages = data.json().totalPages;\n                console.log( data.json() );\n            }\n        } );\n\n        console.log( this.searchUsingDocNameForm.value );\n    }\n\n\n\n    /** addDoctor method takes the doctor object and add it into the list of doctors present in the \n     *  patient object */\n\n    addDoctor( doctor: Doctor ) {\n\n        let doctorInPatient: DoctorInPatient = new DoctorInPatient();\n        doctorInPatient.docId = doctor.docId;\n        doctorInPatient.name = doctor.name;\n        doctorInPatient.phoneno = doctor.phoneno;\n        doctorInPatient.appointmentFee = doctor.appointmentFee;\n\n        this.patientService.addDoctor( doctorInPatient ).subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                this.formResult = data.json();\n\n                if ( this.formResult.result ) {\n                    this.matSnackBar.open( this.formResult.message, \"Doctor Added\", {\n                        duration: 3000\n                    } );\n                }\n                else if ( this.formResult.error ) {\n                    this.matSnackBar.open( this.formResult.message, \"Error\", {\n                        duration: 3000\n                    } );\n                }\n\n            }\n        } );\n\n    }\n\n\n\n    /** this method is binded with the scroll event of the document and it get executed when user \n     * reached at the end of the page and it add more doctor into the list */\n\n    @HostListener( \"window:scroll\", [] )\n    onScroll(): void {\n        if ( ( window.innerHeight + window.scrollY ) >= document.body.offsetHeight ) {\n            // you're at the bottom of the page\n            if ( this.pageNo < this.totalPages ) {\n\n\n                this.pageNo = this.pageNo + 1;\n                this.patientService.getDoctorUsingName( this.docName.value, this.state.value,\n                    this.city.value, this.pageNo, this.pageSize ).subscribe(( data ) => {\n                        if ( data != undefined ) {\n                            // adds the new array to the previous doctor list \n                            this.doctorList.push.apply( this.doctorList, data.json().content );\n\n                        }\n\n                    } );\n            }\n        }\n\n\n    }\n\n\n    showDoctor( docId ) {\n        this.matDialog.open( DoctorPublicProfile, {\n            data: { docId: docId },\n            height: '700px',\n            width: '900px'\n\n        } );\n    }\n\n\n    makeAppointment( docId ) {\n        let url = \"/patient/home/make/appointment/\" + docId;\n        this.router.navigateByUrl( url );\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/search_doc_using_docname.ts","import { Component, HostListener } from \"@angular/core\";\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { Speciality } from \"../model/speciality\";\nimport { State } from \"../model/state\";\nimport { CommonService } from \"../common/common_service\";\nimport { PatientService } from \"./patient_service\";\nimport { City } from \"../model/city\";\nimport { Doctor } from \"../dr/doctor\";\nimport { DoctorInPatient } from \"../model/doctorInPatient\";\nimport { FormResult } from \"../model/formresult\";\nimport { MatDialog, MatSnackBar } from \"@angular/material\";\nimport { DoctorPublicProfile } from \"../dr/doctor_public_profile\";\nimport { Router } from \"@angular/router\";\n@Component( {\n    selector: \"search-doc-using-speciality\",\n    templateUrl: \"./html/search_doc_using_speciality.html\"\n} )\nexport class SearchDocUsingSpeciality {\n\n    formResult: FormResult = new FormResult();\n\n    searchDocUsingSpecialityForm: FormGroup;\n\n    pageNo: number;\n\n    totalPages: number;\n\n    showDoc: boolean = false;\n\n    pageSize: number = 2;\n\n    doctorList: Doctor[] = new Array();\n\n    specialities: Speciality[] = new Array();\n\n    states: State[] = new Array();\n\n    cities: City[] = new Array();\n\n    speciality: FormControl = new FormControl( \"\", [] );\n    state: FormControl = new FormControl( \"\", [] );\n    city: FormControl = new FormControl( \"\", [] );\n\n\n\n    constructor( private formBuilder: FormBuilder, private commonService: CommonService,\n        private patientService: PatientService, private matDialog: MatDialog,\n        private router: Router, private matSnackBar: MatSnackBar ) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.patientService.isSignupComplete();\n\n        this.searchDocUsingSpecialityForm = this.formBuilder.group( {\n            \"speciality\": this.speciality,\n            \"state\": this.state,\n            \"city\": this.city\n        } );\n\n        this.getAllSpecialities();\n        this.getAllStates();\n    }\n\n    /** stateSelected method execute when user select a state it get all the cities exist in that \n     *  state object*/\n    stateSelected() {\n        this.getAllCities( this.state.value );\n    }\n\n    /** getAllSpecialities method get list of specialities from the database and put it in \n     *  the select options */\n    getAllSpecialities() {\n        this.commonService.getAllSpeciality().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.specialities = data.json();\n            }\n        } );\n    }\n\n    /** getAllStates method get the list of all the state from the database*/\n    getAllStates() {\n        this.commonService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n    /** getAllCities method get list of all the cities using the stateid provided */\n    getAllCities( stateId: string ) {\n        this.commonService.getAllCities( stateId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.cities = data.json();\n            }\n        } );\n    }\n\n\n    /** submit executed when user click on the submit button it get the first page of doctor \n     *  list and put it into doctorlist variable */\n    submit() {\n        this.pageNo = 0;\n        this.patientService.getDoctorUsingSpeciality( this.speciality.value, this.state.value\n            , this.city.value, this.pageNo, this.pageSize ).subscribe(( data ) => {\n                if ( data != undefined ) {\n                    this.showDoc = true;\n                    this.totalPages = data.json().totalPages;\n                    this.doctorList = data.json().content;\n                }\n            } );\n    }\n\n\n    /** addDoctor method takes the doctor object and add it into the list of doctors present in the \n     *  patient object */\n\n    addDoctor( doctor: Doctor ) {\n\n        let doctorInPatient: DoctorInPatient = new DoctorInPatient();\n        doctorInPatient.docId = doctor.docId;\n        doctorInPatient.name = doctor.name;\n        doctorInPatient.phoneno = doctor.phoneno;\n        doctorInPatient.appointmentFee = doctor.appointmentFee;\n\n        this.patientService.addDoctor( doctorInPatient ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n                if ( this.formResult.result ) {\n                    this.matSnackBar.open( this.formResult.message, \"Doctor Added\", {\n                        duration: 3000\n                    } );\n                }\n                else if ( this.formResult.error ) {\n                    this.matSnackBar.open( this.formResult.message, \"Error\", {\n                        duration: 3000\n                    } );\n                }\n            }\n        } );\n\n    }\n\n\n    /** this method is binded with the scroll event of the document and it get executed when user \n     * reached at the end of the page and it add more doctor into the list */\n\n    @HostListener( \"window:scroll\", [] )\n    onScroll(): void {\n        if ( ( window.innerHeight + window.scrollY ) >= document.body.offsetHeight ) {\n            // you're at the bottom of the page\n            if ( this.pageNo < this.totalPages ) {\n\n\n                this.pageNo = this.pageNo + 1;\n                this.patientService.getDoctorUsingSpeciality( this.speciality.value, this.state.value,\n                    this.city.value, this.pageNo, this.pageSize ).subscribe(( data ) => {\n                        if ( data != undefined ) {\n                            // adds the new array to the previous doctor list \n                            this.doctorList.push.apply( this.doctorList, data.json().content );\n\n                        }\n\n                    } );\n            }\n        }\n\n\n    }\n\n\n    showDoctor( docId ) {\n        this.matDialog.open( DoctorPublicProfile, {\n            data: { docId: docId },\n            height: '700px',\n            width: '900px'\n\n        } );\n    }\n\n\n    makeAppointment( docId ) {\n        let url = \"/patient/home/make/appointment/\" + docId;\n        this.router.navigateByUrl( url );\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/search_doc_using_speciality.ts","import { Component } from \"@angular/core\";\nimport { PatientService } from \"./patient_service\";\nimport { MatDialog } from \"@angular/material\";\nimport { DoctorInPatient } from \"../model/doctorInPatient\";\nimport { DoctorPublicProfile } from \"../dr/doctor_public_profile\";\n\n\n@Component( {\n    selector: \"show-doc-added\",\n    templateUrl: \"./html/show_doctor_added.html\"\n} )\nexport class ShowDoctorAdded {\n\n\n    doctorList: DoctorInPatient[] = new Array();\n\n\n    constructor( private patientService: PatientService, private matDialog: MatDialog ) {\n\n    }\n\n    ngOnInit() {\n\n        this.patientService.isSignupComplete();\n\n        this.getDoctorList();\n    }\n\n    getDoctorList() {\n        this.patientService.getPatientDoctors().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.doctorList = data.json();\n            }\n        } );\n    }\n\n\n    deleteDoctor( doctorInPatient: DoctorInPatient ) {\n        this.patientService.deleteDoctorFromPatient( doctorInPatient ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                if ( data.json().result ) {\n                    this.getDoctorList();\n                }\n            }\n        } );\n    }\n\n\n    showDocProfile( docId: string ) {\n        this.matDialog.open( DoctorPublicProfile, {\n            data: { docId: docId },\n            height: '700px',\n            width: '900px'\n\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/patient/show_doctors_added.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body, app-root, mat-sidenav-container, .my-content {\\n    margin: 0;\\n    width: 100%;\\n    height: 100%;\\n  }\\n  \\n  mat-sidenav{\\n      width: 70%;\\n      \\n    }\\n  \\n  a{\\n      width:100%;\\n      height:100%;\\n      display: block;\\n  }\\n  \\n\\n  \\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/css/admin_home.css\n// module id = ../../../../../src/app/site_admin/css/admin_home.css\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">Add City In A State</h2>\\n\\n<form [formGroup]=\\\"cityForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t    <mat-form-field>\\n\\t    \\n\\t    \\t <mat-select placeholder=\\\"Select A State\\\" formControlName=\\\"stateId\\\">\\n\\t     \\t\\t<mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">{{state.stateName}}</mat-option>\\n\\t     \\t\\n\\t         </mat-select>\\n\\t    \\n\\t    </mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Enter City Name\\\" formControlName=\\\"cityName\\\">\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input type=\\\"text\\\"  matInput placeholder=\\\"Enter City Pincode\\\" formControlName=\\\"cityPincode\\\">\\n\\t\\t</mat-form-field>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t</div>\\n\\n\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_city.html\n// module id = ../../../../../src/app/site_admin/html/add_city.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">Add Degree Page</h2>\\n\\n<form [formGroup]=\\\"degreeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Enter Degree Name\\\" formControlName=\\\"degreeName\\\">\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_degree.html\n// module id = ../../../../../src/app/site_admin/html/add_degree.html\n// module chunks = main","module.exports = \"<h1 class=\\\"text-center\\\">Add Disease </h1>\\n<form [formGroup]=\\\"diseaseForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t <mat-form-field>\\n\\t\\t \\n\\t\\t \\t<input matInput type=\\\"text\\\" placeholder=\\\"Enter Disease Name\\\" formControlName=\\\"diseaseName\\\">\\n\\t\\t \\t<mat-error *ngIf=\\\"diseaseName.hasError('required')\\\">Disease Name is <strong>Required</strong></mat-error>\\n\\t\\t </mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t <mat-form-field>\\n\\t\\t \\n\\t\\t \\t<textarea matInput placeholder=\\\"Enter Disease Discription\\\" formControlName=\\\"diseaseDiscription\\\"></textarea>\\n\\t\\t \\t<mat-error *ngIf=\\\"diseaseDiscription.hasError('required')\\\">Disease Discription is \\n\\t\\t \\t<strong>Required</strong></mat-error>\\n\\t\\t </mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button  mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Submit</button>\\n\\t\\t\\n\\t</div>\\n\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_disease.html\n// module id = ../../../../../src/app/site_admin/html/add_disease.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">Add Speciality</h2>\\n\\n<form [formGroup]=\\\"specialityForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput type=\\\"text\\\" placeholder=\\\"Enter Speciality\\\" formControlName=\\\"speciality\\\">\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"text\\\" >Submit </button>\\n\\t\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_speciality.html\n// module id = ../../../../../src/app/site_admin/html/add_speciality.html\n// module chunks = main","module.exports = \"<h1 class=\\\"text-center\\\">Add State</h1>\\n<form [formGroup]=\\\"stateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput type=\\\"text\\\" formControlName=\\\"stateName\\\" placeholder=\\\"Enter State Name\\\"> \\n\\t<mat-error *ngIf=\\\"stateName.hasError('required')\\\">State Name is <strong>Required</strong></mat-error>\\n\\t\\t</mat-form-field>\\n\\t</div>\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/add_state.html\n// module id = ../../../../../src/app/site_admin/html/add_state.html\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\n\\t<button mat-button (click)=\\\"sidenav.open()\\\" ><mat-icon>menu</mat-icon></button>\\n\\n\\t<button mat-button >Home</button>\\n\\n\\n</mat-toolbar>\\n\\n\\n<mat-sidenav-container >\\n\\t<mat-sidenav mode=\\\"over\\\"  #sidenav>\\n\\n\\t\\t<mat-nav-list>\\n\\n\\t\\t\\t<h3>Add</h3>\\n\\t\\t\\t<mat-divider></mat-divider>\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"admin/disease/add\\\">Add Disease</a>\\n\\t\\t\\t</mat-list-item>\\n\\n\\t\\t\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"admin/state/add\\\">Add State</a>\\n\\n\\t\\t\\t</mat-list-item>\\n\\t\\t\\n\\t\\t    <!--- <mat-list-item>\\n\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"admin/city/add\\\">Add City</a>\\n\\n\\t\\t\\t</mat-list-item> -->\\n\\t\\t\\t\\t\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"admin/degree/add\\\">Add Degree</a>\\n\\n\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t<mat-list-item>\\n\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"admin/speciality/add\\\">Add Speciality</a>\\n\\n\\t\\t\\t</mat-list-item>\\n\\n\\t\\t\\t<h3>Show</h3>\\n\\n\\t\\t\\t<mat-divider></mat-divider>\\n\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"admin/state/all\\\">State List</a>\\n\\t\\t\\t</mat-list-item>\\n\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t<a class=\\\"nav-list\\\" routerLink=\\\"admin/degree/list\\\">Degree List</a>\\n\\t\\t\\t</mat-list-item>\\n\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t<a class=\\\"nav-list\\\" routerLink=\\\"admin/disease/list\\\">Disease List</a>\\n\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\n\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t<a class=\\\"nav-list\\\" routerLink=\\\"admin/speciality/list\\\">Specialities List</a>\\n\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\n\\n\\t\\t</mat-nav-list>\\n\\n\\n\\t</mat-sidenav>\\n\\t\\n\\t<router-outlet class=\\\"my-content\\\"></router-outlet>\\n\\n\\t\\n  </mat-sidenav-container>\\n\\n\\n<!-- <div class=\\\"col-md-4\\\">\\n\\n <div class=\\\"list-group\\\">\\n \\t\\t\\n \\t\\t<a class=\\\"list-group-item list-group-item-info\\\" data-toggle=\\\"collapse\\\" href=\\\"#add\\\" >Add<i class=\\\"caret\\\" ></i></a>\\n \\t\\t<div class=\\\"collapse\\\" id=\\\"add\\\">\\n \\t\\t\\t\\t\\n \\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/disease/add\\\">Add Disease</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/state/add\\\">Add State</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/city/add\\\">Add City</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/degree/add\\\">Add Degree</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/speciality/add\\\">Add Speciality</li>\\n \\t\\t\\n \\t\\t</div>\\n \\t\\t<a class=\\\"list-group-item list-group-item-info\\\" data-toggle=\\\"collapse\\\" href=\\\"#show\\\">Show<i class=\\\"caret\\\"></i></a>\\n \\t\\t\\n \\t\\t<div class=\\\"collapse\\\" id=\\\"show\\\">\\n \\t\\t\\t\\t\\n \\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/state/all\\\">State List</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/degree/list\\\">Degree List</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/disease/list\\\">Disease List</li>\\n \\t\\t\\n \\t\\t</div>\\n \\t\\n </div>\\n \\n\\n</div>\\n\\n\\n<div class=\\\"col-md-8\\\">\\n\\n\\t<router-outlet></router-outlet>\\n\\n\\n</div>\\n\\n -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/admin_home.html\n// module id = ../../../../../src/app/site_admin/html/admin_home.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">list of the cities</h2>\\n\\n\\n\\n<div class=\\\"flex-row\\\">\\n\\t\\t<mat-card *ngFor=\\\"let city of cities;let x = index\\\">\\n\\t\\n\\t\\t\\t\\t<mat-card-title>Name:{{city.cityName}}</mat-card-title>\\n\\t\\t\\t\\t<mat-card-subtitle>\\tPinCode:{{city.cityPincode}}</mat-card-subtitle>\\n\\n\\t\\t\\t\\t<mat-card-actions>\\n\\t\\t\\t\\t\\t<button mat-button color=\\\"accent\\\" (click)=\\\"remove(x)\\\">Remove</button>\\n\\t\\t\\t\\t</mat-card-actions>\\n\\t\\t</mat-card>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_city.html\n// module id = ../../../../../src/app/site_admin/html/list_city.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\"> List Of Degree</h2>\\n\\n<div class=\\\"flex-row\\\" >\\n\\n\\t<mat-card *ngFor=\\\"let degree of degrees\\\">\\n\\t     \\n\\t     \\n\\t\\t<mat-card-title>{{degree.degreeName}}</mat-card-title>\\n\\t\\t\\n\\t\\t<mat-card-actions>\\n\\n\\t\\t\\t<button mat-button color=\\\"accent\\\" (click)=\\\"remove(degree.degreeId)\\\">Remove</button>\\n\\t\\t</mat-card-actions>\\n\\t\\t \\n    </mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_degree.html\n// module id = ../../../../../src/app/site_admin/html/list_degree.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">List of Disease</h2>\\n\\n<div class=\\\"flex-row\\\">\\n\\n\\t<mat-card *ngFor=\\\"let disease of diseases\\\">\\n\\t\\n\\t\\t<mat-card-title>{{disease.diseaseName}}</mat-card-title>\\n\\n\\t\\t<mat-card-actions>\\n\\n\\t\\t\\t<button mat-button color=\\\"accent\\\" (click)=\\\"remove(disease.diseaseId)\\\">Remove</button>\\n\\t\\t</mat-card-actions>\\n\\t\\n\\t</mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_disease.html\n// module id = ../../../../../src/app/site_admin/html/list_disease.html\n// module chunks = main","module.exports = \"<h3 class=\\\"text-center\\\">List Of Specialities</h3>\\n\\n<div class=\\\"flex-row\\\">\\n\\n<mat-card *ngFor=\\\"let speciality of specialities\\\"> \\n\\n    <mat-card-title>{{speciality.specialityName}}</mat-card-title>\\n\\n    <mat-card-actions>\\n\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"remove(speciality.specialityName)\\\">Remove</button>\\n    \\n    </mat-card-actions>\\n\\n</mat-card>\\n\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_specialities.html\n// module id = ../../../../../src/app/site_admin/html/list_specialities.html\n// module chunks = main","module.exports = \"<h2 class=\\\"text-center\\\">List of the state</h2>\\n\\n<div  class=\\\"flex-row\\\" >\\n\\n<div *ngFor=\\\"let state of states\\\">\\n\\t\\n\\t<mat-card >\\n\\t\\t\\t<mat-card-title>{{state.stateName}}</mat-card-title>\\n\\n\\t\\t\\t<mat-card-actions>\\n\\n\\t\\t\\t\\t<button mat-button (click)=\\\"showCities(state.stateId)\\\">Show Cities</button>\\n\\t\\t\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"addCity(state.stateId)\\\" >Add City</button>\\n\\t\\t\\t\\t<button mat-button color=\\\"accent\\\" (click)=\\\"removeState(state.stateId)\\\">Remove State</button>\\n\\n\\t\\t\\t</mat-card-actions>\\n\\t</mat-card>\\n\\t\\n\\t<!-- <ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\" ><a  [routerLink]=\\\"['admin/city/all',state.stateId]\\\" \\n\\t\\t\\t> {{state.stateName}}</a></li>\\n\\t\\n\\t</ul> -->\\n\\t\\n\\t\\n\\n\\n</div>\\n\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/html/list_state.html\n// module id = ../../../../../src/app/site_admin/html/list_state.html\n// module chunks = main","import { Component ,Inject } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { State } from \"../model/state\";\nimport { City } from \"../model/city\";\nimport { FormResult } from \"../model/formresult\";\nimport {MatSnackBar , MAT_DIALOG_DATA} from \"@angular/material\";\n\n@Component( {\n    selector: \"add-city\",\n    templateUrl: \"./html/add_city.html\"\n} )\nexport class SiteAdminAddCity {\n\n    cityForm: FormGroup;\n\n    formResult: FormResult = new FormResult();\n\n    states: State[] = new Array();\n\n    cityName: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    cityPincode: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    stateId: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ,\n    private matSnackBar:MatSnackBar ,@Inject(MAT_DIALOG_DATA) private data) {\n\n    }\n\n\n    ngOnInit() {\n        this.getAllState();\n        this.cityForm = this.formBuilder.group( {\n            cityName: this.cityName,\n            stateId: this.stateId,\n            cityPincode: this.cityPincode\n        } );\n\n       this.stateId.setValue(this.data.stateId);\n    }\n\n    getAllState() {\n        this.siteAdminService.getAllState().subscribe(( data ) => {\n            if ( data.json() != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n\n\n    submit() {\n\n        let city: City = new City();\n        city.cityName = this.cityForm.value.cityName;\n        city.cityPincode = this.cityForm.value.cityPincode;\n        let stateId = this.cityForm.value.stateId;\n        console.log(stateId);\n        this.siteAdminService.addCity( city, stateId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n                if(this.formResult.result){\n                    this.matSnackBar.open(this.formResult.message,\"Done\",{\n                        duration:3000\n                    });\n                }\n                else if(this.formResult.error){\n                    this.matSnackBar.open(this.formResult.message,\"Error\",{\n                        duration:3000\n                    });\n                }\n\n            }\n        } );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_city.ts","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { Degree } from \"../model/degree\";\nimport { FormResult } from \"../model/formresult\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { MatSnackBar} from \"@angular/material\";\n\n\n@Component( {\n    selector: \"add-degree\",\n    templateUrl: \"./html/add_degree.html\"\n} )\n\nexport class SiteAdminAddDegree {\n\n    degreeForm: FormGroup;\n\n    formResult: FormResult = new FormResult();\n\n    degreeName: FormControl = new FormControl( \"\", [] );\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ,\n    private matSnackBar:MatSnackBar) {\n\n        this.degreeForm = this.formBuilder.group( {\n            degreeName: this.degreeName\n        } );\n    }\n\n\n    submit() {\n        let degree: Degree = new Degree();\n        degree.degreeName = this.degreeForm.value.degreeName;\n        this.siteAdminService.addDegree( degree ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n                if(this.formResult.result){\n                    this.matSnackBar.open(this.formResult.message,\"Done\",{\n                        duration:3000\n                    });\n                }\n                else if (this.formResult.error){\n                    this.matSnackBar.open(this.formResult.message,\"Error\",{\n                        duration:3000\n                    });\n                }\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_degree.ts","import { Component } from \"@angular/core\";\nimport { Disease } from \"../model/disease\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { FormControl, FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport {FormResult}from \"../model/formresult\";\n\nimport {MatSnackBar} from \"@angular/material\";\n\n\n@Component( {\n    selector: \"add-disease\",\n    templateUrl: \"./html/add_disease.html\"\n} )\nexport class SiteAdminAddDisease {\n\n\n    formResult:FormResult=new FormResult();\n\n    diseaseForm: FormGroup;\n\n    diseaseName: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n\n\n\n    diseaseDiscription: FormControl = new FormControl( \"\", [\n\n        Validators.required\n    ] );\n\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ,\n    private matSnackBar:MatSnackBar) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.diseaseForm = this.formBuilder.group( {\n\n            diseaseName: this.diseaseName,\n            diseaseDiscription: this.diseaseDiscription\n\n        } );\n\n\n    }\n\n    submit() {\n        let disease: Disease = new Disease();\n        disease.diseaseName = this.diseaseForm.value.diseaseName;\n        disease.diseaseDiscription = this.diseaseForm.value.diseaseDiscription;\n        this.siteAdminService.saveDisease( disease ).subscribe(( data ) => {\n              if(data!=undefined){\n                  this.formResult=data.json();\n\n                  if(this.formResult.result){\n                    this.matSnackBar.open(this.formResult.message,\"Done\",{\n                        duration:3000\n                    });\n                  }\n                    else if (this.formResult.error){\n                        this.matSnackBar.open(this.formResult.message,\"Error\",{\n                            duration:3000\n                        });\n                    }\n              }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_disease.ts","import { Component } from \"@angular/core\";\n\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\nimport { Degree } from \"../model/degree\";\n\nimport { Speciality } from \"../model/speciality\";\nimport { FormResult } from \"../model/formresult\";\nimport {MatSnackBar} from \"@angular/material\";\n\nimport { SiteAdminService } from \"./site_admin_service\";\n\n@Component( {\n    selector: \"add-speciality\",\n    templateUrl: \"./html/add_speciality.html\"\n} )\n\nexport class SiteAdminAddSpeciality {\n\n    specialityForm: FormGroup;\n\n    degrees: Degree[];\n\n    formResult: FormResult = new FormResult();\n\n\n\n    speciality: FormControl = new FormControl( '', [] );\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ,\n    private matSnackBar:MatSnackBar) {\n\n    }\n\n    ngOnInit() {\n        this.getDegreelist();\n        this.specialityForm = this.formBuilder.group( {\n            speciality: this.speciality\n\n        } );\n    }\n\n    getDegreelist() {\n        this.siteAdminService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.degrees = data.json();\n            }\n        } );\n    }\n\n    submit() {\n\n        let speciality: Speciality = new Speciality();\n        speciality.specialityName = this.specialityForm.value.speciality;\n\n        this.siteAdminService.addSpeciality( speciality ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n\n                if(this.formResult.result){\n                    this.matSnackBar.open(this.formResult.message,\"Done\",{\n                        duration:3000\n                    });\n                }\n                else if (this.formResult.error){\n                    this.matSnackBar.open(this.formResult.message,\"Error\",{\n                        duration:3000\n                    });\n                }\n            }\n\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_speciality.ts","import { Component } from \"@angular/core\";\n\nimport { FormGroup, FormControl, Validators, FormBuilder } from \"@angular/forms\";\n\nimport { State } from \"../model/state\";\n\nimport { FormResult } from \"../model/formresult\";\n\nimport { SiteAdminService } from \"./site_admin_service\";\n\nimport {MatSnackBar} from \"@angular/material\";\n\n\n@Component( {\n    selector: \"add-state\",\n    templateUrl: \"./html/add_state.html\"\n} )\nexport class SiteAdminAddState {\n\n    stateForm: FormGroup;\n\n   formResult: FormResult = new FormResult();\n\n    stateName: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ,\n    private matSnackBar:MatSnackBar) {\n\n\n    }\n\n    ngOnInit() {\n        this.stateForm = this.formBuilder.group( {\n            stateName: this.stateName\n        } );\n    }\n\n\n    submit() {\n        let state: State = new State();\n        state.stateName = this.stateForm.value.stateName;\n        this.siteAdminService.addState( state ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n\n                if(this.formResult.result){\n                    this.matSnackBar.open(this.formResult.message,\"Done\",{\n                        duration:3000\n                    });\n                }\n                else if (this.formResult.error){\n                    this.matSnackBar.open(this.formResult.message,\"Error\",{\n                        duration:3000\n                    });\n                }\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_add_state.ts","import { Component } from \"@angular/core\";\n\n@Component( {\n    selector: \"admin-home\",\n    templateUrl: \"./html/admin_home.html\",\n    styleUrls:[\"./css/admin_home.css\"]\n} )\nexport class SiteAdminHome {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_home.ts","import { Component ,Inject } from \"@angular/core\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { City } from \"../model/city\";\nimport {MAT_DIALOG_DATA, MatDialog,MatDialogRef}from \"@angular/material\";\nimport {ConfirmationDialog} from \"../common/confirmation_dialog\";\nimport 'rxjs/add/operator/switchMap';\n\n\n@Component( {\n    selector: \"list-city\",\n    templateUrl: \"./html/list_city.html\"\n} )\n\nexport class SiteAdminListCity {\n\n\n    \n    stateId: string;\n\n    cities: City[];\n\n    confimationDialogRef:MatDialogRef<ConfirmationDialog>;\n\n\n    constructor( private siteAdminService: SiteAdminService , @Inject(MAT_DIALOG_DATA) public data:any,\nprivate matDialog:MatDialog) {\n\n\n    }\n\n    ngOnInit() {\n\n        this.stateId=this.data.stateId;\n       \n        this.getAllCity();\n       \n\n    }\n\n    getAllCity(){\n\n        this.siteAdminService.getAllCity(this.stateId).subscribe((data)=>{\n            if(data!=undefined){\n                this.cities=data.json();\n            }\n        });\n    }\n\n    remove(index){\n       \n        this.confimationDialogRef=this.matDialog.open(ConfirmationDialog);\n\n        this.confimationDialogRef.afterClosed().subscribe((result)=>{\n            if(result!=undefined){\n                if(result){\n\n                    this.cities.splice(index,1);\n                    \n                    this.siteAdminService.removeCity(this.cities,this.stateId).subscribe((data)=>{\n                        console.log(data);\n                    });\n                }\n            }\n        });\n\n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_city.ts","import { Component } from \"@angular/core\";\nimport { FormResult } from \"../model/formresult\";\nimport { Degree } from \"../model/degree\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport {ConfirmationDialog} from \"../common/confirmation_dialog\";\nimport {MatDialog , MatDialogRef} from '@angular/material';\n\n\n@Component( {\n    selector: \"list-degree\",\n    templateUrl: \"./html/list_degree.html\"\n} )\n\nexport class SiteAdminListDegree {\n\n    formResult: FormResult = new FormResult();\n\n    confirmationDialogRef:MatDialogRef<ConfirmationDialog>;\n\n    degrees: Degree[];\n\n    constructor( private siteAdminService: SiteAdminService , private matDialog:MatDialog) {\n\n    }\n\n    ngOnInit() {\n        \n        this.getDegrees();\n    }\n\n\n    getDegrees(){\n\n        this.siteAdminService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.degrees = data.json();\n            }\n        } );\n\n    }\n\n\n    remove(degreeId:string){\n\n        this.confirmationDialogRef=this.matDialog.open(ConfirmationDialog);\n\n        this.confirmationDialogRef.afterClosed().subscribe((result)=>{\n            if(result!=undefined){\n                if(result){\n\n                    this.siteAdminService.removeDegree(degreeId).subscribe((data)=>{\n                        if(data!=undefined){\n                            if(data.status==200){\n                                this.getDegrees();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n\n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_degree.ts","import { Component } from \"@angular/core\";\nimport { Disease } from \"../model/disease\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport {ConfirmationDialog} from \"../common/confirmation_dialog\";\nimport {MatDialogRef,MatDialog} from \"@angular/material\";\n\n@Component( {\n    selector: \"list-disease\",\n    templateUrl: \"./html/list_disease.html\"\n} )\n\nexport class SiteAdminListDisease {\n\n    diseases: Disease[];\n\n    confirmationDialogRef:MatDialogRef<ConfirmationDialog>;\n\n    constructor( private siteAdminService: SiteAdminService , private matDialog:MatDialog) {\n\n    }\n\n    ngOnInit() {\n       this.getAllDisease();\n    }\n\n    getAllDisease(){\n\n        this.siteAdminService.getAllDisease().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.diseases = data.json();\n            }\n        } );\n    }\n\n    remove(diseaseId){\n\n        this.confirmationDialogRef=this.matDialog.open(ConfirmationDialog);\n        console.log(diseaseId);\n\n        this.confirmationDialogRef.afterClosed().subscribe((result)=>{\n            if(result!=undefined){\n                if(result){\n\n                    this.siteAdminService.removeDisease(diseaseId).subscribe((data)=>{\n                        if(data!=undefined){\n                            let res=data;\n                            if(res.status==200){\n                                this.getAllDisease();\n                            }\n                        }\n                    });\n\n                }\n            }\n        });\n\n       \n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_disease.ts","import {Component} from \"@angular/core\";\nimport {Speciality} from \"../model/speciality\";\nimport {CommonService} from \"../common/common_service\";\nimport {MatDialog,MatDialogRef} from \"@angular/material\";\nimport {ConfirmationDialog} from \"../common/confirmation_dialog\";\nimport {SiteAdminService} from \"./site_admin_service\";\n\n\n@Component({\n    selector:\"list-specialities\",\n    templateUrl:\"./html/list_specialities.html\"\n})\nexport class SiteAdminListSpecialities {\n\n    specialities:Speciality[]= new Array();\n\n    confimationDialogRef:MatDialogRef<ConfirmationDialog>;\n\n    constructor(private commonService:CommonService , private matDialog:MatDialog ,\n    private siteAdminService:SiteAdminService){\n\n    }\n\n    ngOnInit(){\n\n       this.getSpeciality();\n\n    }\n\n    getSpeciality(){\n        this.commonService.getAllSpeciality().subscribe((data)=>{\n            if(data!=undefined){\n                this.specialities=data.json();\n            }\n        });\n    }\n\n    remove(specialityName:string){\n\n        this.confimationDialogRef=this.matDialog.open(ConfirmationDialog);\n\n        this.confimationDialogRef.afterClosed().subscribe((result)=>{\n            if(result){\n                this.siteAdminService.removeSpeciality(specialityName).subscribe((data)=>{\n                    if(data!=undefined){\n                        if(data.status==200){\n                            this.getSpeciality();\n                        }\n                    }\n                });\n\n            }\n        });\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_specialities.ts","import { Component } from \"@angular/core\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { State } from \"../model/state\";\nimport {MatDialog,MatDialogRef} from \"@angular/material\";\nimport {SiteAdminListCity} from \"./site_admin_list_city\";\nimport {ConfirmationDialog} from \"../common/confirmation_dialog\";\nimport {SiteAdminAddCity} from \"./site_admin_add_city\";\n@Component( {\n    selector: \"list-state\",\n    templateUrl: \"./html/list_state.html\"\n} )\nexport class SiteAdminListState {\n\n    states: State[];\n\n    confirmationDialogRef:MatDialogRef<ConfirmationDialog>;\n\n    constructor( private siteAdminService: SiteAdminService , private matDialog:MatDialog ) {\n\n    }\n\n    ngOnInit() {\n\n        this.getAllStates();\n\n    }\n\n    getAllStates(){\n\n        this.siteAdminService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n\n    }\n\n    /*** removeState takes stateid and remove it from the database */\n   \n    removeState(stateId){\n\n        this.confirmationDialogRef=this.matDialog.open(ConfirmationDialog);\n\n        this.confirmationDialogRef.afterClosed().subscribe((data)=>{\n            if(data!=undefined){\n              \n                if(data){\n\n                    this.siteAdminService.removeState(stateId).subscribe((data)=>{\n                        if(data!=undefined){\n                            let res=data;\n                            if(res.status==200){\n                                this.getAllStates();\n                            }\n                        }\n                    });\n\n                }\n\n            }\n        });\n\n       \n    }\n\n    addCity(stateId){\n        \n        this.matDialog.open(SiteAdminAddCity,{\n            data:{stateId:stateId},\n            height:\"700px\",\n            width:\"800px\"\n        });\n    }\n\n\n    showCities(stateId){\n    \n       this.matDialog.open(SiteAdminListCity,{\n            data:{stateId:stateId},\n            height:\"700px\",\n            width:\"800px\"\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_list_state.ts","import { NgModule } from \"@angular/core\";\n\n\nimport { SiteAdminHome } from \"./site_admin_home\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { SiteAdminAddDisease } from \"./site_admin_add_disease\";\n\nimport { SiteAdminRoutingModule } from \"./site_admin_routing_module\";\n\nimport { MaterialModule } from \"../material/material.module\";\n\nimport { SiteAdminAddState } from \"./site_admin_add_state\";\nimport { SiteAdminListState } from \"./site_admin_list_state\";\n\nimport { SiteAdminAddCity } from \"./site_admin_add_city\";\nimport { SiteAdminListCity } from \"./site_admin_list_city\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { SiteAdminAddDegree } from \"./site_admin_add_degree\";\nimport { SiteAdminListDegree } from \"./site_admin_list_degree\";\nimport { SiteAdminListDisease } from \"./site_admin_list_disease\";\nimport { SiteAdminAddSpeciality } from \"./site_admin_add_speciality\";\nimport {SiteAdminListSpecialities} from \"./site_admin_list_specialities\";\nimport {ConfirmationDialog} from \"../common/confirmation_dialog\";\n\n\n@NgModule( {\n    imports: [SiteAdminRoutingModule, MaterialModule, ReactiveFormsModule, CommonModule],\n    declarations: [SiteAdminAddDisease, SiteAdminAddState, SiteAdminAddCity, SiteAdminHome, SiteAdminListCity\n        , SiteAdminListState, SiteAdminAddDegree, SiteAdminListDegree, SiteAdminListDisease, SiteAdminAddSpeciality\n    ,SiteAdminListSpecialities],\n    exports: [],\n    providers: [SiteAdminService],\n    entryComponents:[ConfirmationDialog]\n} )\n\nexport class SiteAdminModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_module.ts","import { Route, Routes } from \"@angular/router\";\n\nimport { SiteAdminAddDisease } from \"./site_admin_add_disease\";\n\nimport { SiteAdminAddState } from \"./site_admin_add_state\";\n\nimport { SiteAdminAddCity } from \"./site_admin_add_city\";\n\nimport { SiteAdminHome } from \"./site_admin_home\";\n\nimport { SiteAdminListCity } from \"./site_admin_list_city\";\n\nimport { SiteAdminListState } from \"./site_admin_list_state\";\n\nimport { SiteAdminAddDegree } from \"./site_admin_add_degree\";\n\nimport { SiteAdminListDegree } from \"./site_admin_list_degree\";\n\nimport { SiteAdminAddSpeciality } from \"./site_admin_add_speciality\";\n\nimport { SiteAdminListDisease } from \"./site_admin_list_disease\";\n\nimport {SiteAdminListSpecialities} from \"./site_admin_list_specialities\";\n\n\nconst siteAdminAddDisease: Route = { path: \"admin/disease/add\", component: SiteAdminAddDisease };\n\nconst siteAdminAddState: Route = { path: \"admin/state/add\", component: SiteAdminAddState };\n\nconst siteAdminAddCity: Route = { path: \"admin/city/add\", component: SiteAdminAddCity };\n\nconst siteAdminListCity: Route = { path: \"admin/city/all/:stateId\", component: SiteAdminListCity };\n\nconst siteAdminAddDegree: Route = { path: \"admin/degree/add\", component: SiteAdminAddDegree };\n\nconst siteAdminListDegree: Route = { path: \"admin/degree/list\", component: SiteAdminListDegree };\n\nconst siteAdminListDisease: Route = { path: \"admin/disease/list\", component: SiteAdminListDisease };\n\nconst siteAdminAddSpeciality: Route = { path: \"admin/speciality/add\", component: SiteAdminAddSpeciality};\n\nconst siteAdminListSpecialities:Route={path:\"admin/speciality/list\",component:SiteAdminListSpecialities};\n\n\n\nconst siteAdminListState: Route = {\n    path: \"admin/state/all\", component: SiteAdminListState, children: [\n\n        siteAdminListCity\n\n    ]\n};\n\n\nconst siteAdminHome: Route = {\n    path: \"admin/home\", component: SiteAdminHome,\n    children: [\n        siteAdminAddDisease,\n        siteAdminAddState,\n        siteAdminAddCity,\n        siteAdminListState,\n        siteAdminAddDegree,\n        siteAdminListDegree,\n        siteAdminListDisease,\n        siteAdminAddSpeciality,\n        siteAdminListSpecialities\n    ]\n}\n\nexport const SiteAdminRoutes: Routes = [siteAdminHome];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_routing_config.ts","import { NgModule } from \"@angular/core\";\n\nimport { SiteAdminRoutes } from \"./site_admin_routing_config\";\nimport { RouterModule } from \"@angular/router\";\n\n\n@NgModule( {\n    imports: [RouterModule.forChild( SiteAdminRoutes )],\n    declarations: [],\n    exports: [RouterModule],\n    providers: []\n} )\n\nexport class SiteAdminRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, URLSearchParams } from \"@angular/http\";\nimport { Disease } from \"../model/disease\";\nimport { Degree } from \"../model/degree\";\nimport { State } from \"../model/state\";\nimport { Speciality } from \"../model/speciality\";\nimport { City } from \"../model/city\";\nimport {MatSnackBar} from \"@angular/material\";\n\n\n@Injectable()\nexport class SiteAdminService {\n\n\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n    constructor( private http: Http ) {\n\n    }\n\n\n    saveDisease( disease: Disease ) {\n        let url = \"/api/private/admin/disease/add\";\n        return this.http.post( url, disease, this.commOptions );\n    }\n\n\n    addState( state: State ) {\n        let url = \"/api/private/admin/state/add\";\n        return this.http.post( url, state, this.commOptions );\n    }\n\n    getAllState() {\n        let url = \"/api/public/state/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    getAllCity( stateId: string ) {\n        let url = \"/api/public/city/all\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"stateId\", stateId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n    addCity( city: City, stateId: string ) {\n        let url = \"/api/private/admin/city/add\";\n        let body = { \"city\": city, \"stateId\": stateId };\n\n        return this.http.post( url, body, this.commOptions );\n    }\n\n\n    addDegree( degree: Degree ) {\n        let url = \"/api/private/degree/add\";\n        return this.http.post( url, degree, this.commOptions );\n\n    }\n\n    getAllDegree() {\n        let url = \"/api/public/degree/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    getAllDisease() {\n        let url = \"/api/public/disease/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    addSpeciality( speciality: Speciality ) {\n        let url = \"/api/private/speciality/add\";\n        return this.http.post( url, speciality, this.commOptions );\n    }\n\n\n    // remove state method remove the state from database it takes one parameter stateId \n    // and remove the state with that stateid\n    removeState(stateId:string){\n        let url=\"/api/private/admin/delete/state\";\n\n        let param:URLSearchParams= new URLSearchParams();\n        param.set(\"stateId\",stateId);\n        this.commOptions.params=param;\n        return this.http.delete(url,this.commOptions);\n    }\n\n    /** removeDisease method remove the disease from the database it takes one parameter \n     *  diseaseId and remove that disease from database\n     */\n    removeDisease(diseaseId:string){\n        let url=\"/api/private/admin/delete/disease\";\n        let param:URLSearchParams = new URLSearchParams();\n        param.set(\"diseaseId\",diseaseId);\n        this.commOptions.params=param;\n        return this.http.delete(url,this.commOptions);\n    }\n\n\n    /** removeDegree method remove the degree from the database it takes one parameter\n     *  degreeId and remove it from the database\n     */\n\n     removeDegree(degreeId:string){\n         let url=\"/api/private/admin/delete/degree\";\n         let param:URLSearchParams= new URLSearchParams();\n         param.set(\"degreeId\",degreeId);\n         this.commOptions.params=param;\n         return this.http.delete(url,this.commOptions);\n     }\n  \n     /** removeCity method remove the city from database it take stateId and newCityList \n      *  as parameter and remove old list with the new one \n      */\n\n      removeCity(newCityList:City[],stateId:string){\n        \n        let url=\"/api/private/admin/delete/city\";\n        let param:URLSearchParams=new URLSearchParams();\n        param.set(\"stateId\",stateId);\n        this.commOptions.params=param;\n\n        return this.http.post(url,newCityList,this.commOptions);\n\n\n      }\n\n      /** removeSpeciality remove a speciality from the database it takes single parameter \n       *  which is the specialityName and remove the speciality with that name \n       */\n\n       removeSpeciality(specialityName:string){\n           let url=\"/api/private/admin/delete/speciality\";\n           let param:URLSearchParams = new URLSearchParams();\n           param.set(\"specialityName\",specialityName);\n           this.commOptions.params=param;\n           return this.http.delete(url,this.commOptions);\n       }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/site_admin/site_admin_service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fullwidth{\\n\\twidth:100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/user/css/login.css\n// module id = ../../../../../src/app/user/css/login.css\n// module chunks = main","module.exports = \"<site-main-header></site-main-header>\\n\\n<h3 *ngIf=\\\"error\\\">User Name or Password is Wrong Please try Again</h3>\\n\\n<div class=\\\"content\\\">\\n\\n\\t<h2 class=\\\"text-center\\\">Sign In </h2>\\n\\n\\t\\t<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field class=\\\"fullwidth\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input matInput required =\\\"text\\\" placeholder=\\\"Mobile No\\\" formControlName=\\\"mobileNo\\\" name=\\\"email\\\">\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"mobileNo.hasError('required')\\\">\\n\\t\\t\\t\\t\\t\\tMobile No is <strong>required</strong>\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t  <mat-error *ngIf=\\\"mobileNo.hasError('minlength')\\\">\\n\\t\\t\\t\\t\\t  Min length of mobile no is 10 digit\\n\\t\\t\\t\\t  </mat-error>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"mobileNo.hasError('maxlength')\\\">\\n\\t\\t\\t\\t\\t\\t  Max length of mobile no is 10 digit\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t       \\n\\t        \\n\\t        <mat-form-field class=\\\"fullwidth\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input matInput required type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" name=\\\"password\\\">\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"password.hasError('required')\\\">\\n\\t\\t\\t\\t\\t\\tEnter the Password\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t        \\n\\t       \\n\\t        \\n\\t        <br>\\n\\t        <br>\\n\\t        \\n\\t        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n</form>\\n\\n\\n</div>\\n\\n\\n\\t\\t\\t\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/user/html/login.html\n// module id = ../../../../../src/app/user/html/login.html\n// module chunks = main","module.exports = \"<site-main-header></site-main-header> \\n<h3 class=\\\"text-center\\\">Please Enter Your Otp</h3>\\n\\n<form [formGroup]=\\\"mobileVarificationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n<mat-form-field>\\n\\n    <input matInput placeholder=\\\"Mobile No\\\" formControlName=\\\"mobileNo\\\">\\n    <span matPrefix>+91</span>\\n    \\n</mat-form-field>\\n\\n\\n<mat-form-field>\\n\\n    <input matInput placeholder=\\\"Enter Otp\\\" formControlName=\\\"otp\\\">\\n</mat-form-field>\\n\\n\\n<div class=\\\"flex-row\\\">\\n\\n<button mat-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\n<button mat-button type=\\\"button\\\" color=\\\"accent\\\" disabled=\\\"{{deactivated}}\\\"\\n (click)=\\\"sendOtpAgain()\\\">{{countDown | async}}</button>\\n\\n <button mat-button type=\\\"button\\\" color=\\\"accent\\\" disabled=\\\"{{deactivatedVoiceOtp}}\\\"\\n (click)=\\\"sendOtpAgainVoice()\\\">{{countDownVoice | async}}</button>\\n\\n</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/user/html/user_phone_varification.html\n// module id = ../../../../../src/app/user/html/user_phone_varification.html\n// module chunks = main","module.exports = \"  <site-main-header></site-main-header> \\n  \\n  \\n  \\n  <div class=\\\"content\\\">\\n  \\n <h2 class=\\\"text-center\\\">User Signup Form </h2>\\n  \\t\\t\\t\\n  <form [formGroup]=\\\"userSignupForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  \\n  \\n  \\n \\n      <mat-form-field>\\n  \\t\\t\\t\\n  \\t\\t\\t<input matInput required type =\\\"text\\\" placeholder=\\\"Mobile No\\\" name=\\\"username\\\" formControlName=\\\"mobileNo\\\" >\\n  \\t\\t\\t<mat-error *ngIf=\\\"mobileNo.hasError('required')\\\">\\n  \\t\\t\\t\\tMobile No is <strong>required</strong>\\n\\t\\t\\t  </mat-error>\\n\\t\\t\\t<mat-error *ngIf=\\\"mobileNo.hasError('minlength')\\\">\\n\\t\\t\\t\\tMin length of mobile no is 10 digit\\n\\t\\t\\t</mat-error>\\n  \\t\\t\\t<mat-error *ngIf=\\\"mobileNo.hasError('maxlength')\\\">\\n\\t\\t\\t\\t\\tMax length of mobile no is 10 digit\\n  \\t\\t\\t</mat-error>\\n  \\t\\t</mat-form-field>\\n\\n  \\n \\n    \\t<mat-form-field>\\n  \\t\\t\\t<input matInput required type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n  \\t\\t\\n  \\t\\t\\t<mat-error *ngIf=\\\"password.hasError('required')\\\">\\n  \\t\\t\\t\\tPassword is <strong>required</strong>\\n  \\t\\t\\t</mat-error>\\n  \\t\\t</mat-form-field>\\n  \\n  \\n  \\t\\t\\t \\n  \\t\\t\\t\\n  \\t\\t\\t <mat-radio-group formControlName=\\\"role\\\" name=\\\"role\\\" required=true>\\n  \\t\\t\\t\\t<mat-radio-button  value=\\\"ROLE_DOCTOR\\\">I am Doctor</mat-radio-button>\\n  \\t\\t\\t\\t<mat-radio-button  value=\\\"ROLE_PATIENT\\\">I am Patient</mat-radio-button>\\n  \\t\\t\\t\\t\\n\\t\\t\\t\\t  <mat-error *ngIf=\\\"role.hasError('required')\\\">Select A Role</mat-error>\\n\\t\\t\\t  </mat-radio-group>\\n\\t\\t\\t  \\n\\t\\t\\t  \\n  \\t\\t\\t\\n  \\t\\t<br>\\n  \\t\\t<br>  \\n  \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n  \\n  </form>\\n  \\n  \\n  \\n  </div>\\n  \\n  \\n  \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/Documents/edr_webapp/src/app/user/html/user_signup.html\n// module id = ../../../../../src/app/user/html/user_signup.html\n// module chunks = main","import { Component, Inject } from \"@angular/core\";\nimport { User } from \"./user\";\nimport { Router,ActivatedRoute } from \"@angular/router\";\nimport { UserService } from \"./user_service\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {DOCUMENT} from \"@angular/platform-browser\";\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n\n@Component( {\n    selector: \"log-in\",\n    templateUrl: \"./html/login.html\",\n    styleUrls: [\"./css/login.css\"]\n} )\n\nexport class LogIn {\n\n    model: User = new User();\n\n    loginForm: FormGroup;\n\n    error:boolean;\n\n    mobileNo: FormControl = new FormControl( \"\", [\n\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(10)\n       \n\n    ] );\n\n    password: FormControl = new FormControl( \"\", [\n        Validators.required\n\n    ] );\n\n    constructor( private formBuilder: FormBuilder, private userService: UserService, private router: Router \n    ,private activatedRoute:ActivatedRoute ,@Inject(DOCUMENT) private document:any) {\n\n    }\n\n    ngOnInit() {\n\n        this.loginForm = this.formBuilder.group( {\n            mobileNo:this.mobileNo,\n            password: this.password\n        } );\n\n\n       this.activatedRoute.queryParams.subscribe((data)=>{\n            this.error=data[\"error\"];\n            \n       }); \n    }\n\n\n    submit() {\n\n        if(this.loginForm.status==\"VALID\"){\n\n            let user: User = new User();\n            user.mobileNo = this.loginForm.value.mobileNo;\n            user.password = this.loginForm.value.password;\n            this.userService.userLogin( user ).subscribe(( data ) => {\n\n           \n            if ( data != undefined ) {\n                // this redirect method may not work in all situation \n                // replace if better method avilable in future \n                this.document.location.href=data.url;\n            }\n\n        } );\n\n        \n\n    }\n\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/login.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LogIn } from \"./login\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { UserRoutingModule } from \"./user_routing_module\";\nimport { UserSignup } from \"./user_signup\";\nimport { DoctorModule } from \"../dr/doctor_module\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { UserService } from \"./user_service\";\nimport { HttpModule } from \"@angular/http\";\nimport { SiteMainFooter } from \"../layout/site_main_footer\";\nimport { SiteMainHeader } from \"../layout/site_main_header\";\nimport { UserPhoneVarification } from \"app/user/user_phone_varification\";\n\n\n@NgModule( {\n    imports: [MaterialModule, FormsModule, UserRoutingModule, DoctorModule, CommonModule\n        , ReactiveFormsModule, HttpModule],\n    declarations: [LogIn, UserSignup, SiteMainHeader, SiteMainFooter , UserPhoneVarification],\n    providers: [UserService],\n    exports: [LogIn, SiteMainFooter, SiteMainHeader,UserPhoneVarification]\n} )\nexport class UserModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user.module.ts","export class User {\n    public mobileNo: string;\n    public password: string;\n    public role: string;\n   \n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user.ts","import { Component } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Subscriber } from \"rxjs/Subscriber\";\nimport { FormGroup, FormControl ,FormBuilder,Validator } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { UserService } from \"app/user/user_service\";\nimport { FormResult } from \"app/model/formresult\";\nimport { MatSnackBar } from \"@angular/material\";\n\n\n\n@Component({\n    selector:\"user-phone-varification\",\n    templateUrl:\"./html/user_phone_varification.html\"\n})\nexport class UserPhoneVarification{\n\n    mobileVarificationForm:FormGroup;\n\n    mobileNo:FormControl = new FormControl(\"\",[]);\n\n    otp:FormControl=new FormControl(\"\",[]);\n\n   \n\n    \n   \n    countDown = new Observable<string>((observer: Subscriber<string>) => {\n    \n        let count:number=20;\n        \n        setInterval(() => {\n            count--;\n            if(count>0){\n                observer.next(\"Send Again In \"+count+\" Sec\")\n            }\n\n            if(count==0){\n                observer.next(\"Send Otp Again\");\n                this.deactivated=false;\n            }\n          \n        }, 1000);\n      });\n\n\n      countDownVoice = new Observable<string>((observer: Subscriber<string>) => {\n\n        let count:number=40;\n\n    \n        setInterval(() => {\n            count--;\n            if(count>0){\n                observer.next(\"Voice Otp \"+count+\" Sec\")\n            }\n\n            if(count==0){\n                observer.next(\"Send Otp By Voice Call\");\n                this.deactivatedVoiceOtp=false;\n            }\n          \n        }, 1000);\n      });\n\n\n\n    deactivated:boolean=true;\n\n    deactivatedVoiceOtp:boolean=true;\n\n\n    constructor(private formBuilder:FormBuilder ,private acroute:ActivatedRoute , \n    private userService:UserService,private matSnackBar:MatSnackBar){\n       \n    }\n    \n    \n    ngOnInit(){\n\n        this.mobileVarificationForm=this.formBuilder.group({\n            \"mobileNo\":this.mobileNo,\n            \"otp\":this.otp\n        });\n\n\n        this.acroute.queryParams.subscribe((params)=>{\n            this.mobileNo.setValue(params[\"mobileNo\"]);\n            console.log(params);\n        });\n\n\n\n    }\n\n    \n    sendOtpAgain(){\n        this.userService.sendOtpAgainText(this.mobileNo.value).subscribe((data)=>{\n            if(data!=undefined){\n                let formResult:FormResult=data.json();\n                if(formResult.result){\n                    this.matSnackBar.open(formResult.message,\"Done\");\n                }\n                else{\n                    this.matSnackBar.open(formResult.message,\"Error\");\n                }\n            }\n        });\n       \n    }\n\n\n    sendOtpAgainVoice(){\n        this.userService.sendOtpAgainVoice(this.mobileNo.value).subscribe((data)=>{\n            if(data!=undefined){\n                let formResult:FormResult=data.json();\n                if(formResult.result){\n                    this.matSnackBar.open(formResult.message,\"Done\");\n                }\n                else{\n                    this.matSnackBar.open(formResult.message,\"Error\");\n                }\n            }\n        });\n    }\n\n\n    submit(){\n         this.userService.varifyMobileNo(this.mobileVarificationForm.value).subscribe((data)=>{\n            console.log(this.mobileVarificationForm); \n            if(data!=undefined){\n                let formResult:FormResult=data.json();\n                if(formResult.result){\n                    this.matSnackBar.open(formResult.message,\"Done\");\n                }\n                else{\n                    this.matSnackBar.open(formResult.message,\"Error\");\n                }\n             }\n         });\n    }\n   \n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user_phone_varification.ts","import { Route, Routes } from \"@angular/router\";\nimport { UserSignup } from \"./user_signup\";\nimport { LogIn } from \"./login\";\nimport { UserPhoneVarification } from \"app/user/user_phone_varification\";\n\n\nconst userSignup: Route = { path: \"user/signup\", component: UserSignup };\nconst userLogin: Route = { path: \"user/login\", component: LogIn };\nconst userPhoneVarification:Route={path:\"user/phone/varification\",component:UserPhoneVarification}\n\nexport const UserRoutes: Routes = [userSignup, userLogin,userPhoneVarification];\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user_routing_config.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { UserRoutes } from \"./user_routing_config\";\n\n@NgModule( {\n    imports: [RouterModule.forChild( UserRoutes )],\n    exports: [RouterModule],\n    declarations: []\n\n} )\n\n\nexport class UserRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { RequestOptions, Headers, Http } from \"@angular/http\";\nimport { User } from \"./user\";\nimport { URLSearchParams } from \"@angular/http\";\n\n\n\n\n@Injectable()\nexport class UserService {\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n    constructor( private http: Http ) {\n\n    }\n\n\n    userSignup( user: User ) {\n\n        let url = \"/api/public/signup/user\";\n        return this.http.post( url, user, this.commOptions );\n\n    }\n\n    userLogin( user: User ) {\n        let url = \"/user/login\";\n\n        let body = new URLSearchParams();\n\n        body.set( \"userName\", user.mobileNo );\n        body.set( \"password\", user.password );\n\n        let headers = new Headers( { 'Content-Type': 'application/x-www-form-urlencoded' } );\n\n        let options = new RequestOptions( { headers: headers } );\n\n        return this.http.post( url, body.toString(), options );\n    }\n\n\n    userLogout(){\n        let url=\"/logout\";\n\n        return this.http.post(url,this.commOptions);\n    }\n\n\n    getCurrentUser(){\n        let url=\"/api/public/get/currentuser\";\n\n        return this.http.get(url,this.commOptions);\n    }\n\n\n    sendOtpAgainText(mobileNo:string){\n        console.log(mobileNo);\n        let url =\"/api/public/user/resend/otp\";\n\n        let params:URLSearchParams = new URLSearchParams();\n        params.set(\"mobileNo\",mobileNo);\n        params.set(\"retryType\",\"text\");\n\n        this.commOptions.params=params;\n\n        return this.http.get(url,this.commOptions);\n\n\n    }\n\n\n    sendOtpAgainVoice(mobileNo:string){\n\n        let url =\"/api/public/user/resend/otp\";\n\n        let params:URLSearchParams = new URLSearchParams();\n        params.set(\"mobileNo\",mobileNo);\n        params.set(\"retryType\",\"voice\");\n\n        this.commOptions.params=params;\n\n        return this.http.get(url,this.commOptions);\n\n\n    }\n\n    varifyMobileNo(body){\n        let url=\"/api/public/user/mobileno/verify\";\n        let params:URLSearchParams= new URLSearchParams();\n        params.set(\"mobileNo\",body.mobileNo);\n        params.set(\"otp\",body.otp);\n\n        this.commOptions.params=params;\n\n        return this.http.get(url,this.commOptions);\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user_service.ts","import { Component } from \"@angular/core\";\nimport { Error } from \"../error\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport { User } from \"./user\";\nimport { UserService } from \"./user_service\";\nimport {MatSnackBar} from \"@angular/material\";\nimport {FormResult} from \"../model/formresult\";\n\n\n\n@Component( {\n    selector: \"user-signup\",\n    templateUrl: \"./html/user_signup.html\"\n} )\nexport class UserSignup {\n\n\n    model: any = new Object();\n    error: Error = new Error();\n\n   \n    userSignupForm: FormGroup;\n\n    mobileNo:FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.maxLength(10),\n        Validators.minLength(10)\n    ] );\n\n    role: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n    password: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n    constructor( private formBuilder: FormBuilder, private userService: UserService ,\n    private matSnackBar:MatSnackBar , private router:Router) {\n\n    }\n\n    ngOnInit() {\n        this.userSignupForm = this.formBuilder.group( {\n            mobileNo: this.mobileNo,\n            role: this.role,\n            password: this.password\n        } );\n\n        \n    }\n\n\n    submit() {\n\n    console.log(this.userSignupForm);\n       if(this.userSignupForm.status==\"VALID\"){\n\n        let user: User = new User();\n        user.mobileNo = this.userSignupForm.value.mobileNo;\n        user.password = this.userSignupForm.value.password;\n        \n        user.role = this.userSignupForm.value.role;\n\n        console.log(user);\n        \n        this.userService.userSignup( user ).subscribe(( data ) => {\n            let formResult:FormResult=data.json();\n            console.log(formResult);\n            // if(formResult.result){\n            //     this.router.navigateByUrl(\"user/phone/varification?mobileNo=\"+user.mobileNo);\n            //     this.matSnackBar.open(formResult.message,\"Done\",{\n            //         duration:3000\n            //     });\n            // }\n\n            // else if(formResult.error){\n            //     this.matSnackBar.open(formResult.message,\"Error\",{\n            //         duration:3000\n            //     });\n            // }\n            \n        } );\n\n\n       }\n\n        \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/app/user/user_signup.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif ( environment.production ) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule( AppModule );\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/Documents/edr_webapp/src/main.ts"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:////home/ashu/git/edr/edr/src/main/webapp/src async","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/app.component.css","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/app.component.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/app.component.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/app.module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/app_routes_config.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_appointment_setup.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_appointment_show.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_holiday.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_holiday_show.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_home.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_make_appointment.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_panel.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_routing_config.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_routing_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_service.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_signup.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_appointment_setup.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_appointment_show.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_holiday.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_holiday_show.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_home.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_make_appointment.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_panel.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_signup.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/error.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/home.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/material/material.module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/appointment.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/city.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/degree.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/disease.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/formresult.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/speciality.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/state.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/time.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/model/timeslot.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/html/patient_home.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/html/patient_profile.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/html/patient_signup.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_home.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_profile.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_routing_config.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_routing_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_service.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_signup.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_city.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_degree.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_disease.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_speciality.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_state.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/admin_home.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_city.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_degree.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_disease.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_state.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_city.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_degree.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_disease.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_speciality.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_state.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_home.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_city.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_degree.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_disease.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_state.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_routing_config.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_routing_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_service.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/css/login.css","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/html/login.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/html/user_signup.html","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/login.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/user.module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/user.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_routing_config.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_routing_module.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_service.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_signup.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/environments/environment.ts","webpack:////home/ashu/git/edr/edr/src/main/webapp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#menu{\\n\\tfont-size:40px;\\n\\tmargin-left:20px;\\n}\\n\\nhtml, body, material-app, mat-sidenav-container, .my-content {\\n  margin: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\nmat-sidenav{\\n\\twidth:200px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span> \\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">WebSiteName</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n        <li><a href=\\\"#\\\">About</a></li>\\n        <li><a href=\\\"#\\\">Contact</a></li> \\n        <li><a href=\\\"#\\\">Help</a></li> \\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a routerLink=\\\"/user/signup\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n        <li><a routerLink=\\\"/user/login\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\\n\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"col-md-8 col-md-offset4\\\">\\n\\t\\t<router-outlet></router-outlet>\\n\\t</div>\\n\\t\\n\\n</div>\\n\\n \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component( {\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n} )\nexport class AppComponent {\n    title = 'app';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from \"@angular/forms\";\nimport { MaterialModule } from \"./material/material.module\";\nimport { NgModule } from '@angular/core';\nimport { } from \"@angular/date\";\nimport { RouterModule } from \"@angular/router\";\nimport { UserModule } from \"./user/user.module\";\nimport { PatientModule } from \"./patient/patient_module\";\nimport { AppRoutes } from \"./app_routes_config\";\nimport { Home } from \"./home\";\nimport { SiteAdminModule } from \"./site_admin/site_admin_module\";\n\n\nimport { AppComponent } from './app.component';\n\n@NgModule( {\n    declarations: [\n        AppComponent, Home\n    ],\n    imports: [\n        RouterModule.forRoot( AppRoutes ),\n        BrowserModule, BrowserAnimationsModule, UserModule, FormsModule, MaterialModule,\n        PatientModule, SiteAdminModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n} )\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/app.module.ts","import { Route, Routes } from \"@angular/router\";\nimport { Home } from \"./home\";\n\nconst home: Route = { path: \"\", component: Home };\n\nexport const AppRoutes: Routes = [home];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/app_routes_config.ts","import { Address } from \"../model/address\";\nimport { TimeSlot } from \"../model/timeslot\";\n\nimport { Degree } from \"../model/degree\";\nimport { Speciality } from \"../model/speciality\";\n\n\nexport class Doctor {\n\n    public name: string;\n    public about: string;\n    public degrees: Degree[];\n    public specialities: Speciality[];\n    public workingDays: number[];\n    public addrLineOne: string;\n    public addrLineTwo: string;\n    public state: string;\n    public city: string;\n    public phoneno: string;\n    public appointmentFee: number;\n    public timeSlots: TimeSlot[] = new Array();\n\n    public holidays: Date[];\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor.ts","import { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { TimeSlot } from \"../model/timeslot\";\nimport { Doctor } from \"./doctor\";\nimport { FormResult } from \"../model/formresult\";\nimport { DoctorService } from \"./doctor_service\";\n\n@Component( {\n    selector: \"doc-appoint-setup\",\n    templateUrl: \"./html/doctor_appointment_setup.html\"\n} )\n\nexport class DoctorAppointmentSetup {\n\n    appointmentForm: FormGroup;\n    timeSlots: TimeSlot[] = new Array();\n\n    doctor: Doctor = new Doctor();\n    result: FormResult = new FormResult();\n\n\n    feeAmount: FormControl = new FormControl( '', [] );\n    days: FormControl = new FormControl( '', [] );\n    startingTime: FormControl = new FormControl( '', [] );\n    closeingTime: FormControl = new FormControl( '', [] );\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService ) {\n\n    }\n\n    ngOnInit() {\n\n        this.getDoctor();\n\n        this.appointmentForm = this.formBuilder.group( {\n            feeAmount: this.feeAmount,\n            days: this.days,\n            startingTime: this.startingTime,\n            closeingTime: this.closeingTime\n        } );\n    }\n\n    getDoctor() {\n        this.doctorService.getDoctorPublicInfo().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.doctor = data.json();\n\n            }\n        } );\n    }\n\n\n    submit() {\n\n        let doctor: Doctor = new Doctor();\n        doctor.appointmentFee = this.appointmentForm.value.feeAmount;\n        doctor.timeSlots = this.timeSlots;\n        doctor.workingDays = this.appointmentForm.value.days;\n\n\n\n        this.doctorService.docAppointmentSetup( doctor ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n\n    }\n\n    addTimeSlot() {\n        let timeSlot: TimeSlot = new TimeSlot();\n        timeSlot.start.stringToTime( this.appointmentForm.value.startingTime );\n        timeSlot.end.stringToTime( this.appointmentForm.value.closeingTime );\n\n        if ( !isNaN( timeSlot.start.hour ) && !isNaN( timeSlot.end.hour ) ) {\n\n            if ( this.timeSlots.length != 0 ) {\n\n\n                for ( let i = 0; i < this.timeSlots.length; i++ ) {\n                    if ( ( this.timeSlots[i].start.equal( timeSlot.start ) ) && ( this.timeSlots[i].end.equal( timeSlot.end ) ) ) {\n\n                        this.result.error = true;\n                        this.result.message = \"TimeSlot Already added\"\n                    }\n                    else {\n                        this.result.error = false;\n\n                    }\n                }\n\n                if ( !this.result.error ) {\n                    this.timeSlots.push( timeSlot );\n                }\n            }\n            else {\n                this.timeSlots.push( timeSlot );\n            }\n\n        }\n    }\n\n    deleteTimeslot( i: number ) {\n        this.timeSlots.splice( i, 1 );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_appointment_setup.ts","import { Component } from \"@angular/core\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Appointment } from \"../model/appointment\";\nimport { FormControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component( {\n    selector: \"doc-appointment-show\",\n    templateUrl: \"./html/doctor_appointment_show.html\"\n} )\n\nexport class DoctorAppointmentShow {\n\n    dateForm: FormGroup;\n\n    from: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    to: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n    appointments: Appointment[];\n\n    constructor( private doctorService: DoctorService, private formBuilder: FormBuilder ) {\n\n    }\n\n    ngOnInit() {\n        //  this.getAppointments();\n\n        this.dateForm = this.formBuilder.group( {\n            from: this.from,\n            to: this.to\n        } );\n    }\n\n    //    getAppointments() {\n    //        this.doctorService.getDocAppointment().subscribe(( data ) => {\n    //            if ( data != undefined ) {\n    //                this.appointments = data.json();\n    //\n    //            }\n    //        } );\n    //    }\n\n\n    submit() {\n        let from: Date = this.dateForm.value.from;\n        let to: Date = this.dateForm.value.to;\n        this.doctorService.getAppointmentOfPeriod( from, to ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.appointments = data.json();\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_appointment_show.ts","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Doctor } from \"./doctor\";\nimport { FormResult } from \"../model/formresult\";\n\n@Component( {\n    selector: \"doc-holiday\",\n    templateUrl: \"./html/doctor_holiday.html\"\n} )\n\nexport class DoctorHoliday {\n\n\n    holidayForm: FormGroup;\n\n    currentDate: Date = new Date();\n\n    result: FormResult = new FormResult();\n\n    holidayDate: FormControl = new FormControl( '', [\n\n    ] );\n\n    // holds the list of date to be added into  data base\n    holidayDates: Date[] = new Array();\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService ) {\n\n\n    }\n\n\n    ngOnInit() {\n\n        // form initiolization \n        this.holidayForm = this.formBuilder.group(\n            {\n                holidayDate: this.holidayDate\n            } );\n    }\n\n\n    addHoliday() {\n        let error: boolean = false;\n\n        /*date selected by the user if empty its a string else date \n          thats why we did not choose any data type for selectedDate */\n\n        let selectedDate: Date = this.holidayForm.value.holidayDate;\n\n\n\n        // here we are checking if the date is less than min date which is current date \n        if ( this.holidayDate.hasError( \"matDatepickerMin\" ) ) {\n            error = true;\n        }\n\n        //here we are checking if the date is already in the array\n        for ( let i = 0; i < this.holidayDates.length; i++ ) {\n            if ( this.holidayDates[i] == selectedDate ) {\n                error = true;\n            }\n        }\n\n        // if date is not empty and not in the array then we are adding it into array\n        if ( !error ) {\n            let date: Date = new Date( selectedDate.toISOString() );\n\n            this.holidayDates.push( date );\n\n        }\n\n    }\n\n\n    submit() {\n        let doctor: Doctor = new Doctor();\n\n        doctor.holidays = this.holidayDates;\n\n        console.log( doctor );\n        this.doctorService.addHolidays( doctor ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n    }\n\n\n\n\n    // delete the date from the array using the index\n    deleteDate( i: number ) {\n        this.holidayDates.splice( i, 1 );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_holiday.ts","import { Component } from \"@angular/core\";\nimport { DoctorService } from \"./doctor_service\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n\n@Component( {\n    selector: \"doc-holiday-show\",\n    templateUrl: \"./html/doctor_holiday_show.html\"\n} )\nexport class DoctorHolidayShow {\n\n    holidayList: Date[] = new Array();\n\n    dateForm: FormGroup;\n\n    from: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    to: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n    constructor( private doctorService: DoctorService, private formBuilder: FormBuilder ) {\n\n    }\n\n    ngOnInit() {\n        //this.getAllHoliday();\n\n        this.dateForm = this.formBuilder.group( {\n            from: this.from,\n            to: this.to\n\n        } );\n\n    }\n\n    getAllHoliday() {\n\n        this.doctorService.getAllHoliday().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.holidayList = data.json();\n            }\n        } );\n    }\n\n    submit() {\n        let from: Date = this.dateForm.value.from;\n        let to: Date = this.dateForm.value.to;\n\n        this.doctorService.getHolidayOfPeriod( from, to ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.holidayList = data.json();\n                console.log( data.json() );\n\n            }\n        } );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_holiday_show.ts","import { Component } from \"@angular/core\";\n\n\n@Component( {\n    selector: 'doctor-home',\n    templateUrl: \"./html/doctor_home.html\"\n} )\nexport class DoctorHome {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_home.ts","import { Component } from \"@angular/core\";\nimport { Doctor } from \"./doctor\";\nimport { FormBuilder, FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Time } from \"../model/time\";\nimport { holidayValidator } from \"./holidayValidator\";\nimport { Appointment } from \"../model/appointment\";\nimport { FormResult } from \"../model/formresult\";\n\n@Component( {\n    selector: \"doc-make-appointment\",\n    templateUrl: \"./html/doctor_make_appointment.html\"\n} )\nexport class DoctorMakeAppointment {\n\n    doctor: Doctor = new Doctor();\n    holidays: Date[] = new Array();\n\n    result: FormResult = new FormResult();\n\n    today: Date = new Date();\n\n    workingDayFilter;\n\n\n    appointmentForm: FormGroup;\n\n    patientId: FormControl = new FormControl( \"\", [\n        Validators.required\n        , Validators.email\n    ] );\n\n    date: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );;\n\n    timeSlot: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    appointmentWithoutPatientId: FormGroup;\n\n    patientName: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    patientPhoneNo: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.minLength( 10 )\n    ] );\n\n    appointmentDate: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    appointmentTimeSlot: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n\n\n\n    ngOnInit() {\n\n\n\n        this.appointmentForm = this.formBuilder.group( {\n            patientId: this.patientId,\n            date: this.date,\n            timeSlot: this.timeSlot\n        } );\n\n\n        this.appointmentWithoutPatientId = this.formBuilder.group( {\n            patientName: this.patientName,\n            patientPhoneNo: this.patientPhoneNo,\n            appointmentDate: this.appointmentDate,\n            appointmentTimeSlot: this.appointmentTimeSlot\n        } );\n\n        this.getDoctor();\n\n\n    }\n\n\n\n    constructor( private formBuilder: FormBuilder, private doctorService: DoctorService ) {\n\n    }\n\n\n\n\n    public getDoctor() {\n        this.doctorService.getDoctorPublicInfo().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.doctor = data.json();\n\n                /* filter is dependent on the doctor object thats why \n                 * it is set here */\n\n                this.workingDayFilter = ( d: Date ): boolean => {\n                    const day = d.getDay();\n                    let workingDays = this.doctor.workingDays;\n                    let holidays = this.doctor.holidays;\n                    let result: boolean = false;\n\n                    if ( workingDays != null ) {\n\n                        for ( let i = 0; i < workingDays.length; i++ ) {\n                            if ( day == workingDays[i] ) {\n                                result = true;\n                            }\n\n\n                        }\n                    }\n\n\n\n                    if ( holidays != null ) {\n\n                        for ( let i = 0; i < holidays.length; i++ ) {\n                            let holiday: Date = holidays[i];\n\n                            if ( d.getTime() == parseInt( holiday.toString() ) * 1000 ) {\n                                result = false;\n                            }\n                        }\n                    }\n\n\n\n                    return result;\n\n                }\n\n\n\n            }\n        } );\n    }\n\n\n\n    submit() {\n        let appointment: Appointment = new Appointment();\n        appointment.patientId = this.appointmentForm.value.patientId;\n        appointment.date = new Date( this.appointmentForm.value.date );\n        appointment.timeSlot = this.appointmentForm.value.timeSlot;\n        console.log( appointment );\n\n        this.doctorService.makeAppointment( appointment ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n\n    }\n\n\n    submitWithoutId() {\n        let appointment: Appointment = new Appointment();\n        appointment.patientName = this.appointmentWithoutPatientId.value.patientName;\n        appointment.patientPhoneNo = this.appointmentWithoutPatientId.value.patientPhoneNo;\n        appointment.date = this.appointmentWithoutPatientId.value.appointmentDate;\n        appointment.timeSlot = this.appointmentWithoutPatientId.value.appointmentTimeSlot;\n\n        this.doctorService.makeAppointment( appointment ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_make_appointment.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DoctorSignup } from \"./doctor_signup\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { DoctorRoutingModule } from \"./doctor_routing_module\";\nimport { DoctorHome } from \"./doctor_home\";\nimport { DoctorAppointmentSetup } from \"./doctor_appointment_setup\";\nimport { DoctorHoliday } from \"./doctor_holiday\";\nimport { DoctorPanel } from \"./doctor_panel\";\nimport { DoctorMakeAppointment } from \"./doctor_make_appointment\";\nimport { DoctorAppointmentShow } from \"./doctor_appointment_show\";\nimport { DoctorHolidayShow } from \"./doctor_holiday_show\";\nimport { DoctorService } from \"./doctor_service\";\n\n\n\n@NgModule( {\n    imports: [MaterialModule, FormsModule, DoctorRoutingModule, ReactiveFormsModule, CommonModule\n    ],\n    declarations: [DoctorSignup, DoctorHome, DoctorAppointmentSetup, DoctorHoliday, DoctorPanel\n        , DoctorMakeAppointment, DoctorAppointmentShow, DoctorHolidayShow],\n    providers: [DoctorService],\n    exports: [DoctorSignup]\n\n} )\n\nexport class DoctorModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_module.ts","import { Component } from \"@angular/core\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Appointment } from \"../model/appointment\";\n\n\n@Component( {\n    selector: \"doc-panel\",\n    templateUrl: \"./html/doctor_panel.html\"\n} )\n\nexport class DoctorPanel {\n\n\n    appointments: Appointment[];\n\n    constructor( private doctorService: DoctorService ) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.getAppointments();\n\n    }\n\n\n    getAppointments() {\n        this.doctorService.getTodayAppointment().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.appointments = data.json();\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_panel.ts","import { Route, Routes } from \"@angular/router\";\nimport { DoctorSignup } from \"./doctor_signup\";\nimport { DoctorHoliday } from \"./doctor_holiday\";\nimport { DoctorHome } from \"./doctor_home\";\nimport { DoctorAppointmentSetup } from \"./doctor_appointment_setup\";\nimport { DoctorPanel } from \"./doctor_panel\";\nimport { DoctorMakeAppointment } from \"./doctor_make_appointment\";\nimport { DoctorAppointmentShow } from \"./doctor_appointment_show\";\nimport { DoctorHolidayShow } from \"./doctor_holiday_show\";\n\n\nconst doctorAppointment: Route = { path: \"dr/appointment\", component: DoctorAppointmentSetup };\n\nconst doctorHoliday: Route = { path: \"dr/holiday\", component: DoctorHoliday };\nconst doctorSignUp: Route = { path: \"dr/signup\", component: DoctorSignup };\nconst doctorPanel: Route = { path: \"dr/panel\", component: DoctorPanel };\nconst doctorMakeAppointment: Route = { path: \"dr/make/appointment\", component: DoctorMakeAppointment };\nconst doctorAppointmentShow: Route = { path: \"dr/show/appointment\", component: DoctorAppointmentShow };\nconst doctorHolidayShow: Route = { path: \"dr/show/holiday\", component: DoctorHolidayShow };\n\n\nconst doctorHome: Route = {\n    path: \"dr/home\", component: DoctorHome, children: [\n\n        doctorAppointment,\n        doctorHoliday,\n        doctorPanel,\n        doctorMakeAppointment,\n        doctorAppointmentShow,\n        doctorHolidayShow\n\n    ]\n};\n\n\nexport const DoctorRoutes: Routes = [doctorSignUp, doctorHome];\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_routing_config.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { DoctorRoutes } from \"./doctor_routing_config\";\n\n\n@NgModule( {\n    imports: [RouterModule.forChild( DoctorRoutes )],\n    declarations: [],\n    exports: [RouterModule]\n\n} )\n\nexport class DoctorRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { RequestOptions, Headers, Http, URLSearchParams } from \"@angular/http\";\nimport { Doctor } from \"./doctor\";\nimport { Appointment } from \"../model/appointment\";\n\n\n\n@Injectable()\n\nexport class DoctorService {\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n\n    constructor( private http: Http ) {\n\n    }\n\n    public saveDoctor( doctor: Doctor ) {\n        let url = \"/api/private/dr/signup\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n    public docAppointmentSetup( doctor: Doctor ) {\n        let url = \"/api/private/dr/appointment/setup\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n    public getAllState() {\n        let url = \"/api/public/dr/state/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    public addHolidays( doctor: Doctor ) {\n        let url = \"/api/private/dr/holiday/add\";\n        return this.http.post( url, doctor, this.commOptions );\n    }\n\n\n    public getAllCities( stateId: string ) {\n        let url = \"/api/public/dr/city/all\";\n        let param = new URLSearchParams();\n        param.set( \"stateId\", stateId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllDegree() {\n        let url = \"/api/public/dr/degree/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllSpeciality() {\n        let url = \"/api/public/dr/speciality/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getAllHoliday() {\n        let url = \"/api/public/dr/holiday/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    public getDoctorPublicInfo() {\n        let url = \"/api/public/dr/get/doctor\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    public makeAppointment( appointment: Appointment ) {\n        let url = \"/api/private/dr/appointment/make\";\n        return this.http.post( url, appointment, this.commOptions );\n    }\n\n    public getDocAppointment() {\n        let url = \"/api/private/dr/get/appointment\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    public getAppointmentOfPeriod( from: Date, to: Date ) {\n        let url = \"/api/private/dr/get/appointment/period\";\n        let param = new URLSearchParams();\n        param.set( \"from\", from.getTime().toString() );\n        param.set( \"to\", to.getTime().toString() );\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n\n\n    }\n\n    public getHolidayOfPeriod( from: Date, to: Date ) {\n        let url = \"/api/private/dr/get/holiday/period\";\n        let param = new URLSearchParams();\n        param.set( \"from\", from.getTime().toString() );\n        param.set( \"to\", to.getTime().toString() );\n\n        this.commOptions.params = param;\n\n        return this.http.get( url, this.commOptions );\n\n    }\n\n\n    public getTodayAppointment() {\n        let url = \"/api/private/dr/get/appointment/today\";\n\n        return this.http.get( url, this.commOptions );\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_service.ts","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\nimport { Doctor } from \"./doctor\";\nimport { State } from \"../model/state\";\nimport { City } from \"../model/city\";\nimport { Degree } from \"../model/degree\";\nimport { DoctorService } from \"./doctor_service\";\nimport { Speciality } from \"../model/speciality\";\nimport { FormResult } from \"../model/formresult\";\n\n\n\n@Component( {\n    selector: \"doc-signup\",\n    templateUrl: \"./html/doctor_signup.html\"\n} )\nexport class DoctorSignup {\n\n    /* list of form group */\n    qualificationForm: FormGroup;\n    personalForm: FormGroup;\n    contactForm: FormGroup;\n\n\n    result: FormResult = new FormResult();\n\n    // doctor objcet to be forward to save \n    doctor: Doctor = new Doctor();\n\n\n\n    // List of states for the select field\n    states: State[];\n\n    // list of cities for the select field \n    cities: City[];\n\n\n\n\n    //list of qualification \n    qualificationOptions: Degree[];\n\n    // list of specialities\n    specialities: Speciality[];\n\n    /* initialization of form controls start here */\n\n    name: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n\n    about: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.maxLength( 256 )\n\n    ] );\n\n\n    qualifications: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n\n    specialitiesControl: FormControl = new FormControl( \"\", [\n\n    ] );\n\n    address: FormControl = new FormControl( \"\", [\n        Validators.required\n\n    ] );\n\n    address2: FormControl = new FormControl( \"\" );\n\n    state: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n    city: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n    phoneno: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.minLength( 10 )\n    ] );\n\n    /* initialization of form control ends here */\n\n\n    constructor( private _formBuilder: FormBuilder, private doctorService: DoctorService ) { }\n\n\n\n    ngOnInit() {\n\n        this.getState();\n\n        this.getAllDegree();\n\n        this.getAllSpeciality();\n\n        this.personalForm = this._formBuilder.group( {\n            name: this.name,\n            about: this.about\n        } );\n\n        this.qualificationForm = this._formBuilder.group( {\n\n            qualifications: this.qualifications,\n            specialities: this.specialitiesControl\n        } );\n\n        this.contactForm = this._formBuilder.group( {\n            address: this.address,\n            address2: this.address2,\n            state: this.state,\n            city: this.city,\n            phoneno: this.phoneno\n        } );\n\n    }\n\n    /* getAddDegree get list of the degress from the database and populate it into \n     * the form select field */\n    getAllDegree() {\n        this.doctorService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.qualificationOptions = data.json();\n            }\n        } );\n    }\n\n\n    /*getAllSpeciality get list of all the speciality form the database and populate into\n     * the form select field */\n\n    getAllSpeciality() {\n        this.doctorService.getAllSpeciality().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.specialities = data.json();\n            }\n        } );\n    }\n\n    /*getState method get all the state from the database and populate it into the \n     *form select field */\n\n    getState() {\n        this.doctorService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n\n    /* getCitites method get all the cityies for a particular state selected by the user it \n     * takes one parameter which is stateid */\n    getCitites( stateId: string ) {\n        this.doctorService.getAllCities( stateId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.cities = data.json();\n            }\n        } );\n    }\n\n\n    /*     it execute when user select a state from the state list and change the list \n     *     of cities to all the cities for that perticular state */\n    stateSelected() {\n        let stateId: string = this.contactForm.value.state;\n        this.getCitites( stateId );\n    }\n\n\n\n    /* execute when user submit the form by clicking the save button in the last \n     * step of the form */\n    submit() {\n        // put all the value in the doctor object \n        this.doctor.name = this.personalForm.value.name;\n        this.doctor.about = this.personalForm.value.about;\n        this.doctor.degrees = this.qualificationForm.value.qualifications;\n        this.doctor.specialities = this.qualificationForm.value.specialities;\n        this.doctor.addrLineOne = this.contactForm.value.address;\n        this.doctor.addrLineTwo = this.contactForm.value.address2;\n        this.doctor.state = this.contactForm.value.state;\n        this.doctor.city = this.contactForm.value.city;\n        this.doctor.phoneno = this.contactForm.value.phoneno;\n\n        this.doctorService.saveDoctor( this.doctor ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/doctor_signup.ts","module.exports = \"\\n\\n\\n<h4>Setup Your Profile For Online Appointment</h4>\\n\\n\\n<form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"appointmentForm\\\">\\n\\n\\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput  type=\\\"text\\\" formControlName=\\\"feeAmount\\\" placeholder=\\\"Enter Fee Amount\\\" >\\n\\t\\t\\t<p matSuffix>Rs</p>\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<mat-select formControlName=\\\"days\\\" multiple=\\\"true\\\" placeholder=\\\"Select Wroking Day\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-option value=1>Mon</mat-option>\\n\\t\\t\\t\\t<mat-option value=2>Tue</mat-option>\\n\\t\\t\\t\\t<mat-option value=3>Wed</mat-option>\\n\\t\\t\\t\\t<mat-option value=4>Thu</mat-option>\\n\\t\\t\\t\\t<mat-option value=5>Fri</mat-option>\\n\\t\\t\\t\\t<mat-option value=6>Sat</mat-option>\\n\\t\\t\\t\\t<mat-option value=0>Sun</mat-option>\\n\\t\\t\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n   \\n\\t<div class=\\\"form-group col-md-6\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput type=\\\"time\\\" formControlName=\\\"startingTime\\\" placeholder=\\\"Opening Time\\\" >\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group col-md-6\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput type=\\\"time\\\" formControlName=\\\"closeingTime\\\" placeholder=\\\"Closeing Time\\\" >\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"accent\\\" (click)=\\\"addTimeSlot()\\\" type=\\\"button\\\">Add Time Slot</button>\\n\\t\\n\\t</div>\\n\\t<table class=\\\"table\\\">\\n\\t\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>Starting Time</th>\\n\\t\\t\\t\\t<th>Closeing Time</th>\\n\\t\\t\\t\\t<th>Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t\\t\\n\\t\\t</thead>\\n\\t\\t\\n\\t\\t\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let timeSlot of timeSlots;let i = index\\\">\\n\\t\\t\\t    \\n\\t\\t\\t\\t<td>{{timeSlot.start.hour+\\\":\\\"+timeSlot.start.minute+\\\" \\\"+timeSlot.start.meridien}}</td>\\n\\t\\t\\t\\t<td>{{timeSlot.end.hour+\\\":\\\"+timeSlot.end.minute+\\\" \\\"+timeSlot.end.meridien}}</td>\\n\\t\\t\\t\\t<td><button mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"deleteTimeslot(i)\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<i class=\\\"material-icons\\\">delete</i></button></td>\\n\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t</tbody>\\n\\t\\n\\t</table>\\n\\t\\n\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Submit</button>\\n\\t\\n\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_appointment_setup.html\n// module id = ../../../../../src/app/dr/html/doctor_appointment_setup.html\n// module chunks = 1","module.exports = \"<h3>Choose a Time interval</h3>\\n<form [formGroup]=\\\"dateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"from\\\"  [matDatepicker]=\\\"pickerfrom\\\" placeholder=\\\"From\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerfrom\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickerfrom></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"to\\\" [matDatepicker]=\\\"pickerto\\\" placeholder=\\\"To\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerto\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickerto></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Show</button>\\n\\t</div>\\n\\n\\n</form>\\n\\n\\n\\n\\n\\n<div  *ngFor=\\\"let appointment of appointments\\\">\\n\\n\\n\\t<div class=\\\"col-lg-6\\\">\\n\\t\\n\\t<div class=\\\"panel panel-info\\\">\\n\\t   <div class=\\\"panel-heading\\\">\\n    <h5>Date:{{appointment.date*1000|date:'mediumDate'}}</h5>\\n       </div>  \\n       <div class=\\\"panel-body\\\">\\n             <h6>PatientId {{appointment.patientId}}</h6>\\n\\t         <h6>Patient Name:{{appointment.patientName}}</h6>\\n\\t         <h6>Patient PhoneNo:{{appointment.patientPhoneNo}}</h6>\\n\\t\\n       </div>\\n      <div class=\\\"panel-footer\\\">\\n      <h5>Time: {{appointment.timeSlot.start.hour}}:{{appointment.timeSlot.start.minute}} \\n\\t{{appointment.timeSlot.start.meridien}}</h5>\\n      \\n      </div>\\n   </div>\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_appointment_show.html\n// module id = ../../../../../src/app/dr/html/doctor_appointment_show.html\n// module chunks = 1","module.exports = \"<h4>Add Holiday </h4>\\n<form [formGroup]=\\\"holidayForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t  <input matInput [min]=\\\"currentDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" formControlName=\\\"holidayDate\\\">\\n\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t  <mat-datepicker #picker></mat-datepicker>\\n\\t\\t</mat-form-field>\\n\\t\\t<mat-error *ngIf=\\\"holidayDate.hasError('matDatepickerMin')\\\">You Can't Add Holiday In Past</mat-error>\\n\\t</div>\\n\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"accent\\\" (click)=\\\"addHoliday()\\\" type=\\\"button\\\">Add Date</button>\\n\\t</div>\\n\\t\\n\\t\\n\\t<table class=\\\"table\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>Date</th>\\n\\t\\t\\t\\t<th>Delete</th>\\n\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor=\\\"let date of holidayDates;let i=index\\\">\\n\\t\\t\\t\\t<td>{{date.getMonth()+1}}/{{date.getDate()}}/{{date.getFullYear()}}</td>\\n\\t\\t\\t\\t<td><button mat-raised-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"deleteDate(i)\\\">\\n\\t\\t\\t\\t<i class=\\\"material-icons\\\">delete</i></button></td>\\n\\t\\t\\t</tr>\\n\\t\\t\\n\\t\\t\\n\\t\\t</tbody>\\n\\t</table>\\n\\t\\n\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_holiday.html\n// module id = ../../../../../src/app/dr/html/doctor_holiday.html\n// module chunks = 1","module.exports = \"<form [formGroup]=\\\"dateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"from\\\"  [matDatepicker]=\\\"pickerfrom\\\" placeholder=\\\"From\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerfrom\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickerfrom></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"to\\\" [matDatepicker]=\\\"pickerto\\\" placeholder=\\\"To\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickerto\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickerto></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t  \\n\\t   </mat-form-field>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Show</button>\\n\\t</div>\\n\\n\\n</form>\\n\\n\\n\\n\\n\\n<h4>List Of All Holidays</h4>\\n\\n<ul class=\\\"list-group\\\" *ngFor=\\\"let date of holidayList\\\">\\n\\n\\t<li class=\\\"list-group-item\\\">{{date*1000|date:\\\"longDate\\\"}}</li>\\n\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_holiday_show.html\n// module id = ../../../../../src/app/dr/html/doctor_holiday_show.html\n// module chunks = 1","module.exports = \"<div class=\\\"col-sm-4\\\">\\n\\n\\t<div class=\\\"list-group no-style\\\">\\n\\t\\t    <div>\\n\\t\\t  \\t<a class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" href=\\\"#appointmentMenu\\\">\\n\\t\\t  \\tAppointment <i class=\\\"caret\\\"></i></a>\\n\\t\\t    <div class=\\\"collapse\\\" id=\\\"appointmentMenu\\\">\\n\\t\\t    \\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/appointment\\\">Appointment Setup</a>\\n\\t\\t    \\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/make/appointment\\\" >Make An Appointment</a>\\n\\t\\t    \\t <a class=\\\"list-group-item\\\"  routerLink=\\\"dr/show/appointment\\\">Show All Appointment</a>\\n\\t\\t    </div>\\n\\t\\t    \\n\\t\\t  </div>\\n\\t\\t  \\n\\t\\t  <div>\\n\\t\\t    <a class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" href=\\\"#holidayMenu\\\">\\n\\t\\t    Holiday <i class=\\\"caret\\\"></i></a>\\n\\t\\t    \\n\\t\\t    <div class=\\\"collapse\\\" id=\\\"holidayMenu\\\">\\n\\t\\t    \\t<a class=\\\"list-group-item\\\" routerLink=\\\"dr/holiday\\\">Add Holiday</a>\\n\\t\\t    \\t<a class=\\\"list-group-item\\\" routerLink=\\\"dr/show/holiday\\\" >Show All Holiday</a>\\n\\t\\t    </div>\\n\\t\\t  </div>\\n\\t\\t  \\n\\t\\t  <div class=\\\"list-group-item\\\">\\n\\t\\t    <a class=\\\"nav-link\\\" routerLink=\\\"dr/panel\\\">Information Panel</a>\\n\\t\\t  </div>\\n\\t\\t  \\n\\t</div>\\n\\n</div>\\n\\n\\n\\n<div class=\\\"col-sm-8\\\">\\n\\t\\t\\n\\t<router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_home.html\n// module id = ../../../../../src/app/dr/html/doctor_home.html\n// module chunks = 1","module.exports = \"<h4>Make An Appointment</h4>\\n\\n\\n\\n<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\n\\n<mat-tab-group>\\n  <mat-tab label=\\\"Using Patient Id\\\">\\n   \\t\\t\\n   \\t\\t<form [formGroup]=\\\"appointmentForm\\\"  (ngSubmit)=\\\"submit()\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<input matInput type=\\\"text\\\" formControlName=\\\"patientId\\\"  placeholder=\\\"Enter Patient Id\\\">\\n\\t\\t<mat-error *ngIf=\\\"patientId.hasError('required')\\\" class=\\\"text-capitalize\\\">Patient Id is <strong>Required</strong></mat-error>\\n\\t\\t\\n\\t\\t\\n\\t   <mat-error *ngIf=\\\"patientId.hasError('email')\\\"  class=\\\"text-capitalize\\\">Enter A Valid Email </mat-error>\\n\\t   \\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t       <input matInput formControlName=\\\"date\\\" [min]=\\\"today\\\"  [matDatepickerFilter]=\\\"workingDayFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #picker></mat-datepicker>\\n\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t   <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"date.hasError('matDatepickerFilter')\\\" class=\\\"text-capitalize\\\" >\\n\\t\\t\\t\\t\\t Doctor is not available this day</mat-error>\\n\\t\\t\\t\\t\\t <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"date.hasError('required')\\\">Date is <strong>Required</strong></mat-error>\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"timeSlot\\\" placeholder=\\\"Choose A TimeSlot\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let timeSlot of doctor.timeSlots\\\"  [value]=\\\"timeSlot\\\">\\n\\t        {{timeSlot.start.hour}}:{{timeSlot.start.minute}} {{timeSlot.start.meridien}} To \\n\\t        {{timeSlot.end.hour}}:{{timeSlot.end.minute}} {{timeSlot.end.meridien}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t<mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"timeSlot.hasError('required')\\\">Select A TimeSlot</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\n\\n\\n        </form>\\n   \\t\\t\\n  </mat-tab>\\n  <mat-tab label=\\\"Without Patient Id\\\">\\n  \\n  \\n  <form [formGroup]=\\\"appointmentWithoutPatientId\\\" (ngSubmit)=\\\"submitWithoutId()\\\">\\n  \\t\\n  \\t\\t<div class=\\\"form-group\\\">\\n  \\t\\t\\n  \\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Patient Name\\\" formControlName=\\\"patientName\\\">\\n  \\t\\t\\t\\t\\n  \\t<mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"patientName.hasError('required')\\\">Patient Name is <strong>Required</strong></mat-error>\\n  \\t\\t\\t\\t\\n  \\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\n  \\t\\t\\t\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t<div class=\\\"form-group\\\">\\n  \\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\n  \\t\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Patient Phone No\\\" formControlName=\\\"patientPhoneNo\\\">\\n  <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"patientPhoneNo.hasError('required')\\\">Phone no is <strong>Required</strong></mat-error>\\n  <mat-error class=\\\"text-capitalize\\\" *ngIf=\\\"patientPhoneNo.hasError('minlength')\\\">Phone No should be of 10 digit</mat-error>\\t\\t\\t\\n  \\t\\t\\t</mat-form-field>\\n  \\t\\t\\n  \\t\\t</div>\\n  \\t\\t\\n  \\t\\t\\n  \\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t                  <input matInput [min]=\\\"today\\\" [matDatepickerFilter]=\\\"workingDayFilter\\\" formControlName=\\\"appointmentDate\\\"   [matDatepicker]=\\\"pickertwo\\\" placeholder=\\\"Choose a date\\\">\\n\\t\\t\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"pickertwo\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t  <mat-datepicker #pickertwo></mat-datepicker>\\n\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t  <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"date.hasError('matDatepickerFilter')\\\" class=\\\"text-capitalize\\\" >\\n\\t\\t\\t\\t\\t Doctor is not available this day</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t \\n\\t     </div>\\n\\t     \\n\\t     <div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t\\t<mat-select  placeholder=\\\"Choose A TimeSlot\\\" formControlName=\\\"appointmentTimeSlot\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let timeSlot of doctor.timeSlots\\\"  [value]=\\\"timeSlot\\\">\\n\\t        {{timeSlot.start.hour}}:{{timeSlot.start.minute}} {{timeSlot.start.meridien}} To \\n\\t        {{timeSlot.end.hour}}:{{timeSlot.end.minute}} {{timeSlot.end.meridien}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t <mat-error  class=\\\"text-capitalize\\\" *ngIf=\\\"appointmentTimeSlot.hasError('required')\\\">Select A TimeSlot</mat-error>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t </div>\\n\\t\\t \\n\\t\\t <div class=\\\"form-group\\\">\\n\\t\\t \\t\\t\\n\\t\\t \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t \\n\\t\\t </div>\\n\\t\\t\\t\\t\\n  \\n  </form>\\n  \\n  </mat-tab>\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_make_appointment.html\n// module id = ../../../../../src/app/dr/html/doctor_make_appointment.html\n// module chunks = 1","module.exports = \"<h3>List of Today's Appointments</h3>\\n\\n\\n\\n\\n<div  *ngFor=\\\"let appointment of appointments\\\">\\n\\n\\n\\t<div class=\\\"col-lg-6\\\">\\n\\t\\n\\t<div class=\\\"panel panel-info\\\">\\n\\t   <div class=\\\"panel-heading\\\">\\n    <h5>Date:{{appointment.date*1000|date:'mediumDate'}}</h5>\\n       </div>  \\n       <div class=\\\"panel-body\\\">\\n             <h6>PatientId {{appointment.patientId}}</h6>\\n\\t         <h6>Patient Name:{{appointment.patientName}}</h6>\\n\\t         <h6>Patient PhoneNo:{{appointment.patientPhoneNo}}</h6>\\n\\t\\n       </div>\\n      <div class=\\\"panel-footer\\\">\\n      <h5>Time: {{appointment.timeSlot.start.hour}}:{{appointment.timeSlot.start.minute}} \\n\\t{{appointment.timeSlot.start.meridien}}</h5>\\n      \\n      </div>\\n   </div>\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_panel.html\n// module id = ../../../../../src/app/dr/html/doctor_panel.html\n// module chunks = 1","module.exports = \"\\n\\n \\n<mat-vertical-stepper>\\n\\n\\n<mat-step [stepControl]=\\\"personalForm\\\">\\n\\t\\n\\t<ng-template matStepLabel> Personal Information</ng-template>\\n\\t\\n\\t<form [formGroup]=\\\"personalForm\\\">\\n\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input  matInput name=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\">\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"name.hasError('required')\\\">\\n\\t\\t\\t\\t\\tName is <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\n\\t\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<textarea  cols=\\\"5\\\" rows=\\\"6\\\" matInput name=\\\"about\\\" formControlName=\\\"about\\\" placeholder=\\\"Write About Yourself\\\"></textarea>\\n\\t\\t\\t<mat-hint align='start'>Write Detail About You Work</mat-hint>\\n\\t\\t\\t<mat-hint align=\\\"end\\\">{{about.value.length}}/256</mat-hint>\\n\\t\\t\\t\\n\\t\\t\\t<mat-error *ngIf=\\\"about.hasError('required')\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\tAbout is  <strong>requied</strong>\\n\\t\\t\\t</mat-error>\\n\\t\\t\\t<mat-error *ngIf=\\\"about.hasError('maxlength')\\\">\\n\\t\\t\\t\\tMaximum no of character is 256\\n\\t\\t\\t</mat-error>\\n\\t\\t</mat-form-field>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" matStepperNext >Next</button>\\n\\t\\t</div>\\n\\t\\n\\t</form>\\n\\n\\n\\n</mat-step>\\n\\n\\n\\t<mat-step [stepControl]=\\\"qualificationForm\\\">\\n\\t\\n  <ng-template matStepLabel>Add Your Qalification</ng-template>\\t\\n  \\n\\n\\t<form [formGroup]=\\\"qualificationForm\\\">\\n\\n\\t\\t   <div class=\\\"form-group\\\">\\n\\t\\t   \\n\\t\\t  <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t   \\t<mat-select placeholder=\\\"Qualification\\\" formControlName=\\\"qualifications\\\" multiple=\\\"true\\\">\\n\\t                           \\n\\t              <mat-option *ngFor=\\\"let degree of qualificationOptions\\\" [value]=\\\"degree\\\">\\n\\t              {{degree.degreeName}}\\n\\t              </mat-option>\\n            </mat-select>\\n            \\n            <mat-error *ngIf=\\\"qualifications.hasError('required')\\\">\\n\\t\\t\\t\\t\\tQualifications are<strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t   \\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t   \\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t   \\n\\t\\t   </div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Specialities\\\" formControlName=\\\"specialities\\\" multiple=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let speciality of specialities\\\" [value]=\\\"speciality\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{speciality.specialityName}}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"specialitiesControl.hasError('required')\\\">\\n\\t\\t\\t\\t\\tSpecialities are <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" matStepperPrevious type=\\\"button\\\">Previous</button>\\n\\t\\t\\t\\n\\t\\t\\t <button mat-raised-button color=\\\"primary\\\"  matStepperNext type=\\\"button\\\">Next</button>\\n\\t\\t\\t</div>\\n\\t        \\n\\t       \\n\\t\\t\\t\\t\\n\\t\\t \\n\\t   </form>\\t\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</mat-step >\\n\\t\\t\\n\\t\\t\\n\\t\\t<mat-step [stepControl]=\\\"contactForm\\\">\\n\\t\\t\\n\\t\\t\\t<ng-template matStepLabel>Add Contact Information</ng-template>\\n\\t\\t\\n\\t\\t\\t<form [formGroup]=\\\"contactForm\\\" >\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput formControlName=\\\"address\\\" type=\\\"text\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" >\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"address.hasError('required')\\\">\\n\\t\\t\\t\\t\\tAddress is <strong>required</strong>\\n\\t\\t\\t     \\t</mat-error>\\n\\t\\t\\t\\t    </mat-form-field>\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput formControlName=\\\"address2\\\" type=\\\"text\\\" name=\\\"address2\\\" placeholder=\\\"Address Line Two\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t\\t\\t   \\t<mat-select placeholder=\\\"State\\\" formControlName=\\\"state\\\" (change)=\\\"stateSelected()\\\">\\n\\t\\t\\t                           \\n\\t\\t\\t              <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">\\n\\t\\t\\t                                                {{ state.stateName }}\\n\\t\\t\\t              </mat-option>\\n\\t\\t            </mat-select>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"state.hasError('required')\\\">\\n\\t\\t\\t\\t\\tState is <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t      </mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t <mat-form-field>\\n\\t\\t   \\t\\t\\n\\t\\t   \\t\\t\\t\\t\\t\\n\\t\\t\\t\\t   \\t<mat-select placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n\\t\\t\\t                           \\n\\t\\t\\t              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.cityName\\\">\\n\\t\\t\\t                                                {{ city.cityName}}\\n\\t\\t\\t              </mat-option>\\n\\t\\t            </mat-select>\\n\\t\\t            \\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"city.hasError('required')\\\">\\n\\t\\t\\t\\t\\tCity is <strong>required</strong>\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t   \\t\\t\\n\\t\\t      </mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<span matPrefix>+91 &nbsp;</span>\\n\\t\\t\\t\\t\\t<input matInput formControlName=\\\"phoneno\\\" type=\\\"text\\\" name=\\\"phoneno\\\" placeholder=\\\"Phone No\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"phoneno.hasError('required')\\\">\\n\\t\\t\\t\\t\\tPhone No  is <strong>required</strong>\\n\\t\\t\\t\\t    </mat-error>\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t    <mat-error *ngIf=\\\"phoneno.hasError('minlength')\\\">\\n\\t\\t\\t\\t    \\tMinimum length should be 10 digit\\n\\t\\t\\t\\t    </mat-error>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t\\t<button matStepperPrevious mat-raised-button color=\\\"accent\\\" type=\\\"button\\\">Previous</button>\\n\\t\\t\\t\\t    <button matStepperNext mat-raised-button color=\\\"primary\\\"  type=\\\"button\\\">Next</button>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t</form>\\n\\t\\t</mat-step>\\n\\t\\t\\n\\t\\t<mat-step>\\n\\t\\t\\n\\t\\t\\t<ng-template matStepLabel >Review And Save </ng-template>\\n\\t\\t\\t\\n\\t\\t\\t<h4>Qualifications</h4>\\n\\t\\t\\t<p *ngFor=\\\"let qualification of qualificationForm.value.qualifications\\\">{{qualification.degreeName}}</p>\\n\\t\\t\\n\\t\\t\\t<h4>Specialities</h4>\\n\\t\\t\\t<p *ngFor=\\\"let speciality of qualificationForm.value.specialities\\\">{{speciality.specialityName}}</p>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<h4>Address:</h4>\\n\\t\\t\\t<p> {{contactForm.value.address}}  , {{contactForm.value.city}}</p>\\n\\t\\t\\t\\n\\t\\t\\t<h4>Phone no:</h4>\\n\\t\\t\\t<p>{{contactForm.value.phoneno}}</p>\\n\\t\\t    \\n\\t\\t    \\n\\t\\t    <h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t\\t\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\" type=\\\"button\\\">Previous</button>\\n\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"submit()\\\" >Save</button>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t</mat-step>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\n\\n</mat-vertical-stepper>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/dr/html/doctor_signup.html\n// module id = ../../../../../src/app/dr/html/doctor_signup.html\n// module chunks = 1","export class Error {\n    public error: boolean;\n    public errMsg: string;\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/error.ts","import { Component } from \"@angular/core\";\n\n@Component( {\n    selector: \"home\",\n    template: \"<h2> this is home </h2>\"\n} )\n\nexport class Home {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/home.ts","import { NgModule } from \"@angular/core\";\nimport {\n    MatInputModule, MatGridListModule, MatMenuModule, MatIconModule\n    , MatSidenavModule, MatListModule, MatProgressSpinnerModule, MatButtonModule\n    , MatTabsModule, MatCheckboxModule, MatRadioModule, MatStepperModule,\n    MatSelectModule, MatDatepickerModule, MatNativeDateModule, MAT_DATE_LOCALE, NativeDateAdapter\n    , DateAdapter, MAT_DATE_FORMATS, MatSlideToggleModule, MatTableModule\n\n} from \"@angular/material\";\n\n\n@NgModule( {\n    imports: [MatInputModule, MatGridListModule, MatMenuModule, MatIconModule\n        , MatSidenavModule, MatListModule, MatProgressSpinnerModule, MatButtonModule\n        , MatTabsModule, MatCheckboxModule, MatRadioModule, MatStepperModule, MatSelectModule\n        , MatDatepickerModule, MatNativeDateModule, MatSlideToggleModule, MatTableModule\n\n    ],\n\n    declarations: [],\n\n    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n\n    exports: [MatInputModule, MatGridListModule, MatMenuModule, MatIconModule\n        , MatSidenavModule, MatListModule, MatProgressSpinnerModule, MatButtonModule\n        , MatTabsModule, MatCheckboxModule, MatRadioModule, MatStepperModule, MatSelectModule\n        , MatDatepickerModule, MatNativeDateModule, MatSlideToggleModule, MatTableModule\n    ]\n} )\nexport class MaterialModule {\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/material/material.module.ts","\nimport { TimeSlot } from \"./timeslot\";\n\n\nexport class Appointment {\n\n    public appointmentId: string;\n    public date: Date;\n    public doctorId: string;\n    public patientId: string;\n    public doctorName: string;\n    public patientName: string;\n    public patientPhoneNo: string;\n    public status: string;\n    public refund: boolean;\n    public timeSlot: TimeSlot;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/appointment.ts","export class City {\n    public cityName: string;\n    public cityPincode: string;\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/city.ts","export class Degree {\n\n    public degreeName: string;\n    public degreeId: string;\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/degree.ts","export class Disease {\n    public diseaseName: string;\n    public diseaseDiscription: string;\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/disease.ts","export class FormResult {\n    public result: boolean;\n    public message: string;\n    public error: boolean;\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/formresult.ts","export class Speciality {\n    public specialityName: string;\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/speciality.ts","import { City } from \"./city\";\n\nexport class State {\n    public stateName: string;\n    public cities: City[];\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/state.ts","export class Time {\n    public hour: number;\n    public minute: number;\n    public meridien: string;\n\n\n    public stringToTime( time: string ) {\n\n        let timeArr: string[] = time.split( \":\" );\n        this.hour = parseInt( timeArr[0] );\n        this.minute = parseInt( timeArr[1] );\n        if ( this.hour > 12 ) {\n            this.meridien = \"PM\";\n            this.hour = this.hour - 12;\n        }\n\n        else {\n            this.meridien = \"AM\";\n        }\n    }\n\n    public equal( time: Time ): boolean {\n        let result: boolean = false;\n\n        if ( this.hour == time.hour && this.minute == time.minute ) {\n            if ( this.meridien == time.meridien ) {\n                result = true;\n            }\n        }\n        return result;\n\n    }\n\n    public timeToString() {\n        return this.hour.toString().concat( \" : \" ).concat( this.minute.toString() ).concat( this.meridien );\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/time.ts","import { Time } from \"./time\";\n\nexport class TimeSlot {\n    public start: Time = new Time();\n    public end: Time = new Time();\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/model/timeslot.ts","module.exports = \"\\n <div class=\\\"col-sm-4\\\">\\n \\n \\t\\t<ul class=\\\"nav flex-column \\\">\\n\\t\\t  <li class=\\\"nav-item\\\">\\n\\t\\t    <a class=\\\"nav-link active\\\" href=\\\"#\\\">Active</a>\\n\\t\\t  </li>\\n\\t\\t  <li class=\\\"nav-item\\\">\\n\\t\\t    <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n\\t\\t  </li>\\n\\t\\t  <li class=\\\"nav-item\\\">\\n\\t\\t    <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n\\t\\t  </li>\\n\\t\\t  <li class=\\\"nav-item\\\">\\n\\t\\t    <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n\\t\\t  </li>\\n\\t</ul>\\n \\n \\n </div>  \\n \\n \\n    \\n    <div class=\\\"col-sm-8\\\">\\n    \\n   \\n    \\n    <h3>Hello {{patient.name}}</h3>\\n\\n\\n<mat-horizontal-stepper>\\n \\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Choose Doctor And Time</ng-template>\\n \\t\\t\\n \\t\\t\\n<form [formGroup]=\\\"appointmentForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Choose a Doctor\\\" formControlName=\\\"selectedDoc\\\" (focusout)=\\\"drSelected()\\\">\\n\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let dr of doctors\\\" [value]=\\\"dr\\\">{{dr.name}}</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"selectedDoc.hasError('required')\\\">Please Select A Dr</mat-error>\\n\\t\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\n\\t\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput  [min]='currentDate'  [matDatepickerFilter]=\\\"holliday\\\"  formControlName=\\\"appointmentDate\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select A day\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker touchUi='true' #picker></mat-datepicker>\\n\\t\\t\\n\\t\\t\\t<mat-hint> Enter Date in (MM/DD/YYYY)</mat-hint>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('required')\\\">Please Select A Date</mat-error>\\n\\t<mat-error *ngIf=\\\"appointmentDate.hasError('matDatepickerFilter')\\\"> This day is a holiday </mat-error>\\n\\t\\t</mat-form-field>\\n   \\n\\t\\n\\t</div>\\n\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<mat-select placeholder=\\\"Choose a Time\\\" formControlName=\\\"appointmentTime\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t<mat-option *ngFor=\\\"let time of timeSlots\\\" [value]=\\\"time\\\" >\\n\\t\\t\\t\\t{{time.start }} to {{time.end}}\\n\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\n\\t\\t\\t</mat-select>\\n\\t\\t\\t<mat-error *ngIf=\\\"appointmentTime.hasError('required')\\\"> Please Select A Time</mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t</div>\\t\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n\\n</form>\\n \\t\\t\\n \\t\\n \\t\\t\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel>Pay </ng-template>\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\t\\n \\t<mat-step>\\n \\t\\t<ng-template matStepLabel> Done </ng-template>\\n \\t\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\n \\t\\t\\t<button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\n \\t\\t\\t<button mat-raised-button matStepperNext color=\\\"primary\\\">Next</button>\\n \\t\\t</div>\\n \\t</mat-step>\\n \\n </mat-horizontal-stepper>\\n      \\n\\n\\n\\n\\n    \\n    \\n    \\n    \\n  </div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/html/patient_home.html\n// module id = ../../../../../src/app/patient/html/patient_home.html\n// module chunks = 1","module.exports = \"<h2> this is the date </h2>\\n\\n{{dateOfBirth}}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/html/patient_profile.html\n// module id = ../../../../../src/app/patient/html/patient_profile.html\n// module chunks = 1","module.exports = \"<form [formGroup]=\\\"patientSignupForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t<h4 *ngIf=\\\"result.error\\\"  class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t<input matInput type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\"> \\n\\t\\t\\t<mat-error *ngIf=\\\"name.hasError('required')\\\">Name is <strong>required</strong></mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<span matPrefix>+91 &nbsp;</span>\\n\\t\\t\\t<input matInput type=\\\"text\\\" name=\\\"phoneno\\\" placeholder=\\\"Phone No\\\" formControlName=\\\"phoneno\\\" >\\n\\t\\t\\t<mat-error *ngIf=\\\"phoneno.hasError('minlength')||phoneno.hasError('maxlength')\\\">\\n\\t\\t\\tPhone No should be of 10 digit</mat-error>\\n\\t\\t\\t<mat-error *ngIf=\\\"phoneno.hasError('required')\\\">Phone No is <strong>required</strong></mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t  \\n\\t\\t\\t  <input matInput [min]='oldestDate' [max]=\\\"currentDate\\\" formControlName=\\\"dateOfBirth\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date Of Birth\\\">\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-datepicker #picker></mat-datepicker>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-hint align=\\\"start\\\">Enter Date in mm/dd/yyyy Format</mat-hint>\\n\\t\\t\\t  \\n\\t\\t\\t  \\n\\t\\t\\t  <mat-error *ngIf=\\\"dateOfBirth.hasError('matDatepickerMax')\\\">You Can't Born in Future</mat-error>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-error *ngIf=\\\"dateOfBirth.hasError('matDatepickerMin')\\\">You Are too Old</mat-error>\\n\\t\\t\\t  \\n\\t\\t\\t  <mat-error *ngIf=\\\"dateOfBirth.hasError('required')\\\">Date of Birth is <strong>required</strong>\\n\\t\\t\\t  And in (mm/dd/yyyy) format\\n\\t\\t\\t  </mat-error>\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t\\t<mat-select placeholder=\\\"If You Have any PreExisting Condition\\\" multiple=\\\"true\\\" formControlName=\\\"medcondition\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let condition of medConditions\\\" [value]=\\\"condition\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{{condition.diseaseName}}</mat-option>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Submit</button>\\n\\t\\n\\t\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/html/patient_signup.html\n// module id = ../../../../../src/app/patient/html/patient_signup.html\n// module chunks = 1","import { Disease } from \"../model/disease\";\n\n\nexport class Patient {\n    public name: string;\n    public phoneNo: string;\n    public diseases: Disease[] = new Array();\n    public dateOfBirth: Date = new Date();\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient.ts","import { Component } from \"@angular/core\";\nimport { Patient } from \"./patient\";\nimport { Doctor } from \"../dr/doctor\";\nimport { TimeSlot } from \"../model/timeslot\";\nimport { holidayValidator } from \"./holidayValidator\";\n\nimport { FormControl, FormGroup, FormBuilder, Validators, ValidatorFn } from \"@angular/forms\";\n\n@Component( {\n    selector: \"patient-home\",\n    templateUrl: \"./html/patient_home.html\"\n} )\n\nexport class PatientHome {\n\n    patient: Patient = new Patient();\n\n    // form group for the make an appointment form \n    appointmentForm: FormGroup;\n\n    showAppointmentForm: boolean = false;\n\n    currentDate: Date = new Date();\n\n    lalit: Doctor = new Doctor();\n\n    aggarwal: Doctor = new Doctor();\n\n    doctors: Doctor[] = new Array();\n\n    timeSlots: TimeSlot[] = new Array();\n\n    // month is october but we use 9 becaue date.getmonth start from 0 \n\n    holidays: Date[] = [new Date( 2017, 10, 28 ), new Date( 2017, 10, 29 )];\n\n    // doctor form control field  \n    selectedDoc: FormControl = new FormControl( '', [\n\n        Validators.required\n    ] );\n\n    // time slot for the appointment \n    appointmentTime: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    //appointment date form control \n    appointmentDate: FormControl = new FormControl( '', [\n\n        Validators.required\n    ] );\n\n    /* this is the filter on date picker it filter all the hollidays */\n\n    holliday = ( selectedDate: Date ): boolean => {\n        let currentdate: Date = new Date();\n        let result: boolean = true;\n        for ( let i = 0; i < this.holidays.length; i++ ) {\n            let currentDate = this.holidays[i];\n\n            if ( selectedDate.getTime() == currentDate.getTime() ) {\n\n                result = false;\n\n            }\n        }\n        return result;\n    };\n\n    constructor( private formBuilder: FormBuilder ) {\n\n    }\n\n    /* this function execute when user select a dr from the list and then \n     * it populate the list of time slots for that perticular dr in the \n     * timeSlots variable */\n    drSelected() {\n        this.timeSlots = this.appointmentForm.value.selectedDoc.timeSlots;\n    }\n\n\n    ngOnInit() {\n        this.patient.name = \"ashutosh\";\n\n\n        this.createDoctor();\n\n        this.appointmentForm = this.formBuilder.group( {\n\n            selectedDoc: this.selectedDoc,\n            appointmentTime: this.appointmentTime,\n            appointmentDate: this.appointmentDate\n\n        } );\n\n\n\n\n\n    }\n\n    createDoctor() {\n        this.lalit.name = \"Lalit\";\n        this.aggarwal.name = \"Aggarwal\";\n\n        let time: TimeSlot = new TimeSlot();\n        time.start.hour = 3;\n        time.start.minute = 30;\n        time.start.meridien = \"PM\";\n\n        time.end.hour = 7;\n        time.end.minute = 0;\n        time.end.meridien = \"PM\";\n\n\n        let time2: TimeSlot = new TimeSlot();\n        time.start.hour = 10;\n        time.start.minute = 0;\n        time.start.meridien = \"AM\";\n\n        time.end.hour = 1;\n        time.end.minute = 0;\n        time.end.meridien = \"PM\";\n\n\n        this.lalit.timeSlots.push( time );\n        this.lalit.timeSlots.push( time2 );\n\n        this.doctors.push( this.lalit );\n        this.doctors.push( this.aggarwal );\n    }\n\n    submit() {\n        console.log( this.appointmentForm.value );\n    }\n\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_home.ts","import { NgModule } from \"@angular/core\";\nimport { PatientRoutingModule } from \"./patient_routing_module\";\nimport { PatientSignup } from \"./patient_signup\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { PatientHome } from \"./patient_home\";\nimport { PatientService } from \"./patient_service\";\nimport { PatientProfile } from \"./patient_profile\";\n\n@NgModule( {\n    imports: [PatientRoutingModule, MaterialModule, CommonModule, ReactiveFormsModule],\n    declarations: [PatientSignup, PatientHome, PatientProfile],\n    providers: [PatientService],\n    exports: []\n} )\n\nexport class PatientModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_module.ts","import { Component } from \"@angular/core\";\nimport { PatientService } from \"./patient_service\";\nimport { Patient } from \"./patient\";\n\n\n\n@Component( {\n    selector: \"patient-profile\",\n    templateUrl: \"./html/patient_profile.html\"\n} )\n\nexport class PatientProfile {\n\n    patient: Patient = new Patient();\n\n\n\n    constructor( private patientService: PatientService ) {\n\n    }\n\n    ngOnInit() {\n\n\n        this.patientService.getPatient().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.patient = data.json();\n            }\n        } );\n\n        console.log( this.patient.dateOfBirth.toDateString() );\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_profile.ts","import { Route, Routes } from \"@angular/router\";\nimport { PatientSignup } from \"./patient_signup\";\nimport { PatientHome } from \"./patient_home\";\nimport { PatientProfile } from \"./patient_profile\";\n\nconst patientHome: Route = { path: \"patient/home\", component: PatientHome };\n\nconst patientSignup: Route = { path: 'patient/signup', component: PatientSignup };\n\nconst patientProfile: Route = { path: 'patient/profile', component: PatientProfile }\n\n\nexport const PatientRoutes: Routes = [patientSignup, patientHome, patientProfile];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_routing_config.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { PatientRoutes } from \"./patient_routing_config\";\n\n\n@NgModule( {\n    imports: [RouterModule.forChild( PatientRoutes )],\n    declarations: [],\n    exports: [RouterModule]\n} )\n\nexport class PatientRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, URLSearchParams } from \"@angular/http\";\nimport { Patient } from \"./patient\";\n\n\n@Injectable()\nexport class PatientService {\n\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n\n    constructor( private http: Http ) {\n\n    }\n\n\n    public getDiseaseList() {\n        let url = \"/api/public/disease/list\";\n        return this.http.get( url, this.commOptions );\n    }\n\n\n    /* patientsignup method takes patient class object as parameter and \n     * save it into database by sending a post request to rest services \n     * */\n\n    public patientSignup( patient: Patient ) {\n        let url = \"/api/private/patient/signup\";\n        return this.http.post( url, patient, this.commOptions );\n    }\n\n\n    public getPatient() {\n        let url = \"/api/private/get/patient\";\n        return this.http.get( url );\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_service.ts","import { Component } from \"@angular/core\";\nimport { PatientService } from \"./patient_service\";\nimport { Patient } from \"./patient\";\nimport { Disease } from \"../model/disease\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { FormResult } from \"../model/formresult\";\n\nconst REG_DATE = new RegExp( \" /^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/\" );\n\n@Component( {\n    selector: \"patient-signup\",\n    templateUrl: \"./html/patient_signup.html\"\n} )\nexport class PatientSignup {\n\n    patientSignupForm: FormGroup;\n\n    // used in the date picker to avoid user to choose future date as date of birth\n    currentDate: Date = new Date();\n    // used in the date picker to stop using date before 1900 \n    oldestDate: Date = new Date( 1900, 1, 1 );\n\n    result: FormResult = new FormResult();\n\n    // list of the medical conditions \n    medConditions: Disease[] = new Array();\n\n\n\n\n    dateOfBirth: FormControl = new FormControl( '', [\n        Validators.required\n\n    ] );\n\n    name: FormControl = new FormControl( '', [\n        Validators.required\n    ] );\n\n    phoneno: FormControl = new FormControl( '', [\n        Validators.required,\n        Validators.minLength( 10 ),\n        Validators.maxLength( 10 )\n    ] );\n\n    medcondition: FormControl = new FormControl( '', [\n\n    ] );\n\n\n    constructor( private formBuilder: FormBuilder, private patientService: PatientService ) {\n\n    }\n\n\n\n\n    ngOnInit() {\n\n        // get the list of the medical condition from the database \n        this.getListOfMedCondition();\n\n        // initialize the form group \n        this.patientSignupForm = this.formBuilder.group( {\n\n            'name': this.name,\n            'phoneno': this.phoneno,\n            'dateOfBirth': this.dateOfBirth,\n            'medcondition': this.medcondition\n        } );\n\n    }\n\n    // this method get the list of all the medical condition \n    getListOfMedCondition() {\n        this.patientService.getDiseaseList().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.medConditions = data.json();\n\n            }\n        } );\n    }\n\n    /* execute when user submit the form */\n    submit() {\n        let patient: Patient = new Patient();\n        patient.name = this.patientSignupForm.value.name;\n        patient.phoneNo = this.patientSignupForm.value.phoneno;\n        patient.dateOfBirth = this.patientSignupForm.value.dateOfBirth;\n\n\n        patient.diseases = this.patientSignupForm.value.medcondition;\n        if ( patient.diseases.length == 0 ) {\n            patient.diseases = null;\n        }\n        console.log( patient );\n        this.patientService.patientSignup( patient ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/patient/patient_signup.ts","module.exports = \"<h2>Add City In A State</h2>\\n\\n<form [formGroup]=\\\"cityForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t<h4 *ngIf=\\\"formResult.result\\\" class=\\\"text-capitalize text-success\\\">{{formResult.message}}</h4>\\n\\t<h4 *ngIf=\\\"formResult.error\\\" class=\\\"text-capitalize text-danger\\\">{{formResult.message}}</h4>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t    <mat-form-field>\\n\\t    \\n\\t    \\t <mat-select placeholder=\\\"Select A State\\\" formControlName=\\\"stateId\\\">\\n\\t     \\t\\t<mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.stateId\\\">{{state.stateName}}</mat-option>\\n\\t     \\t\\n\\t         </mat-select>\\n\\t    \\n\\t    </mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Enter City Name\\\" formControlName=\\\"cityName\\\">\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input type=\\\"text\\\"  matInput placeholder=\\\"Enter City Pincode\\\" formControlName=\\\"cityPincode\\\">\\n\\t\\t</mat-form-field>\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t</div>\\n\\n\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_city.html\n// module id = ../../../../../src/app/site_admin/html/add_city.html\n// module chunks = 1","module.exports = \"<h2>Add Degree Page</h2>\\n\\n<form [formGroup]=\\\"degreeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t<h4 *ngIf=\\\"formResult.result\\\" class=\\\"text-capitalize text-success\\\">{{formResult.message}}</h4>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input type=\\\"text\\\" matInput placeholder=\\\"Enter Degree Name\\\" formControlName=\\\"degreeName\\\">\\n\\t\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_degree.html\n// module id = ../../../../../src/app/site_admin/html/add_degree.html\n// module chunks = 1","module.exports = \"<h1 >Add Disease </h1>\\n<form [formGroup]=\\\"diseaseForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t <mat-form-field>\\n\\t\\t \\n\\t\\t \\t<input matInput type=\\\"text\\\" placeholder=\\\"Enter Disease Name\\\" formControlName=\\\"diseaseName\\\">\\n\\t\\t \\t<mat-error *ngIf=\\\"diseaseName.hasError('required')\\\">Disease Name is <strong>Required</strong></mat-error>\\n\\t\\t </mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t <mat-form-field>\\n\\t\\t \\n\\t\\t \\t<textarea matInput placeholder=\\\"Enter Disease Discription\\\" formControlName=\\\"diseaseDiscription\\\"></textarea>\\n\\t\\t \\t<mat-error *ngIf=\\\"diseaseDiscription.hasError('required')\\\">Disease Discription is \\n\\t\\t \\t<strong>Required</strong></mat-error>\\n\\t\\t </mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button  mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Submit</button>\\n\\t\\t\\n\\t</div>\\n\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_disease.html\n// module id = ../../../../../src/app/site_admin/html/add_disease.html\n// module chunks = 1","module.exports = \"<h2>Add Speciality</h2>\\n\\n<form [formGroup]=\\\"specialityForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-capitalize text-success\\\">{{result.message}}</h4>\\n\\t<h4 *ngIf=\\\"result.error\\\" class=\\\"text-capitalize text-danger\\\">{{result.message}}</h4>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<mat-form-field>\\n\\t\\t\\n\\t\\t\\t<input matInput type=\\\"text\\\" placeholder=\\\"Enter Speciality\\\" formControlName=\\\"speciality\\\">\\n\\t\\t\\n\\t\\t</mat-form-field>\\n\\t\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"text\\\" >Submit </button>\\n\\t\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_speciality.html\n// module id = ../../../../../src/app/site_admin/html/add_speciality.html\n// module chunks = 1","module.exports = \"<h1>Add State</h1>\\n<form [formGroup]=\\\"stateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\t<h4 *ngIf=\\\"result.result\\\" class=\\\"text-success text-capitalize\\\">{{result.message}}</h4>\\n\\t\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput type=\\\"text\\\" formControlName=\\\"stateName\\\" placeholder=\\\"Enter State Name\\\"> \\n\\t<mat-error *ngIf=\\\"stateName.hasError('required')\\\">State Name is <strong>Required</strong></mat-error>\\n\\t\\t</mat-form-field>\\n\\t</div>\\n\\n\\t<div class=\\\"form-group\\\">\\n\\t\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t</div>\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/add_state.html\n// module id = ../../../../../src/app/site_admin/html/add_state.html\n// module chunks = 1","module.exports = \"<h2>Site Admin Panel</h2>\\n<div class=\\\"col-md-4\\\">\\n\\n <div class=\\\"list-group\\\">\\n \\t\\t\\n \\t\\t<a class=\\\"list-group-item list-group-item-info\\\" data-toggle=\\\"collapse\\\" href=\\\"#add\\\" >Add<i class=\\\"caret\\\" ></i></a>\\n \\t\\t<div class=\\\"collapse\\\" id=\\\"add\\\">\\n \\t\\t\\t\\t\\n \\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/disease/add\\\">Add Disease</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/state/add\\\">Add State</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/city/add\\\">Add City</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/degree/add\\\">Add Degree</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/speciality/add\\\">Add Speciality</li>\\n \\t\\t\\n \\t\\t</div>\\n \\t\\t<a class=\\\"list-group-item list-group-item-info\\\" data-toggle=\\\"collapse\\\" href=\\\"#show\\\">Show<i class=\\\"caret\\\"></i></a>\\n \\t\\t\\n \\t\\t<div class=\\\"collapse\\\" id=\\\"show\\\">\\n \\t\\t\\t\\t\\n \\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/state/all\\\">State List</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/degree/list\\\">Degree List</li>\\n\\t\\t\\t\\t<li class=\\\"list-group-item\\\" routerLink=\\\"admin/disease/list\\\">Disease List</li>\\n \\t\\t\\n \\t\\t</div>\\n \\t\\n </div>\\n \\n\\n</div>\\n\\n\\n<div class=\\\"col-md-8\\\">\\n\\n\\t<router-outlet></router-outlet>\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/admin_home.html\n// module id = ../../../../../src/app/site_admin/html/admin_home.html\n// module chunks = 1","module.exports = \"<h2>list of the cities</h2>\\n\\n<div *ngFor=\\\"let city of cities\\\">\\n\\t\\n\\t<h5>Name:{{city.cityName}}</h5>\\n\\t<h6>PinCode:{{city.cityPincode}}</h6>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_city.html\n// module id = ../../../../../src/app/site_admin/html/list_city.html\n// module chunks = 1","module.exports = \"<h2> List Of Degree</h2>\\n\\n<div  *ngFor=\\\"let degree of degrees\\\">\\n\\n\\t     <ul class=\\\"list-group\\\">\\n\\t     \\n\\t     \\t<li class=\\\"list-group-item\\\">{{degree.degreeName}}</li>\\n\\t     </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_degree.html\n// module id = ../../../../../src/app/site_admin/html/list_degree.html\n// module chunks = 1","module.exports = \"<h2>List of Disease</h2>\\n\\n<div *ngFor=\\\"let disease of diseases\\\">\\n\\n\\t<ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\">{{disease.diseaseName}}</li>\\n\\t</ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_disease.html\n// module id = ../../../../../src/app/site_admin/html/list_disease.html\n// module chunks = 1","module.exports = \"<h2>List of the state</h2>\\n\\n\\n<div class=\\\"row\\\"  *ngFor=\\\"let state of states\\\">\\n\\t\\n\\t\\n\\t<ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\" ><a  [routerLink]=\\\"['admin/city/all',state.stateId]\\\"> {{state.stateName}}</a></li>\\n\\t\\n\\t</ul>\\n\\t\\n\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n\\n\\t<router-outlet></router-outlet>\\n\\t\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/html/list_state.html\n// module id = ../../../../../src/app/site_admin/html/list_state.html\n// module chunks = 1","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { State } from \"../model/state\";\nimport { City } from \"../model/city\";\nimport { FormResult } from \"../model/formresult\";\n\n@Component( {\n    selector: \"add-city\",\n    templateUrl: \"./html/add_city.html\"\n} )\nexport class SiteAdminAddCity {\n\n    cityForm: FormGroup;\n\n    formResult: FormResult = new FormResult();\n\n    states: State[] = new Array();\n\n    cityName: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    cityPincode: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    stateId: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ) {\n\n    }\n\n\n    ngOnInit() {\n        this.getAllState();\n        this.cityForm = this.formBuilder.group( {\n            cityName: this.cityName,\n            stateId: this.stateId,\n            cityPincode: this.cityPincode\n        } );\n    }\n\n    getAllState() {\n        this.siteAdminService.getAllState().subscribe(( data ) => {\n            if ( data.json() != undefined ) {\n                this.states = data.json();\n            }\n        } );\n    }\n\n\n\n    submit() {\n\n        let city: City = new City();\n        city.cityName = this.cityForm.value.cityName;\n        city.cityPincode = this.cityForm.value.cityPincode;\n        let stateId = this.cityForm.value.stateId;\n        this.siteAdminService.addCity( city, stateId ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n\n            }\n        } );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_city.ts","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\nimport { Degree } from \"../model/degree\";\nimport { FormResult } from \"../model/formresult\";\nimport { SiteAdminService } from \"./site_admin_service\";\n\n\n@Component( {\n    selector: \"add-degree\",\n    templateUrl: \"./html/add_degree.html\"\n} )\n\nexport class SiteAdminAddDegree {\n\n    degreeForm: FormGroup;\n\n    formResult: FormResult = new FormResult();\n\n    degreeName: FormControl = new FormControl( \"\", [] );\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ) {\n\n        this.degreeForm = this.formBuilder.group( {\n            degreeName: this.degreeName\n        } );\n    }\n\n\n    submit() {\n        let degree: Degree = new Degree();\n        degree.degreeName = this.degreeForm.value.degreeName;\n        this.siteAdminService.addDegree( degree ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.formResult = data.json();\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_degree.ts","import { Component } from \"@angular/core\";\nimport { Disease } from \"../model/disease\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { FormControl, FormGroup, Validators, FormBuilder } from \"@angular/forms\";\n\n\n\n@Component( {\n    selector: \"add-disease\",\n    templateUrl: \"./html/add_disease.html\"\n} )\nexport class SiteAdminAddDisease {\n\n\n    diseaseForm: FormGroup;\n\n    diseaseName: FormControl = new FormControl( \"\", [\n\n        Validators.required\n\n    ] );\n\n\n\n    diseaseDiscription: FormControl = new FormControl( \"\", [\n\n        Validators.required\n    ] );\n\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.diseaseForm = this.formBuilder.group( {\n\n            diseaseName: this.diseaseName,\n            diseaseDiscription: this.diseaseDiscription\n\n        } );\n\n\n    }\n\n    submit() {\n        let disease: Disease = new Disease();\n        disease.diseaseName = this.diseaseForm.value.diseaseName;\n        disease.diseaseDiscription = this.diseaseForm.value.diseaseDiscription;\n        this.siteAdminService.saveDisease( disease ).subscribe(( data ) => {\n            console.log( data );\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_disease.ts","import { Component } from \"@angular/core\";\n\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\nimport { Degree } from \"../model/degree\";\n\nimport { Speciality } from \"../model/speciality\";\nimport { FormResult } from \"../model/formresult\";\n\nimport { SiteAdminService } from \"./site_admin_service\";\n\n@Component( {\n    selector: \"add-speciality\",\n    templateUrl: \"./html/add_speciality.html\"\n} )\n\nexport class SiteAdminAddSpeciality {\n\n    specialityForm: FormGroup;\n\n    degrees: Degree[];\n\n    result: FormResult = new FormResult();\n\n\n\n    speciality: FormControl = new FormControl( '', [] );\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ) {\n\n    }\n\n    ngOnInit() {\n        this.getDegreelist();\n        this.specialityForm = this.formBuilder.group( {\n            speciality: this.speciality\n\n        } );\n    }\n\n    getDegreelist() {\n        this.siteAdminService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.degrees = data.json();\n            }\n        } );\n    }\n\n    submit() {\n\n        let speciality: Speciality = new Speciality();\n        speciality.specialityName = this.specialityForm.value.speciality;\n\n        this.siteAdminService.addSpeciality( speciality ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_speciality.ts","import { Component } from \"@angular/core\";\n\nimport { FormGroup, FormControl, Validators, FormBuilder } from \"@angular/forms\";\n\nimport { State } from \"../model/state\";\n\nimport { FormResult } from \"../model/formresult\";\n\nimport { SiteAdminService } from \"./site_admin_service\";\n\n\n@Component( {\n    selector: \"add-state\",\n    templateUrl: \"./html/add_state.html\"\n} )\nexport class SiteAdminAddState {\n\n    stateForm: FormGroup;\n\n    result: FormResult = new FormResult();\n\n    stateName: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n    constructor( private formBuilder: FormBuilder, private siteAdminService: SiteAdminService ) {\n\n\n    }\n\n    ngOnInit() {\n        this.stateForm = this.formBuilder.group( {\n            stateName: this.stateName\n        } );\n    }\n\n\n    submit() {\n        let state: State = new State();\n        state.stateName = this.stateForm.value.stateName;\n        this.siteAdminService.addState( state ).subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.result = data.json();\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_add_state.ts","import { Component } from \"@angular/core\";\n\n@Component( {\n    selector: \"admin-home\",\n    templateUrl: \"./html/admin_home.html\"\n} )\nexport class SiteAdminHome {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_home.ts","import { Component } from \"@angular/core\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { City } from \"../model/city\";\nimport 'rxjs/add/operator/switchMap';\n\n\n@Component( {\n    selector: \"list-city\",\n    templateUrl: \"./html/list_city.html\"\n} )\n\nexport class SiteAdminListCity {\n\n\n    stateId: string;\n\n    cities: City[];\n\n\n    constructor( private siteAdminService: SiteAdminService, private acroute: ActivatedRoute ) {\n\n\n    }\n\n    ngOnInit() {\n        this.acroute.paramMap.switchMap(( params: ParamMap ) => this.siteAdminService.getAllCity( params.get( 'stateId' ) ) )\n            .subscribe(( data ) => {\n                if ( data.text() != \"\" ) {\n                    this.cities = data.json();\n                }\n            } );\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_city.ts","import { Component } from \"@angular/core\";\nimport { FormResult } from \"../model/formresult\";\nimport { Degree } from \"../model/degree\";\nimport { SiteAdminService } from \"./site_admin_service\";\n\n@Component( {\n    selector: \"list-degree\",\n    templateUrl: \"./html/list_degree.html\"\n} )\n\nexport class SiteAdminListDegree {\n\n    formResult: FormResult = new FormResult();\n\n    degrees: Degree[];\n\n    constructor( private siteAdminService: SiteAdminService ) {\n\n    }\n\n    ngOnInit() {\n        this.siteAdminService.getAllDegree().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.degrees = data.json();\n            }\n        } );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_degree.ts","import { Component } from \"@angular/core\";\nimport { Disease } from \"../model/disease\";\nimport { SiteAdminService } from \"./site_admin_service\";\n\n\n@Component( {\n    selector: \"list-disease\",\n    templateUrl: \"./html/list_disease.html\"\n} )\n\nexport class SiteAdminListDisease {\n\n    diseases: Disease[];\n\n    constructor( private siteAdminService: SiteAdminService ) {\n\n    }\n\n    ngOnInit() {\n        this.siteAdminService.getAllDisease().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.diseases = data.json();\n            }\n        } );\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_disease.ts","import { Component } from \"@angular/core\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { State } from \"../model/state\";\n\n\n@Component( {\n    selector: \"list-state\",\n    templateUrl: \"./html/list_state.html\"\n} )\nexport class SiteAdminListState {\n\n    states: State[];\n\n\n    constructor( private siteAdminService: SiteAdminService ) {\n\n    }\n\n    ngOnInit() {\n\n        this.siteAdminService.getAllState().subscribe(( data ) => {\n            if ( data != undefined ) {\n                this.states = data.json();\n            }\n        } );\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_list_state.ts","import { NgModule } from \"@angular/core\";\n\n\nimport { SiteAdminHome } from \"./site_admin_home\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { SiteAdminAddDisease } from \"./site_admin_add_disease\";\n\nimport { SiteAdminRoutingModule } from \"./site_admin_routing_module\";\n\nimport { MaterialModule } from \"../material/material.module\";\n\nimport { SiteAdminAddState } from \"./site_admin_add_state\";\nimport { SiteAdminListState } from \"./site_admin_list_state\";\n\nimport { SiteAdminAddCity } from \"./site_admin_add_city\";\nimport { SiteAdminListCity } from \"./site_admin_list_city\";\nimport { SiteAdminService } from \"./site_admin_service\";\nimport { SiteAdminAddDegree } from \"./site_admin_add_degree\";\nimport { SiteAdminListDegree } from \"./site_admin_list_degree\";\nimport { SiteAdminListDisease } from \"./site_admin_list_disease\";\nimport { SiteAdminAddSpeciality } from \"./site_admin_add_speciality\";\n\n@NgModule( {\n    imports: [SiteAdminRoutingModule, MaterialModule, ReactiveFormsModule, CommonModule],\n    declarations: [SiteAdminAddDisease, SiteAdminAddState, SiteAdminAddCity, SiteAdminHome, SiteAdminListCity\n        , SiteAdminListState, SiteAdminAddDegree, SiteAdminListDegree, SiteAdminListDisease, SiteAdminAddSpeciality],\n    exports: [],\n    providers: [SiteAdminService]\n} )\n\nexport class SiteAdminModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_module.ts","import { Route, Routes } from \"@angular/router\";\n\nimport { SiteAdminAddDisease } from \"./site_admin_add_disease\";\n\nimport { SiteAdminAddState } from \"./site_admin_add_state\";\n\nimport { SiteAdminAddCity } from \"./site_admin_add_city\";\n\nimport { SiteAdminHome } from \"./site_admin_home\";\n\nimport { SiteAdminListCity } from \"./site_admin_list_city\";\n\nimport { SiteAdminListState } from \"./site_admin_list_state\";\n\nimport { SiteAdminAddDegree } from \"./site_admin_add_degree\";\n\nimport { SiteAdminListDegree } from \"./site_admin_list_degree\";\n\nimport { SiteAdminAddSpeciality } from \"./site_admin_add_speciality\";\n\nimport { SiteAdminListDisease } from \"./site_admin_list_disease\";\n\n\nconst siteAdminAddDisease: Route = { path: \"admin/disease/add\", component: SiteAdminAddDisease };\n\nconst siteAdminAddState: Route = { path: \"admin/state/add\", component: SiteAdminAddState };\n\nconst siteAdminAddCity: Route = { path: \"admin/city/add\", component: SiteAdminAddCity };\n\nconst siteAdminListCity: Route = { path: \"admin/city/all/:stateId\", component: SiteAdminListCity };\n\nconst siteAdminAddDegree: Route = { path: \"admin/degree/add\", component: SiteAdminAddDegree };\n\nconst siteAdminListDegree: Route = { path: \"admin/degree/list\", component: SiteAdminListDegree };\n\nconst siteAdminListDisease: Route = { path: \"admin/disease/list\", component: SiteAdminListDisease };\n\nconst siteAdminAddSpeciality: Route = { path: \"admin/speciality/add\", component: SiteAdminAddSpeciality }\n\n\nconst siteAdminListState: Route = {\n    path: \"admin/state/all\", component: SiteAdminListState, children: [\n\n        siteAdminListCity\n\n    ]\n};\n\n\nconst siteAdminHome: Route = {\n    path: \"admin/home\", component: SiteAdminHome,\n    children: [\n        siteAdminAddDisease,\n        siteAdminAddState,\n        siteAdminAddCity,\n        siteAdminListState,\n        siteAdminAddDegree,\n        siteAdminListDegree,\n        siteAdminListDisease,\n        siteAdminAddSpeciality\n    ]\n}\n\nexport const SiteAdminRoutes: Routes = [siteAdminHome];\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_routing_config.ts","import { NgModule } from \"@angular/core\";\n\nimport { SiteAdminRoutes } from \"./site_admin_routing_config\";\nimport { RouterModule } from \"@angular/router\";\n\n\n@NgModule( {\n    imports: [RouterModule.forChild( SiteAdminRoutes )],\n    declarations: [],\n    exports: [RouterModule],\n    providers: []\n} )\n\nexport class SiteAdminRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, URLSearchParams } from \"@angular/http\";\nimport { Disease } from \"../model/disease\";\nimport { Degree } from \"../model/degree\";\nimport { State } from \"../model/state\";\nimport { Speciality } from \"../model/speciality\";\nimport { City } from \"../model/city\";\n\n\n@Injectable()\nexport class SiteAdminService {\n\n\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n    constructor( private http: Http ) {\n\n    }\n\n\n    saveDisease( disease: Disease ) {\n        let url = \"/api/private/admin/disease/add\";\n        return this.http.post( url, disease, this.commOptions );\n    }\n\n\n    addState( state: State ) {\n        let url = \"/api/private/admin/state/add\";\n        return this.http.post( url, state, this.commOptions );\n    }\n\n    getAllState() {\n        let url = \"/api/public/state/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    getAllCity( stateId: string ) {\n        let url = \"/api/public/city/all\";\n        let param: URLSearchParams = new URLSearchParams();\n        param.set( \"stateId\", stateId );\n        this.commOptions.params = param;\n        return this.http.get( url, this.commOptions );\n    }\n\n    addCity( city: City, stateId: string ) {\n        let url = \"/api/private/admin/city/add\";\n        let body = { \"city\": city, \"stateId\": stateId };\n\n        return this.http.post( url, body, this.commOptions );\n    }\n\n\n    addDegree( degree: Degree ) {\n        let url = \"/api/private/degree/add\";\n        return this.http.post( url, degree, this.commOptions );\n\n    }\n\n    getAllDegree() {\n        let url = \"/api/public/degree/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    getAllDisease() {\n        let url = \"/api/public/disease/all\";\n        return this.http.get( url, this.commOptions );\n    }\n\n    addSpeciality( speciality: Speciality ) {\n        let url = \"/api/private/speciality/add\";\n        return this.http.post( url, speciality, this.commOptions );\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/site_admin/site_admin_service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fullwidth{\\n\\twidth:100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/css/login.css\n// module id = ../../../../../src/app/user/css/login.css\n// module chunks = 1","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field class=\\\"fullwidth\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input matInput required =\\\"text\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" name=\\\"email\\\">\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"email.hasError('required')\\\">\\n\\t\\t\\t\\t\\t\\tEnter the Email\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"email.hasError('pattern')\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tEnter a Valid Email\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t        <div class=\\\"form-group\\\">\\n\\t        \\n\\t        <mat-form-field class=\\\"fullwidth\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input matInput required type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" name=\\\"password\\\">\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"password.hasError('required')\\\">\\n\\t\\t\\t\\t\\t\\tEnter the Password\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t        \\n\\t        </div>\\n\\t        \\n\\t        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n</form>\\n\\t\\t\\t\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/html/login.html\n// module id = ../../../../../src/app/user/html/login.html\n// module chunks = 1","module.exports = \"   \\n  <form [formGroup]=\\\"userSignupForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  \\n  \\n  \\n  <div class=\\\"form-group\\\">\\n   \\n      <mat-form-field>\\n  \\t\\t\\t\\n  \\t\\t\\t<input matInput required type =\\\"text\\\" placeholder=\\\"Email\\\" name=\\\"username\\\" formControlName=\\\"email\\\" >\\n  \\t\\t\\t<mat-error *ngIf=\\\"email.hasError('required')\\\">\\n  \\t\\t\\t\\tEmail is <strong>required</strong>\\n  \\t\\t\\t</mat-error>\\n  \\t\\t\\t<mat-error *ngIf=\\\"email.hasError('pattern')\\\">\\n  \\t\\t\\t\\tEnter a valid Email\\n  \\t\\t\\t</mat-error>\\n  \\t\\t</mat-form-field>\\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n    \\t<mat-form-field>\\n  \\t\\t\\t<input matInput required type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n  \\t\\t\\n  \\t\\t\\t<mat-error *ngIf=\\\"password.hasError('required')\\\">\\n  \\t\\t\\t\\tPassword is <strong>required</strong>\\n  \\t\\t\\t</mat-error>\\n  \\t\\t</mat-form-field>\\n  \\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\n  \\t\\t\\t\\n  \\t\\t\\t<mat-radio-group formControlName=\\\"role\\\" name=\\\"role\\\">\\n  \\t\\t\\t\\t<mat-radio-button  value=\\\"ROLE_DOCTOR\\\">I am Doctor</mat-radio-button>\\n  \\t\\t\\t\\t<mat-radio-button value=\\\"ROLE_PATIENT\\\">I am Patient</mat-radio-button>\\n  \\t\\t\\t\\t\\n  \\t\\t\\t\\t<mat-error *ngIf=\\\"role.hasError('required')\\\">Please select an option</mat-error>\\n  \\t\\t\\t</mat-radio-group>\\n  \\t\\t\\t\\n  \\t\\t\\t\\n  \\t\\t\\t\\n  \\t\\t\\n  \\n  </div>\\n  \\n  \\n  \\n    \\t\\t\\n  \\n  \\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n  \\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/html/user_signup.html\n// module id = ../../../../../src/app/user/html/user_signup.html\n// module chunks = 1","import { Component } from \"@angular/core\";\nimport { User } from \"./user\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"./user_service\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n\n@Component( {\n    selector: \"log-in\",\n    templateUrl: \"./html/login.html\",\n    styleUrls: [\"./css/login.css\"]\n} )\n\nexport class LogIn {\n\n    model: User = new User();\n\n    loginForm: FormGroup;\n\n    email: FormControl = new FormControl( \"\", [\n\n        Validators.required,\n        Validators.pattern( EMAIL_REGEX )\n\n    ] );\n\n    password: FormControl = new FormControl( \"\", [\n        Validators.required\n\n    ] );\n\n    constructor( private formBuilder: FormBuilder, private userService: UserService, private router: Router ) {\n\n    }\n\n    ngOnInit() {\n\n        this.loginForm = this.formBuilder.group( {\n            email: this.email,\n            password: this.password\n        } );\n\n    }\n\n\n    submit() {\n        let user: User = new User();\n        user.email = this.loginForm.value.email;\n        user.password = this.loginForm.value.password;\n        this.userService.userLogin( user ).subscribe(( data ) => {\n            if ( data != undefined ) {\n\n                let res = data.url;\n                res = res.replace( \"http://localhost:8080\", \"\" );\n                this.router.navigateByUrl( res );\n\n\n            }\n        } );\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/login.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LogIn } from \"./login\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { UserRoutingModule } from \"./user_routing_module\";\nimport { UserSignup } from \"./user_signup\";\nimport { DoctorModule } from \"../dr/doctor_module\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { UserService } from \"./user_service\";\nimport { HttpModule } from \"@angular/http\";\n\n@NgModule( {\n    imports: [MaterialModule, FormsModule, UserRoutingModule, DoctorModule, CommonModule\n        , ReactiveFormsModule, HttpModule],\n    declarations: [LogIn, UserSignup],\n    providers: [UserService],\n    exports: [LogIn]\n} )\nexport class UserModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/user.module.ts","export class User {\n    public email: string;\n    public password: string;\n    public role: string;\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/user.ts","import { Route, Routes } from \"@angular/router\";\nimport { UserSignup } from \"./user_signup\";\nimport { LogIn } from \"./login\";\n\n\nconst userSignup: Route = { path: \"user/signup\", component: UserSignup };\nconst userLogin: Route = { path: \"user/login\", component: LogIn };\n\nexport const UserRoutes: Routes = [userSignup, userLogin\n\n\n\n];\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_routing_config.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { UserRoutes } from \"./user_routing_config\";\n\n@NgModule( {\n    imports: [RouterModule.forChild( UserRoutes )],\n    exports: [RouterModule],\n    declarations: []\n\n} )\n\n\nexport class UserRoutingModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_routing_module.ts","import { Injectable } from \"@angular/core\";\nimport { RequestOptions, Headers, Http } from \"@angular/http\";\nimport { User } from \"./user\";\n\n\n\n\n@Injectable()\nexport class UserService {\n\n    headers: Headers = new Headers( { 'Content-Type': 'application/json' } );\n    commOptions: RequestOptions = new RequestOptions( { headers: this.headers } );\n\n    constructor( private http: Http ) {\n\n    }\n\n\n    userSignup( user: User ) {\n\n        let url = \"/api/public/signup/user\";\n        return this.http.post( url, user, this.commOptions );\n\n    }\n\n    userLogin( user: User ) {\n        let url = \"/user/login\";\n\n        let body = new URLSearchParams();\n\n        body.set( \"userName\", user.email );\n        body.set( \"password\", user.password );\n\n        let headers = new Headers( { 'Content-Type': 'application/x-www-form-urlencoded' } );\n\n        let options = new RequestOptions( { headers: headers } );\n\n        return this.http.post( url, body.toString(), options );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_service.ts","import { Component } from \"@angular/core\";\nimport { Error } from \"../error\";\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { User } from \"./user\";\nimport { UserService } from \"./user_service\";\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n\n@Component( {\n    selector: \"user-signup\",\n    templateUrl: \"./html/user_signup.html\"\n} )\nexport class UserSignup {\n\n\n    model: any = new Object();\n    error: Error = new Error();\n\n\n    userSignupForm: FormGroup;\n\n    email: FormControl = new FormControl( \"\", [\n        Validators.required,\n        Validators.pattern( EMAIL_REGEX )\n    ] );\n    role: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n    password: FormControl = new FormControl( \"\", [\n        Validators.required\n    ] );\n\n\n    constructor( private formBuilder: FormBuilder, private userService: UserService ) {\n\n    }\n\n    ngOnInit() {\n        this.userSignupForm = this.formBuilder.group( {\n            email: this.email,\n            role: this.role,\n            password: this.password\n        } );\n    }\n\n    submit() {\n\n        let user: User = new User();\n        user.email = this.userSignupForm.value.email;\n        user.password = this.userSignupForm.value.password;\n        user.role = this.userSignupForm.value.role;\n\n        this.userService.userSignup( user ).subscribe(( data ) => {\n            console.log( data );\n        } );\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/app/user/user_signup.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif ( environment.production ) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule( AppModule );\n\n\n\n// WEBPACK FOOTER //\n// /home/ashu/git/edr/edr/src/main/webapp/src/main.ts"],"sourceRoot":""}